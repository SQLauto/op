<?xml version="1.0" encoding="utf-8"?>
<DataSchemaModel FileFormatVersion="1.2" SchemaVersion="2.4" DspName="Microsoft.Data.Tools.Schema.Sql.Sql110DatabaseSchemaProvider" CollationLcid="1033" CollationCaseSensitive="False" xmlns="http://schemas.microsoft.com/sqlserver/dac/Serialization/2012/02">
	<Header>
		<CustomData Category="AnsiNulls">
			<Metadata Name="AnsiNulls" Value="True" />
		</CustomData>
		<CustomData Category="QuotedIdentifier">
			<Metadata Name="QuotedIdentifier" Value="True" />
		</CustomData>
		<CustomData Category="CompatibilityMode">
			<Metadata Name="CompatibilityMode" Value="110" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="CLR_Util.dll" />
			<Metadata Name="FileName" Value="C:\USERS\SHARONR\DROPBOX\DBA_ADMIN_OP\DBA_ADMIN_OP\ASSEMBLIES\CLR_UTIL.DLL" />
			<Metadata Name="AssemblyName" Value="CLR_Util" />
			<Metadata Name="PermissionSet" Value="UNSAFE" />
			<Metadata Name="Owner" Value="dbo" />
			<Metadata Name="GenerateSqlClrDdl" Value="False" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="False" />
			<Metadata Name="AssemblySymbolsName" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="clrEventViewer.dll" />
			<Metadata Name="FileName" Value="C:\USERS\SHARONR\DROPBOX\DBA_ADMIN_OP\DBA_ADMIN_OP\ASSEMBLIES\CLREVENTVIEWER.DLL" />
			<Metadata Name="AssemblyName" Value="clrEventViewer" />
			<Metadata Name="PermissionSet" Value="UNSAFE" />
			<Metadata Name="Owner" Value="dbo" />
			<Metadata Name="GenerateSqlClrDdl" Value="False" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="False" />
			<Metadata Name="AssemblySymbolsName" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="Customs_Util.dll" />
			<Metadata Name="FileName" Value="C:\USERS\SHARONR\DROPBOX\DBA_ADMIN_OP\DBA_ADMIN_OP\ASSEMBLIES\CUSTOMS_UTIL.DLL" />
			<Metadata Name="AssemblyName" Value="Customs_Util" />
			<Metadata Name="PermissionSet" Value="EXTERNAL_ACCESS" />
			<Metadata Name="Owner" Value="dbo" />
			<Metadata Name="GenerateSqlClrDdl" Value="False" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="False" />
			<Metadata Name="AssemblySymbolsName" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="FileSystemHelper.dll" />
			<Metadata Name="FileName" Value="C:\USERS\SHARONR\DROPBOX\DBA_ADMIN_OP\DBA_ADMIN_OP\ASSEMBLIES\FILESYSTEMHELPER.DLL" />
			<Metadata Name="AssemblyName" Value="FileSystemHelper" />
			<Metadata Name="PermissionSet" Value="EXTERNAL_ACCESS" />
			<Metadata Name="Owner" Value="dbo" />
			<Metadata Name="GenerateSqlClrDdl" Value="False" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="False" />
			<Metadata Name="AssemblySymbolsName" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="SP_execute.dll" />
			<Metadata Name="FileName" Value="C:\USERS\SHARONR\DROPBOX\DBA_ADMIN_OP\DBA_ADMIN_OP\ASSEMBLIES\SP_EXECUTE.DLL" />
			<Metadata Name="AssemblyName" Value="SP_execute" />
			<Metadata Name="PermissionSet" Value="UNSAFE" />
			<Metadata Name="Owner" Value="dbo" />
			<Metadata Name="GenerateSqlClrDdl" Value="False" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="False" />
			<Metadata Name="AssemblySymbolsName" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="DBA_Admin_OP.dll" />
			<Metadata Name="FileName" Value="C:\USERS\SHARONR\DROPBOX\DBA_ADMIN_OP\DBA_ADMIN_OP\OBJ\DEBUG\DBA_ADMIN_OP.DLL" />
			<Metadata Name="AssemblyName" Value="DBA_Admin_OP" />
			<Metadata Name="PermissionSet" Value="SAFE" />
			<Metadata Name="Owner" Value="" />
			<Metadata Name="GenerateSqlClrDdl" Value="True" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="True" />
			<Metadata Name="AssemblySymbolsName" Value="C:\Users\sharonr\Dropbox\DBA_Admin_OP\DBA_Admin_OP\obj\Debug\DBA_Admin_OP.pdb" />
		</CustomData>
		<CustomData Category="SqlCmdVariables" Type="SqlCmdVariable" />
	</Header>
	<Model>
		<Element Type="SqlDatabaseOptions">
			<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
			<Property Name="IsAnsiNullDefaultOn" Value="True" />
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Property Name="IsAnsiWarningsOn" Value="True" />
			<Property Name="IsArithAbortOn" Value="True" />
			<Property Name="IsConcatNullYieldsNullOn" Value="True" />
			<Property Name="IsTornPageProtectionOn" Value="False" />
			<Property Name="RecoveryMode" Value="1" />
			<Property Name="IsFullTextEnabled" Value="True" />
			<Property Name="IsTrustworthyOn" Value="True" />
			<Property Name="ServiceBrokerOption" Value="1" />
			<Property Name="DefaultLanguage" Value="" />
			<Property Name="DefaultFullTextLanguage" Value="" />
			<Relationship Name="DefaultFilegroup">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[PRIMARY]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlSchema" Name="[_Admin_]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[_Admin_].[DriveAlert]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[DriveAlert].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[DriveAlert].[DriveName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="3" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[char]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[DriveAlert].[Description]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[DriveAlert].[Percent]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[DriveAlert].[LastSample]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="3" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[_Admin_].[PK_DriveAlert]">
			<Property Name="FillFactor" Value="90" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[_Admin_].[DriveAlert].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[_Admin_].[DriveAlert]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="3" />
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexEscape]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegExEscape" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexEscape].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexIndex]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegExIndex" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexIndex].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexIndex].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[int]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexIsMatch]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegExIsMatch" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexIsMatch].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexIsMatch].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[bit]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexMatch]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegExMatch" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatch].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatch].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexMatchGroupAt]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegexMatchGroupAt" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupAt].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupAt].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupAt].[@groupName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupAt].[@captureIndex]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptureCount]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegexMatchGroupCaptureCount" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptureCount].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptureCount].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptureCount].[@groupName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[int]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlMultiStatementTableValuedFunction" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptures]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptures].[Captures]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="FillRowMethodName" Value="FillCaptures" />
						<Property Name="MethodName" Value="RegexMatchGroupCaptures" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptures].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptures].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupCaptures].[@groupName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexAt]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegexMatchGroupIndexAt" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexAt].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexAt].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexAt].[@groupIndex]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexAt].[@captureIndex]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptureCount]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegexMatchGroupIndexCaptureCount" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptureCount].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptureCount].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptureCount].[@groupIndex]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[int]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlMultiStatementTableValuedFunction" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptures]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptures].[Captures]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="FillRowMethodName" Value="FillCaptures" />
						<Property Name="MethodName" Value="RegexMatchGroupIndexCaptures" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptures].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptures].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexMatchGroupIndexCaptures].[@groupIndex]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexReplace]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="DataAccess" Value="0" />
						<Property Name="SystemDataAccess" Value="0" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegExReplace" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexReplace].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexReplace].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexReplace].[@replacement]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexReplaceCodeFormat]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="DataAccess" Value="0" />
						<Property Name="SystemDataAccess" Value="0" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegExReplaceCodeFormat" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexReplaceCodeFormat].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[_Admin_].[ufn_clr_RegexReplacex]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="DataAccess" Value="0" />
						<Property Name="SystemDataAccess" Value="0" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegExReplacex" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexReplacex].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexReplacex].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexReplacex].[@replacement]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlMultiStatementTableValuedFunction" Name="[_Admin_].[ufn_clr_RegexSplit]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[_Admin_].[ufn_clr_RegexSplit].[Split]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="FillRowMethodName" Value="FillRow" />
						<Property Name="MethodName" Value="RegexSplit" />
						<Property Name="ClassName" Value="CLR_Util.SqlServerRegex" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[CLR_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexSplit].[@input]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[ufn_clr_RegexSplit].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_CleanOldData]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	IF @Date IS NULL SET @Date = DATEADD(DAY,-30,GETDATE());

	BEGIN TRANSACTION
		DELETE FROM [Server].[LongRunningQuery] WHERE [DateTaken] < @Date;
	COMMIT
	BEGIN TRANSACTION
		DELETE FROM [Server].[SessionInfo] WHERE [DateTaken] < @Date;
	COMMIT
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[_Admin_].[usp_CleanOldData].[@Date]" />
				</Entry>
				<Entry>
					<References Name="[Server].[LongRunningQuery]" />
				</Entry>
				<Entry>
					<References Name="[Server].[LongRunningQuery].[DateTaken]" />
				</Entry>
				<Entry>
					<References Name="[Server].[SessionInfo]" />
				</Entry>
				<Entry>
					<References Name="[Server].[SessionInfo].[DateTaken]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_CleanOldData].[@Date]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[date]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="173" />
				<Property Name="Length" Value="526" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 07/04/2016&#xD;&#xA;-- Description:&#x9;CleanUP&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [_Admin_].[usp_CleanOldData]&#xD;&#xA;&#x9;@Date DATE = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_clr_CleanBuffer]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="usp_clr_CleanBuffer" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[CLR_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_CleanBuffer].[@ServerName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_CleanBuffer].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_CleanBuffer].[@LoginName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_CleanBuffer].[@Password]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_CleanBuffer].[@ShortSPName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_CleanBuffer].[@InnerCLRError]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="2048" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_clr_ExecuteByDotNet]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="usp_clr_ExecuteByDotNet" />
			<Property Name="ClassName" Value="CLR_Util.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[CLR_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_ExecuteByDotNet].[@ServerName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_ExecuteByDotNet].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_ExecuteByDotNet].[@LoginName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_ExecuteByDotNet].[@Password]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_ExecuteByDotNet].[@TSQL]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_ExecuteByDotNet].[@Timeout]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_ExecuteByDotNet].[@Duration]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_clr_GetParameterTable]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="usp_clr_GetParameterTable" />
			<Property Name="ClassName" Value="CLR_Util.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[CLR_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetParameterTable].[@ServerName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetParameterTable].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetParameterTable].[@LoginName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetParameterTable].[@Password]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetParameterTable].[@TSQL]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetParameterTable].[@InnerCLRError]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="2048" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_clr_GetServerPrincipals]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="usp_clr_GetServerPrincipals" />
			<Property Name="ClassName" Value="CLR_Util.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[CLR_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetServerPrincipals].[@ServerName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetServerPrincipals].[@LoginName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetServerPrincipals].[@Password]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetServerPrincipals].[@InnerCLRError]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="2048" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_clr_GetSPParameterTypeByDotNet]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="usp_clr_GetSPParameterTypeByDotNet" />
			<Property Name="ClassName" Value="CLR_Util.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[CLR_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetSPParameterTypeByDotNet].[@ServerName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetSPParameterTypeByDotNet].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetSPParameterTypeByDotNet].[@LoginName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetSPParameterTypeByDotNet].[@Password]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetSPParameterTypeByDotNet].[@ShortSPName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_clr_GetSPParameterTypeByDotNet].[@ShartSPSchema]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_CopyLogin]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @cmd NVARCHAR(MAX) = N'';

-- Scripting Out the Logins To Be Created
SELECT @cmd+= N'
-- Logins To Be Created --
IF (SUSER_ID('+QUOTENAME(SP.name,'''')+') IS NOT NULL) 
BEGIN 
	DROP LOGIN ' +QUOTENAME(SP.name)+ ';
END
	CREATE LOGIN ' +QUOTENAME(SP.name)+
			   CASE 
					WHEN SP.type_desc = 'SQL_LOGIN' THEN ' WITH 
		PASSWORD = ' +CONVERT(NVARCHAR(MAX),SL.password_hash,1)+ ' HASHED, 
		CHECK_EXPIRATION = ' + CASE WHEN SL.is_expiration_checked = 1 THEN 'ON' ELSE 'OFF' END +', 
		CHECK_POLICY = ' +CASE WHEN SL.is_policy_checked = 1 THEN 'ON,' ELSE 'OFF,' END
					ELSE ' FROM WINDOWS WITH'
				END 
	   +' DEFAULT_DATABASE=[' +SP.default_database_name+ '], 
		DEFAULT_LANGUAGE=[' +SP.default_language_name+ '] '
		+ CASE SP.type WHEN 'S' THEN ',SID = ' + CONVERT(NVARCHAR(MAX),SP.sid,1) COLLATE SQL_Latin1_General_CP1_CI_AS --AS [-- Logins To Be Created --]
		ELSE '' END
FROM	sys.server_principals AS SP 
		LEFT JOIN sys.sql_logins AS SL ON SP.principal_id = SL.principal_id
WHERE	SP.type IN ('S','G','U')
		AND SP.name NOT LIKE '##%##'
		AND SP.name NOT LIKE 'NT AUTHORITY%'
		AND SP.name NOT LIKE 'NT SERVICE%'
		AND SP.name <> ('sa')
		AND EXISTS(SELECT SP.name INTERSECT SELECT @LoginName);
 /*
 IF (SUSER_ID('centerity') IS NULL) BEGIN CREATE LOGIN [centerity] WITH PASSWORD = 0x0200A9E5B3C5F4F92EAC3C975F46A0DB3A55AD37ED1B1353A1DE6B665BBBECF857DDBB4BBCE5643F7C1C3D62FCF104D1CE3D9D178D4B5324F2451F5FBE17F54B2C28078AF8D9 HASHED, CHECK_EXPIRATION = OFF, CHECK_POLICY = OFF, DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english] END;
 */
-- Scripting Out the Role Membership to Be Added
SELECT @cmd+= N'
-- Server Roles the Logins Need to be Added --
EXEC master..sp_addsrvrolemember @loginame = N''' + SL.name + ''', @rolename = N''' + SR.name + '''
' --AS [-- Server Roles the Logins Need to be Added --]
FROM master.sys.server_role_members SRM
	INNER JOIN master.sys.server_principals SR ON SR.principal_id = SRM.role_principal_id
	INNER JOIN master.sys.server_principals SL ON SL.principal_id = SRM.member_principal_id
WHERE SL.type IN ('S','G','U')
		AND SL.name NOT LIKE '##%##'
		AND SL.name NOT LIKE 'NT AUTHORITY%'
		AND SL.name NOT LIKE 'NT SERVICE%'
		AND SL.name <> ('sa')
		AND EXISTS(SELECT SL.name INTERSECT SELECT @LoginName);
 
 
-- Scripting out the Permissions to Be Granted
SELECT @cmd+= N'
-- Server Level Permissions to Be Granted --
' +
	CASE WHEN SrvPerm.state_desc <> 'GRANT_WITH_GRANT_OPTION' 
		THEN SrvPerm.state_desc 
		ELSE 'GRANT' 
	END
    + ' ' + SrvPerm.permission_name + ' TO [' + SP.name + ']' + 
	CASE WHEN SrvPerm.state_desc <> 'GRANT_WITH_GRANT_OPTION' 
		THEN '' 
		ELSE ' WITH GRANT OPTION' 
	END collate database_default --AS [-- Server Level Permissions to Be Granted --] 
FROM	sys.server_permissions AS SrvPerm 
		INNER JOIN sys.server_principals AS SP ON SrvPerm.grantee_principal_id = SP.principal_id 
WHERE   SP.type IN ( 'S', 'U', 'G' ) 
		AND SP.name NOT LIKE '##%##'
		AND SP.name NOT LIKE 'NT AUTHORITY%'
		AND SP.name NOT LIKE 'NT SERVICE%'
		AND SP.name <> ('sa')
		AND EXISTS(SELECT SP.name INTERSECT SELECT @LoginName);

		PRINT @cmd;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_CopyLogin].[@LoginName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_CopyLogin].[@LoginName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="173" />
				<Property Name="Length" Value="3460" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 22/12/2016&#xD;&#xA;-- Description:&#x9;CleanUP&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [_Admin_].[usp_CopyLogin]&#xD;&#xA;&#x9;@LoginName sysname = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_CopyMaintenancePlan]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @cmd NVARCHAR(MAX) = N'';

-- Scripting Out the Logins To Be Created
SELECT  @cmd = @cmd + 
N'
INSERT msdb.dbo.sysssispackages VALUES(' + 
ISNULL(N'''' + name + N'''',N'NULL') + N',
' + ISNULL(N'N''' + CONVERT(NVARCHAR(36),id) + N'''', N'NULL') + N',
' + ISNULL(N'N''' + description + N'''', N'N''Copied Maintenance Plan''') + N',
' + ISNULL(N'N''' + CONVERT(NVARCHAR(25),createdate,121) + N'''', N'NULL') + N',
' + ISNULL(N'N''' + CONVERT(NVARCHAR(36),folderid) + N'''', N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(MAX),ownersid,1), N'NULL') + N',
' + vp.Pkg + N',
' + ISNULL(CONVERT(NVARCHAR(50),packageformat), N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(50),packagetype), N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(50),vermajor), N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(50),verminor), N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(50),verbuild), N'NULL') + N',
' + ISNULL(N'N''' + vercomments + N'''', N'NULL') + N',
' + ISNULL(N'N''' + CONVERT(NVARCHAR(36),verid) + N'''', N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(2),isencrypted), N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(MAX),readrolesid,1), N'NULL') + N',
' + ISNULL(CONVERT(NVARCHAR(MAX),writerolesid,1),N'NULL') + N');
GO

'    
FROM
    msdb.dbo.sysssispackages AS P
	CROSS APPLY (SELECT TOP 1 ISNULL(CONVERT(NVARCHAR(MAX),cast(
    cast(
        replace(
            cast(
                CAST(P.packagedata AS VARBINARY(MAX)) AS varchar(max)
            ), 
       @@SERVERNAME, N'ANAF\ANAF') 
    as XML) 
as VARBINARY(MAX)),1) ,N'NULL') Pkg)VP
WHERE        
    (P.name LIKE 'mp%' AND P.description IS NULL)
	AND (@MaintenancePlanName IS NULL OR P.name = @MaintenancePlanName);
	
	EXECUTE [_Admin].[dbo].[PrintMax] @cmd;
	SELECT @cmd
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varbinary]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varbinary]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_CopyMaintenancePlan].[@MaintenancePlanName]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_CopyMaintenancePlan].[@MaintenancePlanName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="181" />
				<Property Name="Length" Value="2060" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 22/12/2016&#xD;&#xA;-- Description:&#x9;MaintenancePlan&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [_Admin_].[usp_CopyMaintenancePlan]&#xD;&#xA;&#x9;@MaintenancePlanName sysname = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_GetJobStatus]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	
	--IF OBJECT_ID('tempdb..#MPLog') IS NOT NULL DROP TABLE #MPLog;
	--CREATE TABLE #MPLog(MP_Name NVARCHAR(1000),FLog NVARCHAR(MAX));
	--EXEC [_Admin_].[usp_GetMPLogs];

	IF EXISTS(SELECT TOP 1 1 FROM SYS.databases D WHERE D.name = 'SSIS')
	BEGIN
		SELECT	j.name [JobName],
				js.step_id [StepID],
				js.step_name [StepName],
				--js.database_name [ExecutingDBOnJob],
				CASE 
				WHEN JSS.[SubSystem] = 'Maintenance Plans(SSIS)' AND MP.Error COLLATE DATABASE_DEFAULT != '' THEN LR.last_run_outcome + ' + Minor Errors'
				WHEN LR.last_run_datetime >= ISNULL(xSDT.StartDateTime,JxA.run_requested_date) OR ST.StepID IS NULL THEN LR.last_run_outcome 
						ELSE 'Did not run' END	[Outcome],
				CASE WHEN LR.last_run_datetime >= ISNULL(xSDT.StartDateTime,JxA.run_requested_date) THEN case WHEN ST.StepID IS NULL THEN null
									else LR.last_run_datetime END
						ELSE NULL END [LastRunDatetime] ,
				[Utility].[ufn_DATEDIFF2String](CASE WHEN LR.last_run_datetime >= ISNULL(xSDT.StartDateTime,JxA.run_requested_date) THEN case WHEN ST.StepID IS NULL THEN null
									else LR.last_run_datetime END
						ELSE NULL END,GETDATE()) [Diff],
			   JSS.[SubSystem],
			   CASE WHEN LR.last_run_datetime >= xSDT.StartDateTime THEN
					   CASE  
						WHEN JSS.[SubSystem] = 'Maintenance Plans(SSIS)' THEN CASE WHEN MP.Error COLLATE DATABASE_DEFAULT = '' THEN JH.message ELSE ISNULL(MP.Error COLLATE DATABASE_DEFAULT,JH.message) END
						WHEN LR.last_run_outcome = 'Failed' AND JS.subsystem = 'SSIS' THEN JH.message
						WHEN LR.last_run_outcome = 'Failed' AND JS.subsystem = 'TSQL' THEN JH.message
					   ELSE NULL END 
			   ELSE NULL END [Message],
			   CASE WHEN J.description LIKE '%report server%' THEN 'Report Server, ' ELSE '' END + ISNULL('Alert - ' + Al.name + ', ','') + ISNULL('Schedule - ' + SCH.name,'') [Caller]
		FROM	msdb.dbo.sysjobs j
				INNER JOIN msdb.dbo.sysjobsteps js ON j.job_id = js.job_id
				CROSS APPLY(SELECT TOP 1 CASE WHEN patINDEX('%"Maintenance Plans\%',js.command) > 0 THEN 'Maintenance Plans(SSIS)' ELSE
				CASE js.subsystem
			WHEN 'ActiveScripting' THEN 'ActiveX Script'
			WHEN 'CmdExec' THEN 'Operating system (CmdExec)'
			WHEN 'PowerShell' THEN 'PowerShell'
			WHEN 'Distribution' THEN 'Replication Distributor'
			WHEN 'Merge' THEN 'Replication Merge'
			WHEN 'QueueReader' THEN 'Replication Queue Reader'
			WHEN 'Snapshot' THEN 'Replication Snapshot'
			WHEN 'LogReader' THEN 'Replication Transaction-Log Reader'
			WHEN 'ANALYSISCOMMAND' THEN 'SQL Server Analysis Services Command'
			WHEN 'ANALYSISQUERY' THEN 'SQL Server Analysis Services Query'
			WHEN 'SSIS' THEN 'SQL Server Integration Services Package'
			WHEN 'TSQL' THEN 'Transact-SQL script (T-SQL)'
			ELSE js.subsystem END
		  END AS [SubSystem]) JSS
				LEFT JOIN (SELECT	DISTINCT Ij.name,ISNULL(IIF(LAG(Ijs.on_success_step_id) OVER(ORDER BY Ijs.step_id) = 0,Ijs.step_id,LAG(Ijs.on_success_step_id) OVER(ORDER BY Ijs.step_id)),Ijs.step_id) StepID
							FROM	msdb.dbo.sysjobs Ij
									inner join msdb.dbo.sysjobsteps Ijs on Ij.job_id = Ijs.job_id
									) ST ON ST.StepID = JS.step_id and ST.name = j.name
				CROSS APPLY (SELECT TOP 1 msdb.dbo.agent_datetime(
								   case when js.last_run_date = 0 then NULL else js.last_run_date end,
								   case when js.last_run_time = 0 then NULL else js.last_run_time end) last_run_datetime,
								   case WHEN ST.StepID IS NULL THEN 'Disabled'
									when js.last_run_outcome = 0 then 'Failed'
									when js.last_run_outcome = 1 then 'Succeeded'
									when js.last_run_outcome = 2 then 'Retry'
									when js.last_run_outcome = 3 then 'Canceled'
									else 'Unknown'
								   end AS last_run_outcome
								   ) LR
				LEFT JOIN msdb.dbo.sysjobhistory JH ON j.job_id = JH.job_id
					AND JH.step_id = JS.step_id
					AND msdb.dbo.agent_datetime(JH.run_date,JH.run_time) = case WHEN ST.StepID IS NULL THEN null else LR.last_run_datetime END
				LEFT JOIN msdb..sysalerts Al ON Al.job_id = j.job_id
				OUTER APPLY (SELECT TOP 1 s2.name FROM msdb..sysjobschedules S INNER JOIN msdb..sysschedules S2 ON S2.schedule_id = S.schedule_id WHERE j.job_id = s.job_id)SCH
				--LEFT JOIN #MPLog MP ON j.name LIKE MP.MP_Name + '%'
				OUTER APPLY (SELECT REPLACE(REPLACE(T.Error,'<X>',''),'</X>','')
							FROM	(SELECT  ld.error_message  X
									FROM    msdb..sysmaintplan_plans mp
											INNER JOIN msdb..sysmaintplan_subplans msp ON mp.id = msp.plan_id
											OUTER APPLY (SELECT TOP 1 * FROM msdb..sysmaintplan_log mpl WHERE msp.subplan_id = mpl.subplan_id ORDER BY mpl.start_time DESC)mpl
											LEFT JOIN msdb..sysmaintplan_logdetail ld ON mpl.task_detail_id = ld.task_detail_id
									WHERE   j.name LIKE mp.name + '%'
									FOR XML PATH(''))T(Error))MP(Error)
				OUTER APPLY (SELECT	TOP 1 [StartDateTime] = msdb.dbo.agent_datetime(
									   CASE WHEN xjs.last_run_date = 0 then NULL else xjs.last_run_date end,
									   CASE WHEN xjs.last_run_time = 0 then NULL else xjs.last_run_time end)
								FROM	msdb.dbo.sysjobsteps xjs
										LEFT JOIN (SELECT	ja.job_id,
															j.name AS job_name,
															ja.start_execution_date,      
															ISNULL(last_executed_step_id,0)+1 AS current_executed_step_id,
															Js.step_name
													FROM	msdb.dbo.sysjobactivity ja 
															LEFT JOIN msdb.dbo.sysjobhistory jh ON ja.job_history_id = jh.instance_id
															INNER JOIN msdb.dbo.sysjobs j ON ja.job_id = j.job_id
															INNER JOIN msdb.dbo.sysjobsteps js ON ja.job_id = js.job_id
																AND ISNULL(ja.last_executed_step_id,0)+1 = js.step_id
													WHERE	ja.session_id = (SELECT TOP 1 session_id FROM msdb.dbo.syssessions ORDER BY agent_start_date DESC)
															AND start_execution_date is not null
															AND stop_execution_date is null)Ac ON aC.job_id = xjs.job_id
								WHERE	j.job_id = xjs.job_id
										AND (Ac.start_execution_date != msdb.dbo.agent_datetime(case when xjs.last_run_date = 0 then NULL else xjs.last_run_date end,
									   case when xjs.last_run_time = 0 then NULL else xjs.last_run_time end) or Ac.start_execution_date is null)
								order by xjs.step_id)xSDT
				OUTER APPLY (SELECT	TOP 1 ja.run_requested_date FROM msdb.dbo.sysjobactivity ja WHERE j.job_id = ja.job_id ORDER BY ja.run_requested_date desc)JxA
				OUTER APPLY( SELECT  TOP 1 MESSAGE--,event_message_id,package_name,event_name,message_source_name,package_path,execution_path,message_type,message_source_type
							   FROM    SSISDB.catalog.event_messages em
							   WHERE   em.package_name COLLATE database_default = RIGHT( SUBSTRING(js.command,0,patINDEX('%.dtsx%',js.command)), CHARINDEX( '\', REVERSE( SUBSTRING(js.command,0,patINDEX('%.dtsx%',js.command))) + '\' ) - 1 ) +N'.dtsx'
										--AND em.operation_id = (SELECT MAX(execution_id) FROM SSISDB.catalog.executions)
										AND event_name = 'OnError'
						ORDER BY event_message_id DESC
				)SS
  
		WHERE	j.enabled = 1
		ORDER BY j.name,js.step_id;
	END
	ELSE
	BEGIN
		SELECT	j.name [JobName],
				js.step_id [StepID],
				js.step_name [StepName],
				--js.database_name [ExecutingDBOnJob],
				CASE 
				WHEN JSS.[SubSystem] = 'Maintenance Plans(SSIS)' AND MP.Error COLLATE DATABASE_DEFAULT != '' THEN LR.last_run_outcome + ' + Minor Errors'
				WHEN LR.last_run_datetime >= ISNULL(xSDT.StartDateTime,JxA.run_requested_date) OR ST.StepID IS NULL THEN LR.last_run_outcome 
						ELSE 'Did not run' END	[Outcome],
				CASE WHEN LR.last_run_datetime >= ISNULL(xSDT.StartDateTime,JxA.run_requested_date) THEN case WHEN ST.StepID IS NULL THEN null
									else LR.last_run_datetime END
						ELSE NULL END [LastRunDatetime] ,
				[Utility].[ufn_DATEDIFF2String](CASE WHEN LR.last_run_datetime >= ISNULL(xSDT.StartDateTime,JxA.run_requested_date) THEN case WHEN ST.StepID IS NULL THEN null
									else LR.last_run_datetime END
						ELSE NULL END,GETDATE()) [Diff],
			   JSS.[SubSystem],
			   CASE WHEN LR.last_run_datetime >= xSDT.StartDateTime THEN
					   CASE 
						WHEN JSS.[SubSystem] = 'Maintenance Plans(SSIS)' THEN CASE WHEN MP.Error COLLATE DATABASE_DEFAULT = '' THEN JH.message ELSE ISNULL(MP.Error COLLATE DATABASE_DEFAULT,JH.message) END
						WHEN LR.last_run_outcome = 'Failed' AND JS.subsystem = 'SSIS' THEN JH.message
						WHEN LR.last_run_outcome = 'Failed' AND JS.subsystem = 'TSQL' THEN JH.message
					   ELSE NULL END 
			   ELSE NULL END [Message],
			   CASE WHEN J.description LIKE '%report server%' THEN 'Report Server, ' ELSE '' END + ISNULL('Alert - ' + Al.name + ', ','') + ISNULL('Schedule - ' + SCH.name,'') [Caller]
		FROM	msdb.dbo.sysjobs j
				INNER JOIN msdb.dbo.sysjobsteps js ON j.job_id = js.job_id
				CROSS APPLY(SELECT TOP 1 CASE WHEN patINDEX('%"Maintenance Plans\%',js.command) > 0 THEN 'Maintenance Plans(SSIS)' ELSE
				CASE js.subsystem	WHEN 'ActiveScripting' THEN 'ActiveX Script'
									WHEN 'CmdExec' THEN 'Operating system (CmdExec)'
									WHEN 'PowerShell' THEN 'PowerShell'
									WHEN 'Distribution' THEN 'Replication Distributor'
									WHEN 'Merge' THEN 'Replication Merge'
									WHEN 'QueueReader' THEN 'Replication Queue Reader'
									WHEN 'Snapshot' THEN 'Replication Snapshot'
									WHEN 'LogReader' THEN 'Replication Transaction-Log Reader'
									WHEN 'ANALYSISCOMMAND' THEN 'SQL Server Analysis Services Command'
									WHEN 'ANALYSISQUERY' THEN 'SQL Server Analysis Services Query'
									WHEN 'SSIS' THEN 'SQL Server Integration Services Package'
									WHEN 'TSQL' THEN 'Transact-SQL script (T-SQL)'
									ELSE js.subsystem END
								  END AS [SubSystem]) JSS
				LEFT JOIN (SELECT	DISTINCT Ij.name,ISNULL(IIF(LAG(Ijs.on_success_step_id) OVER(ORDER BY Ijs.step_id) = 0,Ijs.step_id,LAG(Ijs.on_success_step_id) OVER(ORDER BY Ijs.step_id)),Ijs.step_id) StepID
							FROM	msdb.dbo.sysjobs Ij
									inner join msdb.dbo.sysjobsteps Ijs on Ij.job_id = Ijs.job_id
									) ST ON ST.StepID = JS.step_id and ST.name = j.name
				CROSS APPLY (SELECT TOP 1 msdb.dbo.agent_datetime(
								   case when js.last_run_date = 0 then NULL else js.last_run_date end,
								   case when js.last_run_time = 0 then NULL else js.last_run_time end) last_run_datetime,
								   case WHEN ST.StepID IS NULL THEN 'Disabled'
									when js.last_run_outcome = 0 then 'Failed'
									when js.last_run_outcome = 1 then 'Succeeded'
									when js.last_run_outcome = 2 then 'Retry'
									when js.last_run_outcome = 3 then 'Canceled'
									else 'Unknown'
								   end AS last_run_outcome
								   ) LR
				LEFT JOIN msdb.dbo.sysjobhistory JH ON j.job_id = JH.job_id
					AND JH.step_id = JS.step_id
					AND msdb.dbo.agent_datetime(JH.run_date,JH.run_time) = case WHEN ST.StepID IS NULL THEN null else LR.last_run_datetime END
				LEFT JOIN msdb..sysalerts Al ON Al.job_id = j.job_id
				OUTER APPLY (SELECT TOP 1 s2.name FROM msdb..sysjobschedules S INNER JOIN msdb..sysschedules S2 ON S2.schedule_id = S.schedule_id WHERE j.job_id = s.job_id)SCH
				--LEFT JOIN #MPLog MP ON j.name LIKE MP.MP_Name + '%'
				OUTER APPLY (SELECT REPLACE(REPLACE(T.Error,'<X>',''),'</X>','')
							FROM	(SELECT  ld.error_message  X
									FROM    msdb..sysmaintplan_plans mp
											INNER JOIN msdb..sysmaintplan_subplans msp ON mp.id = msp.plan_id
											OUTER APPLY (SELECT TOP 1 * FROM msdb..sysmaintplan_log mpl WHERE msp.subplan_id = mpl.subplan_id ORDER BY mpl.start_time DESC)mpl
											LEFT JOIN msdb..sysmaintplan_logdetail ld ON mpl.task_detail_id = ld.task_detail_id
									WHERE   j.name LIKE mp.name + '%'
									FOR XML PATH(''))T(Error))MP(Error)
				OUTER APPLY (SELECT	TOP 1 [StartDateTime] = msdb.dbo.agent_datetime(
									   CASE WHEN xjs.last_run_date = 0 then NULL else xjs.last_run_date end,
									   CASE WHEN xjs.last_run_time = 0 then NULL else xjs.last_run_time end)
								FROM	msdb.dbo.sysjobsteps xjs
										LEFT JOIN (SELECT	ja.job_id,
															j.name AS job_name,
															ja.start_execution_date,      
															ISNULL(last_executed_step_id,0)+1 AS current_executed_step_id,
															Js.step_name
													FROM	msdb.dbo.sysjobactivity ja 
															LEFT JOIN msdb.dbo.sysjobhistory jh ON ja.job_history_id = jh.instance_id
															INNER JOIN msdb.dbo.sysjobs j ON ja.job_id = j.job_id
															INNER JOIN msdb.dbo.sysjobsteps js ON ja.job_id = js.job_id
																AND ISNULL(ja.last_executed_step_id,0)+1 = js.step_id
													WHERE	ja.session_id = (SELECT TOP 1 session_id FROM msdb.dbo.syssessions ORDER BY agent_start_date DESC)
															AND start_execution_date is not null
															AND stop_execution_date is null)Ac ON aC.job_id = xjs.job_id
								WHERE	j.job_id = xjs.job_id
										AND (Ac.start_execution_date != msdb.dbo.agent_datetime(case when xjs.last_run_date = 0 then NULL else xjs.last_run_date end,
									   case when xjs.last_run_time = 0 then NULL else xjs.last_run_time end) or Ac.start_execution_date is null)
								order by xjs.step_id)xSDT
				OUTER APPLY (SELECT	TOP 1 ja.run_requested_date FROM msdb.dbo.sysjobactivity ja WHERE j.job_id = ja.job_id ORDER BY ja.run_requested_date desc)JxA

  
		WHERE	j.enabled = 1
		ORDER BY JSS.[SubSystem],j.name,js.step_id;
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Utility].[ufn_DATEDIFF2String]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="219" />
				<Property Name="Length" Value="13762" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 24/05/2016&#xD;&#xA;-- Description:&#x9;Get Job&#xD;&#xA;-- ToDo : Activate by - Alert,Scheduale,none&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [_Admin_].[usp_GetJobStatus]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_GetMPLogs]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Silance BIT = 0;

	DECLARE @output nvarchar(max)
	DECLARE @maintplan NVARCHAR(1000)
	DECLARE @MP_Name NVARCHAR(1000)
	IF OBJECT_ID('tempdb..#MPLog') IS NULL 
		CREATE TABLE #MPLog(MP_Name NVARCHAR(1000),FLog NVARCHAR(MAX));
	ELSE
		SET @Silance = 1;

	--Registry
	DECLARE @regvalue varchar(1000)
	DECLARE @regKey varchar(100)
	DECLARE @Path varchar(1000)
	--SQL Versions
	BEGIN
		IF OBJECT_ID('tempdb..#checkversion') IS NOT NULL DROP TABLE #checkversion;
		CREATE TABLE #checkversion (
			version nvarchar(128),
			common_version AS SUBSTRING(version, 1, CHARINDEX('.', version) + 1 ),
			major AS PARSENAME(CONVERT(VARCHAR(32), version), 4),
			minor AS PARSENAME(CONVERT(VARCHAR(32), version), 3),
			build AS PARSENAME(CONVERT(varchar(32), version), 2),
			revision AS PARSENAME(CONVERT(VARCHAR(32), version), 1)
		);

		INSERT INTO #checkversion (version)
		SELECT CAST(SERVERPROPERTY('ProductVersion') AS NVARCHAR(128)) ;
		SELECT	@regKey = 'SOFTWARE\Microsoft\Microsoft SQL Server\MSSQL' + major + '.MSSQLServer\SQLServerAgent'
		FROM	#checkversion;
	END

	--Registry
	BEGIN
		EXEC master.dbo.xp_regread @rootkey='HKEY_LOCAL_MACHINE',
    			@key=@regKey,
    			@value_name='ErrorLogFile',
    			@value=@regvalue OUTPUT,
    			@output = 'no_output'

		SELECT @Path = REPLACE(@regvalue,'\SQLAGENT.OUT','')
	END

	
	--Get Dir From Path
	BEGIN
		IF OBJECT_ID('tempdb..#Files') IS NOT NULL DROP TABLE #Files;
		SELECT * 
		INTO	#Files
		FROM [dbo].[DirectoryList] (@Path,'*.txt');

		DECLARE CRmaintplan CURSOR FOR
		SELECT	MP.name,@Path + '\' + Fi.Name
		FROM	MSDB..sysmaintplan_plans MP
				CROSS APPLY (SELECT TOP 1 F.Name FROM #Files F WHERE F.Name LIKE MP.name + '%' ORDER BY DateCreated DESC )Fi;
	END


	OPEN CRmaintplan
	FETCH NEXT
	FROM CRmaintplan INTO @MP_Name,@maintplan
	WHILE @@FETCH_STATUS = 0
	BEGIN

			EXECUTE [dbo].[FileRead] @maintplan,@output OUTPUT;
			INSERT	#MPLog
			SELECT	@MP_Name,@output

	FETCH NEXT FROM CRmaintplan INTO @MP_Name,@maintplan
	END
	CLOSE CRmaintplan
	DEALLOCATE CRmaintplan

	IF @Silance = 0
	SELECT	*
	FROM	#MPLog
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[version]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#checkversion]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[version]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[major]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#Files]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DirectoryList]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#Files].[Name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#Files].[DateCreated]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#Files].[Name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FileRead]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_GetMPLogs].[#MPLog]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[_Admin_].[usp_GetMPLogs].[#MPLog]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[_Admin_].[usp_GetMPLogs].[#MPLog].[MP_Name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[_Admin_].[usp_GetMPLogs].[#MPLog].[FLog]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[_Admin_].[usp_GetMPLogs].[#checkversion]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[version]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[common_version]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[SUBSTRING(version, 1, CHARINDEX('.', version) + 1 )]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[major]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(VARCHAR(32), version), 4)]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[minor]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(VARCHAR(32), version), 3)]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[build]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(varchar(32), version), 2)]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#checkversion].[revision]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(VARCHAR(32), version), 1)]]></Value>
									</Property>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[_Admin_].[usp_GetMPLogs].[#Files]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#Files].[Name]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DirectoryList].[Name]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#Files].[Directory]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DirectoryList].[Directory]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#Files].[Size]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DirectoryList].[Size]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#Files].[DateCreated]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DirectoryList].[DateCreated]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#Files].[DateModified]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DirectoryList].[DateModified]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_GetMPLogs].[#Files].[Extension]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DirectoryList].[Extension]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="177" />
				<Property Name="Length" Value="2408" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 24/05/2016&#xD;&#xA;-- Description:&#x9;Get MP Logs&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [_Admin_].[usp_GetMPLogs]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[_Admin_].[usp_SetVolumeAlert]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    SET NOCOUNT ON
    DECLARE @serverName VARCHAR(500);
	DECLARE @sql VARCHAR(400);
	DECLARE @cmd NVARCHAR(MAX) = N'';
	DECLARE @cmdNotification NVARCHAR(MAX) = N'';
	IF @Operator IS NULL
		SELECT	TOP 1 @Operator = S.name
		FROM	msdb..sysoperators S
		WHERE	S.name LIKE '%DBA%' OR S.name LIKE '%Admin%'
	SET @serverName = @@ServerName;
	SET @sql = 'powershell.exe -c "Get-WmiObject -ComputerName '
		+ QUOTENAME(@serverName, '''')
		+ ' -Class Win32_Volume -Filter ''DriveType = 3'' | select name,capacity,freespace | foreach{$_.name+''|''+$_.capacity/1048576+''%''+$_.freespace/1048576+''*''}"';
	IF OBJECT_ID('tempdb..#Result') IS NOT NULL DROP TABLE #Result
	CREATE TABLE #Result ( list VARCHAR(255) );
	INSERT  #Result
			EXEC xp_cmdshell @sql;

	SELECT C.DriveName ,
	        C.[Capacity(GB)] ,
			b.[Byte],
			b.[MB],
			b.[GB],
			ISNULL(D.LastSample,0)LastSample,
	        C.[Freespace(GB)],'
IF EXISTS(SELECT TOP 1 1 FROM msdb..sysalerts S WHERE name=N''' + D.Description + ''')
	EXEC msdb.dbo.sp_delete_alert @name=N''' + D.Description + '''
EXEC msdb.dbo.sp_add_alert @name=N''' + D.Description + ''', 
	@message_id=0, 
	@severity=0, 
	@enabled=1, 
	@delay_between_responses=10800, 
	@include_event_description_in=1, 
	@category_name=N''[Uncategorized]'', 
	@wmi_namespace=N''\\.\root\CIMV2'', 
	@wmi_query=N''SELECT * FROM __instancemodificationevent within 3600 WHERE targetinstance isa ''''CIM_LogicalDisk'''' and targetinstance.freespace < ' + CONVERT(VARCHAR(50),b.[Byte]) + ' and targetinstance.name=''''' + C.DriveAlert + ''''''', 
	@job_id=N''00000000-0000-0000-0000-000000000000'';'[Script],
'
EXEC msdb.dbo.sp_add_notification @alert_name=N''' + D.Description + ''', @operator_name=N''' + @Operator +  ''', @notification_method = 1;
'[notification]
	INTO	#Action
	FROM    #Result
			CROSS APPLY (SELECT RTRIM(LTRIM(SUBSTRING(list, 1, CHARINDEX('|', list) - 1))) AS DriveName,RTRIM(LTRIM(SUBSTRING(list, 1, CHARINDEX('|', list) - 2))) AS DriveAlert,
			ROUND(CAST(RTRIM(LTRIM(SUBSTRING(list, CHARINDEX('|', list) + 1,
											 ( CHARINDEX('%', list) - 1 )
											 - CHARINDEX('|', list)))) AS FLOAT)
				  / 1024, 0) AS [Capacity(GB)],
				ROUND(CAST(RTRIM(LTRIM(SUBSTRING(list, CHARINDEX('%', list) + 1,
	                                         ( CHARINDEX('*', list) - 1 )
	                                         - CHARINDEX('%', list)))) AS FLOAT)
	              / 1024, 0) AS [Freespace(GB)])c
			INNER JOIN [_Admin_].[DriveAlert] d ON C.DriveName = D.DriveName
			CROSS APPLY (SELECT CONVERT(BIGINT,[Capacity(GB)]*(D.[Percent]/100.0)*(POWER(1024,3))) [Byte],
								CONVERT(INT,[Capacity(GB)]*(D.[Percent]/100.0)*(POWER(1024,2)))[MB],
								CONVERT(INT,[Capacity(GB)]*(D.[Percent]/100.0))[GB])b
	WHERE   list LIKE '[A-Z][:]%'
	ORDER BY drivename;

	SELECT	@cmd += A.Script,
			@cmdNotification += [notification]
	FROM	#Action A
	WHERE	A.MB != A.LastSample
	
	EXEC sp_executesql @cmd;
	EXEC sp_executesql @cmdNotification;

	UPDATE D
	SET		LastSample = A.MB
	FROM	[_Admin_].[DriveAlert] D
			INNER JOIN #Action A ON A.DriveName = D.DriveName
	WHERE	A.MB != D.LastSample;

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[@Operator]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Result]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Result].[list]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert].[DriveName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert].[Percent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert].[LastSample]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert].[Description]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Result].[list]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Action]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[Script]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[notification]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[MB]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[LastSample]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[DriveName]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert].[DriveName]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert].[LastSample]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[MB]" />
				</Entry>
				<Entry>
					<References Name="[_Admin_].[DriveAlert].[LastSample]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[_Admin_].[usp_SetVolumeAlert].[#Result]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Result].[list]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[_Admin_].[usp_SetVolumeAlert].[#Action]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[DriveName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[Capacity(GB)]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[Byte]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[MB]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[GB]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[LastSample]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[Freespace(GB)]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[Script]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[_Admin_].[usp_SetVolumeAlert].[#Action].[notification]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[_Admin_].[usp_SetVolumeAlert].[@Operator]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[_Admin_]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="213" />
				<Property Name="Length" Value="3489" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 17/02/2016&#xD;&#xA;-- Update date: 02/03/2016&#xD;&#xA;-- Description:&#x9;Set Alert on server&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [_Admin_].[usp_SetVolumeAlert] &#xD;&#xA;    @Operator sysname = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlAssembly" Name="[CLR_Util]">
			<Property Name="PermissionSet" Value="3" />
			<Relationship Name="AssemblySources">
				<Entry>
					<Element Type="SqlAssemblySource">
						<Property Name="Source">
							<Value><![CDATA[alue>
						</Property>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlAssembly" Name="[clrEventViewer]">
			<Property Name="PermissionSet" Value="3" />
			<Relationship Name="AssemblySources">
				<Entry>
					<Element Type="SqlAssemblySource">
						<Property Name="Source">
							<Value><![CDATA[0xalue>
						</Property>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlAssembly" Name="[Customs_Util]">
			<Property Name="PermissionSet" Value="2" />
			<Relationship Name="AssemblySources">
				<Entry>
					<Element Type="SqlAssemblySource">
						<Property Name="Source">
							<Value><![CDATA[]]></Value>
						</Property>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[CommandExecute]">
			<Property Name="BodyScript">
				<Value><![CDATA[

BEGIN

  ----------------------------------------------------------------------------------------------------
  --// Source: https://ola.hallengren.com                                                          //--
  ----------------------------------------------------------------------------------------------------

  SET NOCOUNT ON

  DECLARE @StartMessage nvarchar(max)
  DECLARE @EndMessage nvarchar(max)
  DECLARE @ErrorMessage nvarchar(max)
  DECLARE @ErrorMessageOriginal nvarchar(max)

  DECLARE @StartTime datetime
  DECLARE @EndTime datetime

  DECLARE @StartTimeSec datetime
  DECLARE @EndTimeSec datetime

  DECLARE @ID int

  DECLARE @Error int
  DECLARE @ReturnCode int

  SET @Error = 0
  SET @ReturnCode = 0

  ----------------------------------------------------------------------------------------------------
  --// Check core requirements                                                                    //--
  ----------------------------------------------------------------------------------------------------

  IF @LogToTable = 'Y' AND NOT EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'U' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandLog')
  BEGIN
    SET @ErrorMessage = 'The table CommandLog is missing. Download https://ola.hallengren.com/scripts/CommandLog.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ReturnCode = @Error
    GOTO ReturnCode
  END

  ----------------------------------------------------------------------------------------------------
  --// Check input parameters                                                                     //--
  ----------------------------------------------------------------------------------------------------

  IF @Command IS NULL OR @Command = ''
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Command is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @CommandType IS NULL OR @CommandType = '' OR LEN(@CommandType) > 60
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @CommandType is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Mode NOT IN(1,2) OR @Mode IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Mode is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LogToTable NOT IN('Y','N') OR @LogToTable IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @LogToTable is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Execute NOT IN('Y','N') OR @Execute IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Execute is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ReturnCode = @Error
    GOTO ReturnCode
  END

  ----------------------------------------------------------------------------------------------------
  --// Log initial information                                                                    //--
  ----------------------------------------------------------------------------------------------------

  SET @StartTime = GETDATE()
  SET @StartTimeSec = CONVERT(datetime,CONVERT(nvarchar,@StartTime,120),120)

  SET @StartMessage = 'Date and time: ' + CONVERT(nvarchar,@StartTimeSec,120) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Command: ' + @Command
  IF @Comment IS NOT NULL SET @StartMessage = @StartMessage + CHAR(13) + CHAR(10) + 'Comment: ' + @Comment
  SET @StartMessage = REPLACE(@StartMessage,'%','%%')
  RAISERROR(@StartMessage,10,1) WITH NOWAIT

  IF @LogToTable = 'Y'
  BEGIN
    INSERT INTO dbo.CommandLog (DatabaseName, SchemaName, ObjectName, ObjectType, IndexName, IndexType, StatisticsName, PartitionNumber, ExtendedInfo, CommandType, Command, StartTime)
    VALUES (@DatabaseName, @SchemaName, @ObjectName, @ObjectType, @IndexName, @IndexType, @StatisticsName, @PartitionNumber, @ExtendedInfo, @CommandType, @Command, @StartTime)
  END

  SET @ID = SCOPE_IDENTITY()

  ----------------------------------------------------------------------------------------------------
  --// Execute command                                                                            //--
  ----------------------------------------------------------------------------------------------------

  IF @Mode = 1 AND @Execute = 'Y'
  BEGIN
    EXECUTE(@Command)
    SET @Error = @@ERROR
    SET @ReturnCode = @Error
  END

  IF @Mode = 2 AND @Execute = 'Y'
  BEGIN
    BEGIN TRY
      EXECUTE(@Command)
    END TRY
    BEGIN CATCH
      SET @Error = ERROR_NUMBER()
      SET @ReturnCode = @Error
      SET @ErrorMessageOriginal = ERROR_MESSAGE()
      SET @ErrorMessage = 'Msg ' + CAST(@Error AS nvarchar) + ', ' + ISNULL(@ErrorMessageOriginal,'')
      RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    END CATCH
  END

  ----------------------------------------------------------------------------------------------------
  --// Log completing information                                                                 //--
  ----------------------------------------------------------------------------------------------------

  SET @EndTime = GETDATE()
  SET @EndTimeSec = CONVERT(datetime,CONVERT(varchar,@EndTime,120),120)

  SET @EndMessage = 'Outcome: ' + CASE WHEN @Execute = 'N' THEN 'Not Executed' WHEN @Error = 0 THEN 'Succeeded' ELSE 'Failed' END + CHAR(13) + CHAR(10)
  SET @EndMessage = @EndMessage + 'Duration: ' + CASE WHEN DATEDIFF(ss,@StartTimeSec, @EndTimeSec)/(24*3600) > 0 THEN CAST(DATEDIFF(ss,@StartTimeSec, @EndTimeSec)/(24*3600) AS nvarchar) + '.' ELSE '' END + CONVERT(nvarchar,@EndTimeSec - @StartTimeSec,108) + CHAR(13) + CHAR(10)
  SET @EndMessage = @EndMessage + 'Date and time: ' + CONVERT(nvarchar,@EndTimeSec,120) + CHAR(13) + CHAR(10) + ' '
  SET @EndMessage = REPLACE(@EndMessage,'%','%%')
  RAISERROR(@EndMessage,10,1) WITH NOWAIT

  IF @LogToTable = 'Y'
  BEGIN
    UPDATE dbo.CommandLog
    SET EndTime = @EndTime,
        ErrorNumber = CASE WHEN @Execute = 'N' THEN NULL ELSE @Error END,
        ErrorMessage = @ErrorMessageOriginal
    WHERE ID = @ID
  END

  ReturnCode:
  IF @ReturnCode <> 0
  BEGIN
    RETURN @ReturnCode
  END

  ----------------------------------------------------------------------------------------------------

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@LogToTable]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Command]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@CommandType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Execute]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Comment]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[ObjectType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[IndexType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[StatisticsName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[PartitionNumber]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[ExtendedInfo]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[CommandType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[Command]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[StartTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ObjectType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@IndexType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@StatisticsName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@PartitionNumber]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ExtendedInfo]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[EndTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[ErrorNumber]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[ErrorMessage]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandLog].[ID]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@Command]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@CommandType]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@Mode]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@Comment]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@DatabaseName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@SchemaName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@ObjectName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@ObjectType]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@IndexName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@IndexType]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@StatisticsName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@PartitionNumber]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@ExtendedInfo]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlXmlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[xml]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@LogToTable]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[CommandExecute].[@Execute]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="7379" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[CommandExecute]&#xD;&#xA;&#xD;&#xA;@Command nvarchar(max),&#xD;&#xA;@CommandType nvarchar(max),&#xD;&#xA;@Mode int,&#xD;&#xA;@Comment nvarchar(max) = NULL,&#xD;&#xA;@DatabaseName nvarchar(max) = NULL,&#xD;&#xA;@SchemaName nvarchar(max) = NULL,&#xD;&#xA;@ObjectName nvarchar(max) = NULL,&#xD;&#xA;@ObjectType nvarchar(max) = NULL,&#xD;&#xA;@IndexName nvarchar(max) = NULL,&#xD;&#xA;@IndexType int = NULL,&#xD;&#xA;@StatisticsName nvarchar(max) = NULL,&#xD;&#xA;@PartitionNumber int = NULL,&#xD;&#xA;@ExtendedInfo xml = NULL,&#xD;&#xA;@LogToTable nvarchar(max),&#xD;&#xA;@Execute nvarchar(max)&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[CommandLog]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[DatabaseName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[SchemaName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[ObjectName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[ObjectType]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="2" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[char]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[IndexName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[IndexType]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[StatisticsName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[PartitionNumber]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[ExtendedInfo]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlXmlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[xml]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[Command]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[CommandType]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="60" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[StartTime]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[EndTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[ErrorNumber]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[CommandLog].[ErrorMessage]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="4" />
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[CPUSIMPLE]">
			<Property Name="BodyScript">
				<Value><![CDATA[

BEGIN

DECLARE

@n numeric(16,6) = 0,

@a DATETIME,

@b DATETIME

DECLARE

@f int

SET @f = 1

SET @a=CURRENT_TIMESTAMP

WHILE @f <= 10000000

BEGIN

SET @n = @n % 999999 + sqrt(@f)

SET @f = @f + 1

END

SET @b = CURRENT_TIMESTAMP

PRINT 'Timing = ' + ISNULL(CAST(DATEDIFF(MS, @a, @b)AS VARCHAR),'')

PRINT 'Res = ' + ISNULL(CAST(@n AS VARCHAR),'')

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="434" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [dbo].[CPUSIMPLE]&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[DatabaseBackup]">
			<Property Name="BodyScript">
				<Value><![CDATA[

BEGIN

  ----------------------------------------------------------------------------------------------------
  --// Source: https://ola.hallengren.com                                                          //--
  ----------------------------------------------------------------------------------------------------

  SET NOCOUNT ON

  DECLARE @StartMessage nvarchar(max)
  DECLARE @EndMessage nvarchar(max)
  DECLARE @DatabaseMessage nvarchar(max)
  DECLARE @ErrorMessage nvarchar(max)

  DECLARE @Version numeric(18,10)
  DECLARE @AmazonRDS bit

  DECLARE @Cluster nvarchar(max)

  DECLARE @DefaultDirectory nvarchar(4000)

  DECLARE @CurrentRootDirectoryID int
  DECLARE @CurrentRootDirectoryPath nvarchar(4000)

  DECLARE @CurrentDBID int
  DECLARE @CurrentDatabaseID int
  DECLARE @CurrentDatabaseName nvarchar(max)
  DECLARE @CurrentBackupType nvarchar(max)
  DECLARE @CurrentFileExtension nvarchar(max)
  DECLARE @CurrentFileNumber int
  DECLARE @CurrentDifferentialBaseLSN numeric(25,0)
  DECLARE @CurrentDifferentialBaseIsSnapshot bit
  DECLARE @CurrentLogLSN numeric(25,0)
  DECLARE @CurrentLatestBackup datetime
  DECLARE @CurrentDatabaseNameFS nvarchar(max)
  DECLARE @CurrentDirectoryID int
  DECLARE @CurrentDirectoryPath nvarchar(max)
  DECLARE @CurrentFilePath nvarchar(max)
  DECLARE @CurrentDate datetime
  DECLARE @CurrentCleanupDate datetime
  DECLARE @CurrentIsDatabaseAccessible bit
  DECLARE @CurrentAvailabilityGroup nvarchar(max)
  DECLARE @CurrentAvailabilityGroupRole nvarchar(max)
  DECLARE @CurrentAvailabilityGroupBackupPreference nvarchar(max)
  DECLARE @CurrentIsPreferredBackupReplica bit
  DECLARE @CurrentDatabaseMirroringRole nvarchar(max)
  DECLARE @CurrentLogShippingRole nvarchar(max)
  DECLARE @CurrentIsEncrypted bit
  DECLARE @CurrentIsReadOnly bit
  DECLARE @CurrentBackupSetID int
  DECLARE @CurrentIsMirror bit

  DECLARE @CurrentCommand01 nvarchar(max)
  DECLARE @CurrentCommand02 nvarchar(max)
  DECLARE @CurrentCommand03 nvarchar(max)
  DECLARE @CurrentCommand04 nvarchar(max)
  DECLARE @CurrentCommand05 nvarchar(max)
  DECLARE @CurrentCommand06 nvarchar(max)

  DECLARE @CurrentCommandOutput01 int
  DECLARE @CurrentCommandOutput02 int
  DECLARE @CurrentCommandOutput03 int
  DECLARE @CurrentCommandOutput04 int
  DECLARE @CurrentCommandOutput05 int

  DECLARE @CurrentCommandType01 nvarchar(max)
  DECLARE @CurrentCommandType02 nvarchar(max)
  DECLARE @CurrentCommandType03 nvarchar(max)
  DECLARE @CurrentCommandType04 nvarchar(max)
  DECLARE @CurrentCommandType05 nvarchar(max)

  DECLARE @Directories TABLE (ID int PRIMARY KEY,
                              DirectoryPath nvarchar(max),
                              Mirror bit,
                              Completed bit)

  DECLARE @DirectoryInfo TABLE (FileExists bit,
                                FileIsADirectory bit,
                                ParentDirectoryExists bit)

  DECLARE @tmpDatabases TABLE (ID int IDENTITY,
                               DatabaseName nvarchar(max),
                               DatabaseNameFS nvarchar(max),
                               DatabaseType nvarchar(max),
                               AvailabilityGroup bit,
                               Selected bit,
                               Completed bit,
                               PRIMARY KEY(Selected, Completed, ID))

  DECLARE @tmpAvailabilityGroups TABLE (ID int IDENTITY PRIMARY KEY,
                                        AvailabilityGroupName nvarchar(max),
                                        Selected bit)

  DECLARE @tmpDatabasesAvailabilityGroups TABLE (DatabaseName nvarchar(max), AvailabilityGroupName nvarchar(max))

  DECLARE @SelectedDatabases TABLE (DatabaseName nvarchar(max),
                                    DatabaseType nvarchar(max),
                                    AvailabilityGroup nvarchar(max),
                                    Selected bit)

  DECLARE @SelectedAvailabilityGroups TABLE (AvailabilityGroupName nvarchar(max),
                                             Selected bit)

  DECLARE @CurrentBackupSet TABLE (ID int IDENTITY PRIMARY KEY,
                                   Mirror bit,
                                   VerifyCompleted bit,
                                   VerifyOutput int)

  DECLARE @CurrentDirectories TABLE (ID int PRIMARY KEY,
                                     DirectoryPath nvarchar(max),
                                     Mirror bit,
                                     DirectoryNumber int,
                                     CleanupDate datetime,
                                     CleanupMode nvarchar(max),
                                     CreateCompleted bit,
                                     CleanupCompleted bit,
                                     CreateOutput int,
                                     CleanupOutput int)

  DECLARE @CurrentFiles TABLE ([Type] nvarchar(max),
                               FilePath nvarchar(max),
                               Mirror bit)

  DECLARE @CurrentCleanupDates TABLE (CleanupDate datetime, Mirror bit)

  DECLARE @DirectoryCheck bit

  DECLARE @Error int
  DECLARE @ReturnCode int

  SET @Error = 0
  SET @ReturnCode = 0

  SET @Version = CAST(LEFT(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)),CHARINDEX('.',CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max))) - 1) + '.' + REPLACE(RIGHT(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)), LEN(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max))) - CHARINDEX('.',CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)))),'.','') AS numeric(18,10))

  SET @AmazonRDS = CASE WHEN DB_ID('rdsadmin') IS NOT NULL AND SUSER_SNAME(0x01) = 'rdsa' THEN 1 ELSE 0 END

  ----------------------------------------------------------------------------------------------------
  --// Log initial information                                                                    //--
  ----------------------------------------------------------------------------------------------------

  SET @StartMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Server: ' + CAST(SERVERPROPERTY('ServerName') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Version: ' + CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Edition: ' + CAST(SERVERPROPERTY('Edition') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Procedure: ' + QUOTENAME(DB_NAME(DB_ID())) + '.' + (SELECT QUOTENAME(schemas.name) FROM sys.schemas schemas INNER JOIN sys.objects objects ON schemas.[schema_id] = objects.[schema_id] WHERE [object_id] = @@PROCID) + '.' + QUOTENAME(OBJECT_NAME(@@PROCID)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Parameters: @Databases = ' + ISNULL('''' + REPLACE(@Databases,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Directory = ' + ISNULL('''' + REPLACE(@Directory,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @BackupType = ' + ISNULL('''' + REPLACE(@BackupType,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Verify = ' + ISNULL('''' + REPLACE(@Verify,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @CleanupTime = ' + ISNULL(CAST(@CleanupTime AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @CleanupMode = ' + ISNULL('''' + REPLACE(@CleanupMode,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Compress = ' + ISNULL('''' + REPLACE(@Compress,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @CopyOnly = ' + ISNULL('''' + REPLACE(@CopyOnly,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @ChangeBackupType = ' + ISNULL('''' + REPLACE(@ChangeBackupType,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @BackupSoftware = ' + ISNULL('''' + REPLACE(@BackupSoftware,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @CheckSum = ' + ISNULL('''' + REPLACE(@CheckSum,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @BlockSize = ' + ISNULL(CAST(@BlockSize AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @BufferCount = ' + ISNULL(CAST(@BufferCount AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @MaxTransferSize = ' + ISNULL(CAST(@MaxTransferSize AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @NumberOfFiles = ' + ISNULL(CAST(@NumberOfFiles AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @CompressionLevel = ' + ISNULL(CAST(@CompressionLevel AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @Description = ' + ISNULL('''' + REPLACE(@Description,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Threads = ' + ISNULL(CAST(@Threads AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @Throttle = ' + ISNULL(CAST(@Throttle AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @Encrypt = ' + ISNULL('''' + REPLACE(@Encrypt,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @EncryptionAlgorithm = ' + ISNULL('''' + REPLACE(@EncryptionAlgorithm,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @ServerCertificate = ' + ISNULL('''' + REPLACE(@ServerCertificate,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @ServerAsymmetricKey = ' + ISNULL('''' + REPLACE(@ServerAsymmetricKey,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @EncryptionKey = ' + ISNULL('''' + REPLACE(@EncryptionKey,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @ReadWriteFileGroups = ' + ISNULL('''' + REPLACE(@ReadWriteFileGroups,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @OverrideBackupPreference = ' + ISNULL('''' + REPLACE(@OverrideBackupPreference,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @NoRecovery = ' + ISNULL('''' + REPLACE(@NoRecovery,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @URL = ' + ISNULL('''' + REPLACE(@URL,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Credential = ' + ISNULL('''' + REPLACE(@Credential,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @MirrorDirectory = ' + ISNULL('''' + REPLACE(@MirrorDirectory,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @MirrorCleanupTime = ' + ISNULL(CAST(@MirrorCleanupTime AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @MirrorCleanupMode = ' + ISNULL('''' + REPLACE(@MirrorCleanupMode,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @AvailabilityGroups = ' + ISNULL('''' + REPLACE(@AvailabilityGroups,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Updateability = ' + ISNULL('''' + REPLACE(@Updateability,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @LogToTable = ' + ISNULL('''' + REPLACE(@LogToTable,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Execute = ' + ISNULL('''' + REPLACE(@Execute,'''','''''') + '''','NULL') + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Source: https://ola.hallengren.com' + CHAR(13) + CHAR(10)
  SET @StartMessage = REPLACE(@StartMessage,'%','%%') + ' '
  RAISERROR(@StartMessage,10,1) WITH NOWAIT

  ----------------------------------------------------------------------------------------------------
  --// Check core requirements                                                                    //--
  ----------------------------------------------------------------------------------------------------

  IF NOT EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'P' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandExecute')
  BEGIN
    SET @ErrorMessage = 'The stored procedure CommandExecute is missing. Download https://ola.hallengren.com/scripts/CommandExecute.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'P' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandExecute' AND (OBJECT_DEFINITION(objects.[object_id]) NOT LIKE '%@LogToTable%' OR OBJECT_DEFINITION(objects.[object_id]) LIKE '%LOCK_TIMEOUT%'))
  BEGIN
    SET @ErrorMessage = 'The stored procedure CommandExecute needs to be updated. Download https://ola.hallengren.com/scripts/CommandExecute.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LogToTable = 'Y' AND NOT EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'U' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandLog')
  BEGIN
    SET @ErrorMessage = 'The table CommandLog is missing. Download https://ola.hallengren.com/scripts/CommandLog.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @AmazonRDS = 1
  BEGIN
    SET @ErrorMessage = 'The stored procedure DatabaseBackup is not supported on Amazon RDS.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ReturnCode = @Error
    GOTO Logging
  END

  ----------------------------------------------------------------------------------------------------
  --// Select databases                                                                           //--
  ----------------------------------------------------------------------------------------------------

  SET @Databases = REPLACE(@Databases, CHAR(10), '')
  SET @Databases = REPLACE(@Databases, CHAR(13), '')

  WHILE CHARINDEX(', ',@Databases) > 0 SET @Databases = REPLACE(@Databases,', ',',')
  WHILE CHARINDEX(' ,',@Databases) > 0 SET @Databases = REPLACE(@Databases,' ,',',')

  SET @Databases = LTRIM(RTRIM(@Databases));

  WITH Databases1 (StartPosition, EndPosition, DatabaseItem) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Databases, 1), 0), LEN(@Databases) + 1) AS EndPosition,
         SUBSTRING(@Databases, 1, ISNULL(NULLIF(CHARINDEX(',', @Databases, 1), 0), LEN(@Databases) + 1) - 1) AS DatabaseItem
  WHERE @Databases IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Databases, EndPosition + 1), 0), LEN(@Databases) + 1) AS EndPosition,
         SUBSTRING(@Databases, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @Databases, EndPosition + 1), 0), LEN(@Databases) + 1) - EndPosition - 1) AS DatabaseItem
  FROM Databases1
  WHERE EndPosition < LEN(@Databases) + 1
  ),
  Databases2 (DatabaseItem, Selected) AS
  (
  SELECT CASE WHEN DatabaseItem LIKE '-%' THEN RIGHT(DatabaseItem,LEN(DatabaseItem) - 1) ELSE DatabaseItem END AS DatabaseItem,
         CASE WHEN DatabaseItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
  FROM Databases1
  ),
  Databases3 (DatabaseItem, DatabaseType, AvailabilityGroup, Selected) AS
  (
  SELECT CASE WHEN DatabaseItem IN('ALL_DATABASES','SYSTEM_DATABASES','USER_DATABASES','AVAILABILITY_GROUP_DATABASES') THEN '%' ELSE DatabaseItem END AS DatabaseItem,
         CASE WHEN DatabaseItem = 'SYSTEM_DATABASES' THEN 'S' WHEN DatabaseItem = 'USER_DATABASES' THEN 'U' ELSE NULL END AS DatabaseType,
         CASE WHEN DatabaseItem = 'AVAILABILITY_GROUP_DATABASES' THEN 1 ELSE NULL END AvailabilityGroup,
         Selected
  FROM Databases2
  ),
  Databases4 (DatabaseName, DatabaseType, AvailabilityGroup, Selected) AS
  (
  SELECT CASE WHEN LEFT(DatabaseItem,1) = '[' AND RIGHT(DatabaseItem,1) = ']' THEN PARSENAME(DatabaseItem,1) ELSE DatabaseItem END AS DatabaseItem,
         DatabaseType,
         AvailabilityGroup,
         Selected
  FROM Databases3
  )
  INSERT INTO @SelectedDatabases (DatabaseName, DatabaseType, AvailabilityGroup, Selected)
  SELECT DatabaseName,
         DatabaseType,
         AvailabilityGroup,
         Selected
  FROM Databases4
  OPTION (MAXRECURSION 0)

  IF @Version >= 11 AND SERVERPROPERTY('EngineEdition') <> 5
  BEGIN
    INSERT INTO @tmpDatabases (DatabaseName, DatabaseNameFS, DatabaseType, AvailabilityGroup, Selected, Completed)
    SELECT [name] AS DatabaseName,
           LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE([name],'\',''),'/',''),':',''),'*',''),'?',''),'"',''),'<',''),'>',''),'|',''))) AS DatabaseNameFS,
           CASE WHEN name IN('master','msdb','model') THEN 'S' ELSE 'U' END AS DatabaseType,
           CASE WHEN name IN (SELECT availability_databases_cluster.database_name FROM sys.availability_databases_cluster availability_databases_cluster) THEN 1 ELSE 0 END AS AvailabilityGroup,
           0 AS Selected,
           0 AS Completed
    FROM sys.databases
    WHERE [name] <> 'tempdb'
    AND source_database_id IS NULL
    ORDER BY [name] ASC
  END
  ELSE
  BEGIN
    INSERT INTO @tmpDatabases (DatabaseName, DatabaseNameFS, DatabaseType, AvailabilityGroup, Selected, Completed)
    SELECT [name] AS DatabaseName,
           LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE([name],'\',''),'/',''),':',''),'*',''),'?',''),'"',''),'<',''),'>',''),'|',''))) AS DatabaseNameFS,
           CASE WHEN name IN('master','msdb','model') THEN 'S' ELSE 'U' END AS DatabaseType,
           NULL AS AvailabilityGroup,
           0 AS Selected,
           0 AS Completed
    FROM sys.databases
    WHERE [name] <> 'tempdb'
    AND source_database_id IS NULL
    ORDER BY [name] ASC
  END

  UPDATE tmpDatabases
  SET tmpDatabases.Selected = SelectedDatabases.Selected
  FROM @tmpDatabases tmpDatabases
  INNER JOIN @SelectedDatabases SelectedDatabases
  ON tmpDatabases.DatabaseName LIKE REPLACE(SelectedDatabases.DatabaseName,'_','[_]')
  AND (tmpDatabases.DatabaseType = SelectedDatabases.DatabaseType OR SelectedDatabases.DatabaseType IS NULL)
  AND (tmpDatabases.AvailabilityGroup = SelectedDatabases.AvailabilityGroup OR SelectedDatabases.AvailabilityGroup IS NULL)
  WHERE SelectedDatabases.Selected = 1

  UPDATE tmpDatabases
  SET tmpDatabases.Selected = SelectedDatabases.Selected
  FROM @tmpDatabases tmpDatabases
  INNER JOIN @SelectedDatabases SelectedDatabases
  ON tmpDatabases.DatabaseName LIKE REPLACE(SelectedDatabases.DatabaseName,'_','[_]')
  AND (tmpDatabases.DatabaseType = SelectedDatabases.DatabaseType OR SelectedDatabases.DatabaseType IS NULL)
  AND (tmpDatabases.AvailabilityGroup = SelectedDatabases.AvailabilityGroup OR SelectedDatabases.AvailabilityGroup IS NULL)
  WHERE SelectedDatabases.Selected = 0

  IF @Databases IS NOT NULL AND (NOT EXISTS(SELECT * FROM @SelectedDatabases) OR EXISTS(SELECT * FROM @SelectedDatabases WHERE DatabaseName IS NULL OR DatabaseName = ''))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Databases is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  ----------------------------------------------------------------------------------------------------
  --// Select availability groups                                                                 //--
  ----------------------------------------------------------------------------------------------------

  IF @AvailabilityGroups IS NOT NULL AND @Version >= 11
  BEGIN

    SET @AvailabilityGroups = REPLACE(@AvailabilityGroups, CHAR(10), '')
    SET @AvailabilityGroups = REPLACE(@AvailabilityGroups, CHAR(13), '')

    WHILE CHARINDEX(', ',@AvailabilityGroups) > 0 SET @AvailabilityGroups = REPLACE(@AvailabilityGroups,', ',',')
    WHILE CHARINDEX(' ,',@AvailabilityGroups) > 0 SET @AvailabilityGroups = REPLACE(@AvailabilityGroups,' ,',',')

    SET @AvailabilityGroups = LTRIM(RTRIM(@AvailabilityGroups));

    WITH AvailabilityGroups1 (StartPosition, EndPosition, AvailabilityGroupItem) AS
    (
    SELECT 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, 1), 0), LEN(@AvailabilityGroups) + 1) AS EndPosition,
           SUBSTRING(@AvailabilityGroups, 1, ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, 1), 0), LEN(@AvailabilityGroups) + 1) - 1) AS AvailabilityGroupItem
    WHERE @AvailabilityGroups IS NOT NULL
    UNION ALL
    SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, EndPosition + 1), 0), LEN(@AvailabilityGroups) + 1) AS EndPosition,
           SUBSTRING(@AvailabilityGroups, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, EndPosition + 1), 0), LEN(@AvailabilityGroups) + 1) - EndPosition - 1) AS AvailabilityGroupItem
    FROM AvailabilityGroups1
    WHERE EndPosition < LEN(@AvailabilityGroups) + 1
    ),
    AvailabilityGroups2 (AvailabilityGroupItem, Selected) AS
    (
    SELECT CASE WHEN AvailabilityGroupItem LIKE '-%' THEN RIGHT(AvailabilityGroupItem,LEN(AvailabilityGroupItem) - 1) ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           CASE WHEN AvailabilityGroupItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
    FROM AvailabilityGroups1
    ),
    AvailabilityGroups3 (AvailabilityGroupItem, Selected) AS
    (
    SELECT CASE WHEN AvailabilityGroupItem = 'ALL_AVAILABILITY_GROUPS' THEN '%' ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           Selected
    FROM AvailabilityGroups2
    ),
    AvailabilityGroups4 (AvailabilityGroupName, Selected) AS
    (
    SELECT CASE WHEN LEFT(AvailabilityGroupItem,1) = '[' AND RIGHT(AvailabilityGroupItem,1) = ']' THEN PARSENAME(AvailabilityGroupItem,1) ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           Selected
    FROM AvailabilityGroups3
    )
    INSERT INTO @SelectedAvailabilityGroups (AvailabilityGroupName, Selected)
    SELECT AvailabilityGroupName, Selected
    FROM AvailabilityGroups4
    OPTION (MAXRECURSION 0)

    INSERT INTO @tmpAvailabilityGroups (AvailabilityGroupName, Selected)
    SELECT name AS AvailabilityGroupName,
           0 AS Selected
    FROM sys.availability_groups

    UPDATE tmpAvailabilityGroups
    SET tmpAvailabilityGroups.Selected = SelectedAvailabilityGroups.Selected
    FROM @tmpAvailabilityGroups tmpAvailabilityGroups
    INNER JOIN @SelectedAvailabilityGroups SelectedAvailabilityGroups
    ON tmpAvailabilityGroups.AvailabilityGroupName LIKE REPLACE(SelectedAvailabilityGroups.AvailabilityGroupName,'_','[_]')
    WHERE SelectedAvailabilityGroups.Selected = 1

    UPDATE tmpAvailabilityGroups
    SET tmpAvailabilityGroups.Selected = SelectedAvailabilityGroups.Selected
    FROM @tmpAvailabilityGroups tmpAvailabilityGroups
    INNER JOIN @SelectedAvailabilityGroups SelectedAvailabilityGroups
    ON tmpAvailabilityGroups.AvailabilityGroupName LIKE REPLACE(SelectedAvailabilityGroups.AvailabilityGroupName,'_','[_]')
    WHERE SelectedAvailabilityGroups.Selected = 0

    INSERT INTO @tmpDatabasesAvailabilityGroups (DatabaseName, AvailabilityGroupName)
    SELECT availability_databases_cluster.database_name, availability_groups.name
    FROM sys.availability_databases_cluster availability_databases_cluster
    INNER JOIN sys.availability_groups availability_groups ON availability_databases_cluster.group_id = availability_groups.group_id

    UPDATE tmpDatabases
    SET Selected = 1
    FROM @tmpDatabases tmpDatabases
    INNER JOIN @tmpDatabasesAvailabilityGroups tmpDatabasesAvailabilityGroups ON tmpDatabases.DatabaseName = tmpDatabasesAvailabilityGroups.DatabaseName
    INNER JOIN @tmpAvailabilityGroups tmpAvailabilityGroups ON tmpDatabasesAvailabilityGroups.AvailabilityGroupName = tmpAvailabilityGroups.AvailabilityGroupName
    WHERE tmpAvailabilityGroups.Selected = 1

  END

  IF @AvailabilityGroups IS NOT NULL AND (NOT EXISTS(SELECT * FROM @SelectedAvailabilityGroups) OR EXISTS(SELECT * FROM @SelectedAvailabilityGroups WHERE AvailabilityGroupName IS NULL OR AvailabilityGroupName = '') OR @Version < 11)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @AvailabilityGroups is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@Databases IS NULL AND @AvailabilityGroups IS NULL)
  BEGIN
    SET @ErrorMessage = 'You need to specify one of the parameters @Databases and @AvailabilityGroups.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@Databases IS NOT NULL AND @AvailabilityGroups IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'You can only specify one of the parameters @Databases and @AvailabilityGroups.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  ----------------------------------------------------------------------------------------------------
  --// Check database names                                                                       //--
  ----------------------------------------------------------------------------------------------------

  SET @ErrorMessage = ''
  SELECT @ErrorMessage = @ErrorMessage + QUOTENAME(DatabaseName) + ', '
  FROM @tmpDatabases
  WHERE Selected = 1
  AND DatabaseNameFS = ''
  ORDER BY DatabaseName ASC
  IF @@ROWCOUNT > 0
  BEGIN
    SET @ErrorMessage = 'The names of the following databases are not supported: ' + LEFT(@ErrorMessage,LEN(@ErrorMessage)-1) + '.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  SET @ErrorMessage = ''
  SELECT @ErrorMessage = @ErrorMessage + QUOTENAME(DatabaseName) + ', '
  FROM @tmpDatabases
  WHERE UPPER(DatabaseNameFS) IN(SELECT UPPER(DatabaseNameFS) FROM @tmpDatabases GROUP BY UPPER(DatabaseNameFS) HAVING COUNT(*) > 1)
  AND UPPER(DatabaseNameFS) IN(SELECT UPPER(DatabaseNameFS) FROM @tmpDatabases WHERE Selected = 1)
  AND DatabaseNameFS <> ''
  ORDER BY DatabaseName ASC
  OPTION (RECOMPILE)
  IF @@ROWCOUNT > 0
  BEGIN
    SET @ErrorMessage = 'The names of the following databases are not unique in the file system: ' + LEFT(@ErrorMessage,LEN(@ErrorMessage)-1) + '.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  ----------------------------------------------------------------------------------------------------
  --// Select directories                                                                         //--
  ----------------------------------------------------------------------------------------------------

  IF @Directory IS NULL AND @URL IS NULL
  BEGIN
    EXECUTE [master].dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\MSSQLServer', N'BackupDirectory', @DefaultDirectory OUTPUT

    INSERT INTO @Directories (ID, DirectoryPath, Mirror, Completed)
    SELECT 1, @DefaultDirectory, 0, 0
  END
  ELSE
  BEGIN
    SET @Directory = REPLACE(@Directory, CHAR(10), '')
    SET @Directory = REPLACE(@Directory, CHAR(13), '')

    WHILE CHARINDEX(', ',@Directory) > 0 SET @Directory = REPLACE(@Directory,', ',',')
    WHILE CHARINDEX(' ,',@Directory) > 0 SET @Directory = REPLACE(@Directory,' ,',',')

    SET @Directory = LTRIM(RTRIM(@Directory));

    WITH Directories (StartPosition, EndPosition, Directory) AS
    (
    SELECT 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @Directory, 1), 0), LEN(@Directory) + 1) AS EndPosition,
           SUBSTRING(@Directory, 1, ISNULL(NULLIF(CHARINDEX(',', @Directory, 1), 0), LEN(@Directory) + 1) - 1) AS Directory
    WHERE @Directory IS NOT NULL
    UNION ALL
    SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @Directory, EndPosition + 1), 0), LEN(@Directory) + 1) AS EndPosition,
           SUBSTRING(@Directory, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @Directory, EndPosition + 1), 0), LEN(@Directory) + 1) - EndPosition - 1) AS Directory
    FROM Directories
    WHERE EndPosition < LEN(@Directory) + 1
    )
    INSERT INTO @Directories (ID, DirectoryPath, Mirror, Completed)
    SELECT ROW_NUMBER() OVER(ORDER BY StartPosition ASC) AS ID,
           Directory,
           0,
           0
    FROM Directories
    OPTION (MAXRECURSION 0)
  END

  SET @MirrorDirectory = REPLACE(@MirrorDirectory, CHAR(10), '')
  SET @MirrorDirectory = REPLACE(@MirrorDirectory, CHAR(13), '')

  WHILE CHARINDEX(', ',@MirrorDirectory) > 0 SET @MirrorDirectory = REPLACE(@MirrorDirectory,', ',',')
  WHILE CHARINDEX(' ,',@MirrorDirectory) > 0 SET @MirrorDirectory = REPLACE(@MirrorDirectory,' ,',',')

  SET @MirrorDirectory = LTRIM(RTRIM(@MirrorDirectory));

  WITH Directories (StartPosition, EndPosition, Directory) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @MirrorDirectory, 1), 0), LEN(@MirrorDirectory) + 1) AS EndPosition,
         SUBSTRING(@MirrorDirectory, 1, ISNULL(NULLIF(CHARINDEX(',', @MirrorDirectory, 1), 0), LEN(@MirrorDirectory) + 1) - 1) AS Directory
  WHERE @MirrorDirectory IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @MirrorDirectory, EndPosition + 1), 0), LEN(@MirrorDirectory) + 1) AS EndPosition,
         SUBSTRING(@MirrorDirectory, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @MirrorDirectory, EndPosition + 1), 0), LEN(@MirrorDirectory) + 1) - EndPosition - 1) AS Directory
  FROM Directories
  WHERE EndPosition < LEN(@MirrorDirectory) + 1
  )
  INSERT INTO @Directories (ID, DirectoryPath, Mirror, Completed)
  SELECT (SELECT COUNT(*) FROM @Directories) + ROW_NUMBER() OVER(ORDER BY StartPosition ASC) AS ID,
         Directory,
         1,
         0
  FROM Directories
  OPTION (MAXRECURSION 0)

  ----------------------------------------------------------------------------------------------------
  --// Check directories                                                                          //--
  ----------------------------------------------------------------------------------------------------

  SET @DirectoryCheck = 1

  IF EXISTS(SELECT * FROM @Directories WHERE Mirror = 0 AND (NOT (DirectoryPath LIKE '_:' OR DirectoryPath LIKE '_:\%' OR DirectoryPath LIKE '\\%\%') OR DirectoryPath IS NULL OR LEFT(DirectoryPath,1) = ' ' OR RIGHT(DirectoryPath,1) = ' ')) OR EXISTS (SELECT * FROM @Directories GROUP BY DirectoryPath HAVING COUNT(*) <> 1) OR ((SELECT COUNT(*) FROM @Directories WHERE Mirror = 0) <> (SELECT COUNT(*) FROM @Directories WHERE Mirror = 1) AND (SELECT COUNT(*) FROM @Directories WHERE Mirror = 1) > 0)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Directory is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
    SET @DirectoryCheck = 0
  END

  IF EXISTS(SELECT * FROM @Directories WHERE Mirror = 1 AND (NOT (DirectoryPath LIKE '_:' OR DirectoryPath LIKE '_:\%' OR DirectoryPath LIKE '\\%\%') OR DirectoryPath IS NULL OR LEFT(DirectoryPath,1) = ' ' OR RIGHT(DirectoryPath,1) = ' ')) OR EXISTS (SELECT * FROM @Directories GROUP BY DirectoryPath HAVING COUNT(*) <> 1) OR ((SELECT COUNT(*) FROM @Directories WHERE Mirror = 0) <> (SELECT COUNT(*) FROM @Directories WHERE Mirror = 1) AND (SELECT COUNT(*) FROM @Directories WHERE Mirror = 1) > 0) OR (@BackupSoftware IN('SQLBACKUP','SQLSAFE') AND (SELECT COUNT(*) FROM @Directories WHERE Mirror = 1) > 1) OR (@BackupSoftware IS NULL AND EXISTS(SELECT * FROM @Directories WHERE Mirror = 1) AND SERVERPROPERTY('EngineEdition') <> 3)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @MirrorDirectory is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
    SET @DirectoryCheck = 0
  END

  IF @DirectoryCheck = 1
  BEGIN
    WHILE EXISTS(SELECT * FROM @Directories WHERE Completed = 0)
    BEGIN
      SELECT TOP 1 @CurrentRootDirectoryID = ID,
                   @CurrentRootDirectoryPath = DirectoryPath
      FROM @Directories
      WHERE Completed = 0
      ORDER BY ID ASC

      INSERT INTO @DirectoryInfo (FileExists, FileIsADirectory, ParentDirectoryExists)
      EXECUTE [master].dbo.xp_fileexist @CurrentRootDirectoryPath

      IF NOT EXISTS (SELECT * FROM @DirectoryInfo WHERE FileExists = 0 AND FileIsADirectory = 1 AND ParentDirectoryExists = 1)
      BEGIN
        SET @ErrorMessage = 'The directory ' + @CurrentRootDirectoryPath + ' does not exist.' + CHAR(13) + CHAR(10) + ' '
        RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
        SET @Error = @@ERROR
      END

      UPDATE @Directories
      SET Completed = 1
      WHERE ID = @CurrentRootDirectoryID

      SET @CurrentRootDirectoryID = NULL
      SET @CurrentRootDirectoryPath = NULL

      DELETE FROM @DirectoryInfo
    END
  END

  ----------------------------------------------------------------------------------------------------
  --// Get default compression                                                                    //--
  ----------------------------------------------------------------------------------------------------

  IF @Compress IS NULL
  BEGIN
    SELECT @Compress = CASE
    WHEN @BackupSoftware IS NULL AND EXISTS(SELECT * FROM sys.configurations WHERE name = 'backup compression default' AND value_in_use = 1) THEN 'Y'
    WHEN @BackupSoftware IS NULL AND NOT EXISTS(SELECT * FROM sys.configurations WHERE name = 'backup compression default' AND value_in_use = 1) THEN 'N'
    WHEN @BackupSoftware IS NOT NULL AND (@CompressionLevel IS NULL OR @CompressionLevel > 0)  THEN 'Y'
    WHEN @BackupSoftware IS NOT NULL AND @CompressionLevel = 0  THEN 'N'
    END
  END

  ----------------------------------------------------------------------------------------------------
  --// Get number of files                                                                        //--
  ----------------------------------------------------------------------------------------------------

  IF @NumberOfFiles IS NULL
  BEGIN
    SELECT @NumberOfFiles = CASE WHEN @URL IS NOT NULL THEN 1 ELSE (SELECT COUNT(*) FROM @Directories WHERE Mirror = 0) END
  END

  ----------------------------------------------------------------------------------------------------
  --// Check input parameters                                                                     //--
  ----------------------------------------------------------------------------------------------------

  IF @BackupType NOT IN ('FULL','DIFF','LOG') OR @BackupType IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @BackupType is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Verify NOT IN ('Y','N') OR @Verify IS NULL OR (@BackupSoftware = 'SQLSAFE' AND @Encrypt = 'Y' AND @Verify = 'Y')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Verify is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @CleanupTime < 0 OR (@CleanupTime IS NOT NULL AND @URL IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @CleanupTime is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @CleanupMode NOT IN('BEFORE_BACKUP','AFTER_BACKUP') OR @CleanupMode IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @CleanupMode is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Compress NOT IN ('Y','N') OR @Compress IS NULL OR (@Compress = 'Y' AND @BackupSoftware IS NULL AND NOT ((@Version >= 10 AND @Version < 10.5 AND SERVERPROPERTY('EngineEdition') = 3) OR (@Version >= 10.5 AND (SERVERPROPERTY('EngineEdition') = 3 OR SERVERPROPERTY('EditionID') IN (-1534726760, 284895786))))) OR (@Compress = 'N' AND @BackupSoftware IS NOT NULL AND (@CompressionLevel IS NULL OR @CompressionLevel >= 1)) OR (@Compress = 'Y' AND @BackupSoftware IS NOT NULL AND @CompressionLevel = 0)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Compress is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @CopyOnly NOT IN ('Y','N') OR @CopyOnly IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @CopyOnly is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @ChangeBackupType NOT IN ('Y','N') OR @ChangeBackupType IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @ChangeBackupType is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @BackupSoftware NOT IN ('LITESPEED','SQLBACKUP','SQLSAFE')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @BackupSoftware is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @BackupSoftware = 'LITESPEED' AND NOT EXISTS (SELECT * FROM [master].sys.objects WHERE [type] = 'X' AND [name] = 'xp_backup_database')
  BEGIN
    SET @ErrorMessage = 'LiteSpeed for SQL Server is not installed. Download http://software.dell.com/products/litespeed-for-sql-server/.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @BackupSoftware = 'SQLBACKUP' AND NOT EXISTS (SELECT * FROM [master].sys.objects WHERE [type] = 'X' AND [name] = 'sqlbackup')
  BEGIN
    SET @ErrorMessage = 'Red Gate SQL Backup Pro is not installed. Download http://www.red-gate.com/products/dba/sql-backup/.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @BackupSoftware = 'SQLSAFE' AND NOT EXISTS (SELECT * FROM [master].sys.objects WHERE [type] = 'X' AND [name] = 'xp_ss_backup')
  BEGIN
    SET @ErrorMessage = 'Idera SQL Safe Backup is not installed. Download https://www.idera.com/productssolutions/sqlserver/sqlsafebackup.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @CheckSum NOT IN ('Y','N') OR @CheckSum IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @CheckSum is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @BlockSize NOT IN (512,1024,2048,4096,8192,16384,32768,65536) OR (@BlockSize IS NOT NULL AND @BackupSoftware = 'SQLBACKUP') OR (@BlockSize IS NOT NULL AND @BackupSoftware = 'SQLSAFE') OR (@BlockSize IS NOT NULL AND @URL IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @BlockSize is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @BufferCount <= 0 OR @BufferCount > 2147483647 OR (@BufferCount IS NOT NULL AND @BackupSoftware = 'SQLBACKUP') OR (@BufferCount IS NOT NULL AND @BackupSoftware = 'SQLSAFE')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @BufferCount is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @MaxTransferSize < 65536 OR @MaxTransferSize > 4194304 OR @MaxTransferSize % 65536 > 0 OR (@MaxTransferSize > 1048576 AND @BackupSoftware = 'SQLBACKUP') OR (@MaxTransferSize IS NOT NULL AND @BackupSoftware = 'SQLSAFE') OR (@MaxTransferSize IS NOT NULL AND @URL IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @MaxTransferSize is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @NumberOfFiles < 1 OR @NumberOfFiles > 64 OR (@NumberOfFiles > 32 AND @BackupSoftware = 'SQLBACKUP') OR @NumberOfFiles IS NULL OR @NumberOfFiles < (SELECT COUNT(*) FROM @Directories WHERE Mirror = 0) OR @NumberOfFiles % (SELECT NULLIF(COUNT(*),0) FROM @Directories WHERE Mirror = 0) > 0 OR (@URL IS NOT NULL AND @NumberOfFiles <> 1) OR (@NumberOfFiles > 1 AND @BackupSoftware IN('SQLBACKUP','SQLSAFE') AND EXISTS(SELECT * FROM @Directories WHERE Mirror = 1))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @NumberOfFiles is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@BackupSoftware IS NULL AND @CompressionLevel IS NOT NULL) OR (@BackupSoftware = 'LITESPEED' AND (@CompressionLevel < 0 OR @CompressionLevel > 8)) OR (@BackupSoftware = 'SQLBACKUP' AND (@CompressionLevel < 0 OR @CompressionLevel > 4)) OR (@BackupSoftware = 'SQLSAFE' AND (@CompressionLevel < 1 OR @CompressionLevel > 4))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @CompressionLevel is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF LEN(@Description) > 255 OR (@BackupSoftware = 'LITESPEED' AND LEN(@Description) > 128)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Description is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Threads IS NOT NULL AND (@BackupSoftware NOT IN('LITESPEED','SQLBACKUP','SQLSAFE') OR @BackupSoftware IS NULL) OR (@BackupSoftware = 'LITESPEED' AND (@Threads < 1 OR @Threads > 32)) OR (@BackupSoftware = 'SQLBACKUP' AND (@Threads < 2 OR @Threads > 32)) OR (@BackupSoftware = 'SQLSAFE' AND (@Threads < 1 OR @Threads > 64))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Threads is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Throttle IS NOT NULL AND (@BackupSoftware NOT IN('LITESPEED') OR @BackupSoftware IS NULL) OR @Throttle < 1 OR @Throttle > 100
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Throttle is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Encrypt NOT IN('Y','N') OR @Encrypt IS NULL OR (@Encrypt = 'Y' AND @BackupSoftware IS NULL AND NOT (@Version >= 12 AND (SERVERPROPERTY('EngineEdition') = 3) OR SERVERPROPERTY('EditionID') IN(-1534726760, 284895786)))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Encrypt is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@BackupSoftware IS NULL AND @Encrypt = 'Y' AND (@EncryptionAlgorithm NOT IN('AES_128','AES_192','AES_256','TRIPLE_DES_3KEY') OR @EncryptionAlgorithm IS NULL)) OR (@BackupSoftware = 'LITESPEED' AND @Encrypt = 'Y' AND (@EncryptionAlgorithm NOT IN('RC2_40','RC2_56','RC2_112','RC2_128','TRIPLE_DES_3KEY','RC4_128','AES_128','AES_192','AES_256') OR @EncryptionAlgorithm IS NULL)) OR (@BackupSoftware = 'SQLBACKUP' AND @Encrypt = 'Y' AND (@EncryptionAlgorithm NOT IN('AES_128','AES_256') OR @EncryptionAlgorithm IS NULL)) OR (@BackupSoftware = 'SQLSAFE' AND @Encrypt = 'Y' AND (@EncryptionAlgorithm NOT IN('AES_128','AES_256') OR @EncryptionAlgorithm IS NULL))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @EncryptionAlgorithm is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (NOT (@BackupSoftware IS NULL AND @Encrypt = 'Y') AND @ServerCertificate IS NOT NULL) OR (@BackupSoftware IS NULL AND @Encrypt = 'Y' AND @ServerCertificate IS NULL AND @ServerAsymmetricKey IS NULL) OR (@BackupSoftware IS NULL AND @Encrypt = 'Y' AND @ServerCertificate IS NOT NULL AND @ServerAsymmetricKey IS NOT NULL) OR (@ServerCertificate IS NOT NULL AND NOT EXISTS(SELECT * FROM master.sys.certificates WHERE name = @ServerCertificate))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @ServerCertificate is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (NOT (@BackupSoftware IS NULL AND @Encrypt = 'Y') AND @ServerAsymmetricKey IS NOT NULL) OR (@BackupSoftware IS NULL AND @Encrypt = 'Y' AND @ServerAsymmetricKey IS NULL AND @ServerCertificate IS NULL) OR (@BackupSoftware IS NULL AND @Encrypt = 'Y' AND @ServerAsymmetricKey IS NOT NULL AND @ServerCertificate IS NOT NULL) OR (@ServerAsymmetricKey IS NOT NULL AND NOT EXISTS(SELECT * FROM master.sys.asymmetric_keys WHERE name = @ServerAsymmetricKey))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @ServerAsymmetricKey is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@EncryptionKey IS NOT NULL AND @BackupSoftware IS NULL) OR (@EncryptionKey IS NOT NULL AND @Encrypt = 'N') OR (@EncryptionKey IS NULL AND @Encrypt = 'Y' AND @BackupSoftware IN('LITESPEED','SQLBACKUP','SQLSAFE'))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @EncryptionKey is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @ReadWriteFileGroups NOT IN('Y','N') OR @ReadWriteFileGroups IS NULL OR (@ReadWriteFileGroups = 'Y' AND @BackupType = 'LOG')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @ReadWriteFileGroups is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @OverrideBackupPreference NOT IN('Y','N') OR @OverrideBackupPreference IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @OverrideBackupPreference is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @NoRecovery NOT IN('Y','N') OR @NoRecovery IS NULL OR (@NoRecovery = 'Y' AND @BackupType <> 'LOG') OR (@NoRecovery = 'Y' AND @BackupSoftware = 'SQLSAFE')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @NoRecovery is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@URL IS NOT NULL AND @Directory IS NOT NULL) OR (@URL IS NOT NULL AND @MirrorDirectory IS NOT NULL) OR (@URL IS NOT NULL AND @Version < 11.03339) OR (@URL IS NOT NULL AND @BackupSoftware IS NOT NULL) OR (@URL NOT LIKE 'https://%/%')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @URL is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@Credential IS NULL AND @URL IS NOT NULL AND @Version < 13) OR (@Credential IS NOT NULL AND @URL IS NULL) OR (@URL IS NOT NULL AND @Credential IS NULL AND NOT EXISTS(SELECT * FROM sys.credentials WHERE credential_identity = 'SHARED ACCESS SIGNATURE')) OR (@Credential IS NOT NULL AND NOT EXISTS(SELECT * FROM sys.credentials WHERE name = @Credential))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Credential is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @MirrorCleanupTime < 0 OR (@MirrorCleanupTime IS NOT NULL AND @MirrorDirectory IS NULL)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @MirrorCleanupTime is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @MirrorCleanupMode NOT IN('BEFORE_BACKUP','AFTER_BACKUP') OR @MirrorCleanupMode IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @MirrorCleanupMode is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Updateability NOT IN('READ_ONLY','READ_WRITE','ALL') OR @Updateability IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Updateability is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LogToTable NOT IN('Y','N') OR @LogToTable IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @LogToTable is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Execute NOT IN('Y','N') OR @Execute IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Execute is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ErrorMessage = 'The documentation is available at https://ola.hallengren.com/sql-server-backup.html.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @ReturnCode = @Error
    GOTO Logging
  END

  ----------------------------------------------------------------------------------------------------
  --// Check Availability Group cluster name                                                      //--
  ----------------------------------------------------------------------------------------------------

  IF @Version >= 11
  BEGIN
    SELECT @Cluster = cluster_name
    FROM sys.dm_hadr_cluster
  END

  ----------------------------------------------------------------------------------------------------
  --// Execute backup commands                                                                    //--
  ----------------------------------------------------------------------------------------------------

  WHILE EXISTS (SELECT * FROM @tmpDatabases WHERE Selected = 1 AND Completed = 0)
  BEGIN

    SELECT TOP 1 @CurrentDBID = ID,
                 @CurrentDatabaseName = DatabaseName,
                 @CurrentDatabaseNameFS = DatabaseNameFS
    FROM @tmpDatabases
    WHERE Selected = 1
    AND Completed = 0
    ORDER BY ID ASC

    SET @CurrentDatabaseID = DB_ID(@CurrentDatabaseName)

    IF DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') = 'ONLINE'
    BEGIN
      IF EXISTS (SELECT * FROM sys.database_recovery_status WHERE database_id = @CurrentDatabaseID AND database_guid IS NOT NULL)
      BEGIN
        SET @CurrentIsDatabaseAccessible = 1
      END
      ELSE
      BEGIN
        SET @CurrentIsDatabaseAccessible = 0
      END
    END

    SELECT @CurrentDifferentialBaseLSN = differential_base_lsn
    FROM sys.master_files
    WHERE database_id = @CurrentDatabaseID
    AND [type] = 0
    AND [file_id] = 1

    -- Workaround for a bug in SQL Server 2005
    IF @Version >= 9 AND @Version < 10
    AND EXISTS(SELECT * FROM sys.master_files WHERE database_id = @CurrentDatabaseID AND [type] = 0 AND [file_id] = 1 AND differential_base_lsn IS NOT NULL AND differential_base_guid IS NOT NULL AND differential_base_time IS NULL)
    BEGIN
      SET @CurrentDifferentialBaseLSN = NULL
    END

    IF DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') = 'ONLINE'
    BEGIN
      SELECT @CurrentLogLSN = last_log_backup_lsn
      FROM sys.database_recovery_status
      WHERE database_id = @CurrentDatabaseID
    END

    SET @CurrentBackupType = @BackupType

    IF @ChangeBackupType = 'Y'
    BEGIN
      IF @CurrentBackupType = 'LOG' AND DATABASEPROPERTYEX(@CurrentDatabaseName,'Recovery') <> 'SIMPLE' AND @CurrentLogLSN IS NULL AND @CurrentDatabaseName <> 'master'
      BEGIN
        SET @CurrentBackupType = 'DIFF'
      END
      IF @CurrentBackupType = 'DIFF' AND @CurrentDifferentialBaseLSN IS NULL AND @CurrentDatabaseName <> 'master'
      BEGIN
        SET @CurrentBackupType = 'FULL'
      END
    END

    IF @CurrentBackupType = 'LOG' AND (@CleanupTime IS NOT NULL OR @MirrorCleanupTime IS NOT NULL)
    BEGIN
      SELECT @CurrentLatestBackup = MAX(backup_finish_date)
      FROM msdb.dbo.backupset
      WHERE ([type] IN('D','I')
      OR database_backup_lsn < @CurrentDifferentialBaseLSN)
      AND is_damaged = 0
      AND database_name = @CurrentDatabaseName
    END

    IF @CurrentBackupType = 'DIFF'
    BEGIN
      SELECT @CurrentDifferentialBaseIsSnapshot = is_snapshot
      FROM msdb.dbo.backupset
      WHERE database_name = @CurrentDatabaseName
      AND [type] = 'D'
      AND checkpoint_lsn = @CurrentDifferentialBaseLSN
    END

    IF @Version >= 11 AND @Cluster IS NOT NULL
    BEGIN
      SELECT @CurrentAvailabilityGroup = availability_groups.name,
             @CurrentAvailabilityGroupRole = dm_hadr_availability_replica_states.role_desc,
             @CurrentAvailabilityGroupBackupPreference = UPPER(availability_groups.automated_backup_preference_desc)
      FROM sys.databases databases
      INNER JOIN sys.availability_databases_cluster availability_databases_cluster ON databases.group_database_id = availability_databases_cluster.group_database_id
      INNER JOIN sys.availability_groups availability_groups ON availability_databases_cluster.group_id = availability_groups.group_id
      INNER JOIN sys.dm_hadr_availability_replica_states dm_hadr_availability_replica_states ON availability_groups.group_id = dm_hadr_availability_replica_states.group_id AND databases.replica_id = dm_hadr_availability_replica_states.replica_id
      WHERE databases.name = @CurrentDatabaseName
    END

    IF @Version >= 11 AND @Cluster IS NOT NULL AND @CurrentAvailabilityGroup IS NOT NULL
    BEGIN
      SELECT @CurrentIsPreferredBackupReplica = sys.fn_hadr_backup_is_preferred_replica(@CurrentDatabaseName)
    END

    SELECT @CurrentDatabaseMirroringRole = UPPER(mirroring_role_desc)
    FROM sys.database_mirroring
    WHERE database_id = @CurrentDatabaseID

    IF EXISTS (SELECT * FROM msdb.dbo.log_shipping_primary_databases WHERE primary_database = @CurrentDatabaseName)
    BEGIN
      SET @CurrentLogShippingRole = 'PRIMARY'
    END
    ELSE
    IF EXISTS (SELECT * FROM msdb.dbo.log_shipping_secondary_databases WHERE secondary_database = @CurrentDatabaseName)
    BEGIN
      SET @CurrentLogShippingRole = 'SECONDARY'
    END

    SELECT @CurrentIsReadOnly = is_read_only
    FROM sys.databases
    WHERE name = @CurrentDatabaseName

    IF @Version >= 10
    BEGIN
      SET @CurrentCommand06 = 'SELECT @ParamIsEncrypted = is_encrypted FROM sys.databases WHERE name = @ParamDatabaseName'

      EXECUTE sp_executesql @statement = @CurrentCommand06, @params = N'@ParamDatabaseName nvarchar(max), @ParamIsEncrypted bit OUTPUT', @ParamDatabaseName = @CurrentDatabaseName, @ParamIsEncrypted = @CurrentIsEncrypted OUTPUT
    END

    -- Set database message
    SET @DatabaseMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Database: ' + QUOTENAME(@CurrentDatabaseName) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Status: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') AS nvarchar) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Standby: ' + CASE WHEN DATABASEPROPERTYEX(@CurrentDatabaseName,'IsInStandBy') = 1 THEN 'Yes' ELSE 'No' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Updateability: ' + CASE WHEN @CurrentIsReadOnly = 1 THEN 'READ_ONLY' WHEN  @CurrentIsReadOnly = 0 THEN 'READ_WRITE' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'User access: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'UserAccess') AS nvarchar) + CHAR(13) + CHAR(10)
    IF @CurrentIsDatabaseAccessible IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Is accessible: ' + CASE WHEN @CurrentIsDatabaseAccessible = 1 THEN 'Yes' ELSE 'No' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Recovery model: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'Recovery') AS nvarchar) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Encrypted: ' + CASE WHEN @CurrentIsEncrypted = 1 THEN 'Yes' WHEN @CurrentIsEncrypted = 0 THEN 'No' ELSE 'N/A' END + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Availability group: ' + @CurrentAvailabilityGroup + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Availability group role: ' + @CurrentAvailabilityGroupRole + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Availability group backup preference: ' + @CurrentAvailabilityGroupBackupPreference + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Is preferred backup replica: ' + CASE WHEN @CurrentIsPreferredBackupReplica = 1 THEN 'Yes' WHEN @CurrentIsPreferredBackupReplica = 0 THEN 'No' ELSE 'N/A' END + CHAR(13) + CHAR(10)
    IF @CurrentDatabaseMirroringRole IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Database mirroring role: ' + @CurrentDatabaseMirroringRole + CHAR(13) + CHAR(10)
    IF @CurrentLogShippingRole IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Log shipping role: ' + @CurrentLogShippingRole + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Differential base LSN: ' + ISNULL(CAST(@CurrentDifferentialBaseLSN AS nvarchar),'N/A') + CHAR(13) + CHAR(10)
    IF @CurrentBackupType = 'DIFF' SET @DatabaseMessage = @DatabaseMessage + 'Differential base is snapshot: ' + CASE WHEN @CurrentDifferentialBaseIsSnapshot = 1 THEN 'Yes' WHEN @CurrentDifferentialBaseIsSnapshot = 0 THEN 'No' ELSE 'N/A' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Last log backup LSN: ' + ISNULL(CAST(@CurrentLogLSN AS nvarchar),'N/A') + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = REPLACE(@DatabaseMessage,'%','%%') + ' '
    RAISERROR(@DatabaseMessage,10,1) WITH NOWAIT

    IF DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') = 'ONLINE'
    AND (@CurrentIsDatabaseAccessible = 1 OR @CurrentIsDatabaseAccessible IS NULL)
    AND DATABASEPROPERTYEX(@CurrentDatabaseName,'IsInStandBy') = 0
    AND NOT (@CurrentBackupType = 'LOG' AND (DATABASEPROPERTYEX(@CurrentDatabaseName,'Recovery') = 'SIMPLE' OR @CurrentLogLSN IS NULL))
    AND NOT (@CurrentBackupType = 'DIFF' AND @CurrentDifferentialBaseLSN IS NULL)
    AND NOT (@CurrentBackupType IN('DIFF','LOG') AND @CurrentDatabaseName = 'master')
    AND NOT (@CurrentAvailabilityGroup IS NOT NULL AND @CurrentBackupType = 'FULL' AND @CopyOnly = 'N' AND (@CurrentAvailabilityGroupRole <> 'PRIMARY' OR @CurrentAvailabilityGroupRole IS NULL))
    AND NOT (@CurrentAvailabilityGroup IS NOT NULL AND @CurrentBackupType = 'FULL' AND @CopyOnly = 'Y' AND (@CurrentIsPreferredBackupReplica <> 1 OR @CurrentIsPreferredBackupReplica IS NULL) AND @OverrideBackupPreference = 'N')
    AND NOT (@CurrentAvailabilityGroup IS NOT NULL AND @CurrentBackupType = 'DIFF' AND (@CurrentAvailabilityGroupRole <> 'PRIMARY' OR @CurrentAvailabilityGroupRole IS NULL))
    AND NOT (@CurrentAvailabilityGroup IS NOT NULL AND @CurrentBackupType = 'LOG' AND @CopyOnly = 'N' AND (@CurrentIsPreferredBackupReplica <> 1 OR @CurrentIsPreferredBackupReplica IS NULL) AND @OverrideBackupPreference = 'N')
    AND NOT (@CurrentAvailabilityGroup IS NOT NULL AND @CurrentBackupType = 'LOG' AND @CopyOnly = 'Y' AND (@CurrentAvailabilityGroupRole <> 'PRIMARY' OR @CurrentAvailabilityGroupRole IS NULL))
    AND NOT ((@CurrentLogShippingRole = 'PRIMARY' AND @CurrentLogShippingRole IS NOT NULL) AND @CurrentBackupType = 'LOG')
    AND NOT (@CurrentIsReadOnly = 1 AND @Updateability = 'READ_WRITE')
    AND NOT (@CurrentIsReadOnly = 0 AND @Updateability = 'READ_ONLY')
    BEGIN

      -- Set variables
      SET @CurrentDate = GETDATE()

      INSERT INTO @CurrentCleanupDates (CleanupDate)
      SELECT @CurrentDate

      IF @CurrentBackupType = 'LOG'
      BEGIN
        INSERT INTO @CurrentCleanupDates (CleanupDate)
        SELECT @CurrentLatestBackup
      END

      SELECT @CurrentFileExtension = CASE
      WHEN @BackupSoftware IS NULL AND @CurrentBackupType = 'FULL' THEN 'bak'
      WHEN @BackupSoftware IS NULL AND @CurrentBackupType = 'DIFF' THEN 'bak'
      WHEN @BackupSoftware IS NULL AND @CurrentBackupType = 'LOG' THEN 'trn'
      WHEN @BackupSoftware = 'LITESPEED' AND @CurrentBackupType = 'FULL' THEN 'bak'
      WHEN @BackupSoftware = 'LITESPEED' AND @CurrentBackupType = 'DIFF' THEN 'bak'
      WHEN @BackupSoftware = 'LITESPEED' AND @CurrentBackupType = 'LOG' THEN 'trn'
      WHEN @BackupSoftware = 'SQLBACKUP' AND @CurrentBackupType = 'FULL' THEN 'sqb'
      WHEN @BackupSoftware = 'SQLBACKUP' AND @CurrentBackupType = 'DIFF' THEN 'sqb'
      WHEN @BackupSoftware = 'SQLBACKUP' AND @CurrentBackupType = 'LOG' THEN 'sqb'
      WHEN @BackupSoftware = 'SQLSAFE' AND @CurrentBackupType = 'FULL' THEN 'safe'
      WHEN @BackupSoftware = 'SQLSAFE' AND @CurrentBackupType = 'DIFF' THEN 'safe'
      WHEN @BackupSoftware = 'SQLSAFE' AND @CurrentBackupType = 'LOG' THEN 'safe'
      END

      INSERT INTO @CurrentDirectories (ID, DirectoryPath, Mirror, DirectoryNumber, CreateCompleted, CleanupCompleted)
      SELECT ROW_NUMBER() OVER (ORDER BY ID), DirectoryPath + CASE WHEN RIGHT(DirectoryPath,1) = '\' THEN '' ELSE '\' END + CASE WHEN @CurrentAvailabilityGroup IS NOT NULL THEN @Cluster + '$' + @CurrentAvailabilityGroup ELSE REPLACE(CAST(SERVERPROPERTY('servername') AS nvarchar(max)),'\','$') END + '\' + @CurrentDatabaseNameFS + '\' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END, Mirror, ROW_NUMBER() OVER (PARTITION BY Mirror ORDER BY ID ASC), 0, 0
      FROM @Directories
      ORDER BY ID ASC

      IF EXISTS (SELECT * FROM @CurrentDirectories WHERE Mirror = 0)
      BEGIN
        SET @CurrentFileNumber = 0

        WHILE @CurrentFileNumber < @NumberOfFiles
        BEGIN
          SET @CurrentFileNumber = @CurrentFileNumber + 1

          SELECT @CurrentDirectoryPath = DirectoryPath
          FROM @CurrentDirectories
          WHERE @CurrentFileNumber >= (DirectoryNumber - 1) * (SELECT @NumberOfFiles / COUNT(*) FROM @CurrentDirectories WHERE Mirror = 0) + 1
          AND @CurrentFileNumber <= DirectoryNumber * (SELECT @NumberOfFiles / COUNT(*) FROM @CurrentDirectories WHERE Mirror = 0)
          AND Mirror = 0

          SET @CurrentFilePath = @CurrentDirectoryPath + '\' + CASE WHEN @CurrentAvailabilityGroup IS NOT NULL THEN @Cluster + '$' + @CurrentAvailabilityGroup ELSE REPLACE(CAST(SERVERPROPERTY('servername') AS nvarchar(max)),'\','$') END + '_' + @CurrentDatabaseNameFS + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + CASE WHEN @NumberOfFiles > 1 AND @NumberOfFiles <= 9 THEN '_' + CAST(@CurrentFileNumber AS nvarchar) WHEN @NumberOfFiles >= 10 THEN '_' + RIGHT('0' + CAST(@CurrentFileNumber AS nvarchar),2) ELSE '' END + '.' + @CurrentFileExtension

          IF LEN(@CurrentFilePath) > 259
          BEGIN
            SET @CurrentFilePath = @CurrentDirectoryPath + '\' + @CurrentDatabaseNameFS + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + CASE WHEN @NumberOfFiles > 1 AND @NumberOfFiles <= 9 THEN '_' + CAST(@CurrentFileNumber AS nvarchar) WHEN @NumberOfFiles >= 10 THEN '_' + RIGHT('0' + CAST(@CurrentFileNumber AS nvarchar),2) ELSE '' END + '.' + @CurrentFileExtension
          END

          IF LEN(@CurrentFilePath) > 259
          BEGIN
            SET @CurrentFilePath = @CurrentDirectoryPath + '\' + LEFT(@CurrentDatabaseNameFS,CASE WHEN (LEN(@CurrentDatabaseNameFS) + 259 - LEN(@CurrentFilePath) - 3) < 20 THEN 20 ELSE (LEN(@CurrentDatabaseNameFS) + 259 - LEN(@CurrentFilePath) - 3) END) + '...' + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + CASE WHEN @NumberOfFiles > 1 AND @NumberOfFiles <= 9 THEN '_' + CAST(@CurrentFileNumber AS nvarchar) WHEN @NumberOfFiles >= 10 THEN '_' + RIGHT('0' + CAST(@CurrentFileNumber AS nvarchar),2) ELSE '' END + '.' + @CurrentFileExtension
          END

          INSERT INTO @CurrentFiles ([Type], FilePath, Mirror)
          SELECT 'DISK', @CurrentFilePath, 0

          SET @CurrentDirectoryPath = NULL
          SET @CurrentFilePath = NULL
        END

        INSERT INTO @CurrentBackupSet (Mirror, VerifyCompleted)
        SELECT 0, 0
      END
      ELSE
      IF @URL IS NOT NULL
      BEGIN
        SET @CurrentFilePath = @URL + CASE WHEN RIGHT(@URL,1) = '/' THEN '' ELSE '/' END + CASE WHEN @CurrentAvailabilityGroup IS NOT NULL THEN @Cluster + '$' + @CurrentAvailabilityGroup ELSE REPLACE(CAST(SERVERPROPERTY('servername') AS nvarchar(max)),'\','$') END + '_' + @CurrentDatabaseNameFS + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + '.' + @CurrentFileExtension

        IF LEN(@CurrentFilePath) > 259
        BEGIN
          SET @CurrentFilePath = @URL + CASE WHEN RIGHT(@URL,1) = '/' THEN '' ELSE '/' END + @CurrentDatabaseNameFS + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + '.' + @CurrentFileExtension
        END

        IF LEN(@CurrentFilePath) > 259
        BEGIN
          SET @CurrentFilePath = @URL + CASE WHEN RIGHT(@URL,1) = '/' THEN '' ELSE '/' END + LEFT(@CurrentDatabaseNameFS,CASE WHEN (LEN(@CurrentDatabaseNameFS) + 259 - LEN(@CurrentFilePath) - 3) < 20 THEN 20 ELSE (LEN(@CurrentDatabaseNameFS) + 259 - LEN(@CurrentFilePath) - 3) END) + '...' + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + '.' + @CurrentFileExtension
        END

        INSERT INTO @CurrentFiles ([Type], FilePath, Mirror)
        SELECT 'URL', @CurrentFilePath, 0

        INSERT INTO @CurrentBackupSet (Mirror, VerifyCompleted)
        SELECT 0, 0
      END

      IF EXISTS (SELECT * FROM @CurrentDirectories WHERE Mirror = 1)
      BEGIN
        SET @CurrentFileNumber = 0

        WHILE @CurrentFileNumber < @NumberOfFiles
        BEGIN
          SET @CurrentFileNumber = @CurrentFileNumber + 1

          SELECT @CurrentDirectoryPath = DirectoryPath
          FROM @CurrentDirectories
          WHERE @CurrentFileNumber >= (DirectoryNumber - 1) * (SELECT @NumberOfFiles / COUNT(*) FROM @CurrentDirectories WHERE Mirror = 1) + 1
          AND @CurrentFileNumber <= DirectoryNumber * (SELECT @NumberOfFiles / COUNT(*) FROM @CurrentDirectories WHERE Mirror = 1)
          AND Mirror = 1

          SET @CurrentFilePath = @CurrentDirectoryPath + '\' + CASE WHEN @CurrentAvailabilityGroup IS NOT NULL THEN @Cluster + '$' + @CurrentAvailabilityGroup ELSE REPLACE(CAST(SERVERPROPERTY('servername') AS nvarchar(max)),'\','$') END + '_' + @CurrentDatabaseNameFS + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + CASE WHEN @NumberOfFiles > 1 AND @NumberOfFiles <= 9 THEN '_' + CAST(@CurrentFileNumber AS nvarchar) WHEN @NumberOfFiles >= 10 THEN '_' + RIGHT('0' + CAST(@CurrentFileNumber AS nvarchar),2) ELSE '' END + '.' + @CurrentFileExtension

          IF LEN(@CurrentFilePath) > 259
          BEGIN
            SET @CurrentFilePath = @CurrentDirectoryPath + '\' + @CurrentDatabaseNameFS + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + CASE WHEN @NumberOfFiles > 1 AND @NumberOfFiles <= 9 THEN '_' + CAST(@CurrentFileNumber AS nvarchar) WHEN @NumberOfFiles >= 10 THEN '_' + RIGHT('0' + CAST(@CurrentFileNumber AS nvarchar),2) ELSE '' END + '.' + @CurrentFileExtension
          END

          IF LEN(@CurrentFilePath) > 259
          BEGIN
            SET @CurrentFilePath = @CurrentDirectoryPath + '\' + LEFT(@CurrentDatabaseNameFS,CASE WHEN (LEN(@CurrentDatabaseNameFS) + 259 - LEN(@CurrentFilePath) - 3) < 20 THEN 20 ELSE (LEN(@CurrentDatabaseNameFS) + 259 - LEN(@CurrentFilePath) - 3) END) + '...' + '_' + UPPER(@CurrentBackupType) + CASE WHEN @ReadWriteFileGroups = 'Y' THEN '_PARTIAL' ELSE '' END + CASE WHEN @CopyOnly = 'Y' THEN '_COPY_ONLY' ELSE '' END + '_' + REPLACE(REPLACE(REPLACE((CONVERT(nvarchar,@CurrentDate,120)),'-',''),' ','_'),':','') + CASE WHEN @NumberOfFiles > 1 AND @NumberOfFiles <= 9 THEN '_' + CAST(@CurrentFileNumber AS nvarchar) WHEN @NumberOfFiles >= 10 THEN '_' + RIGHT('0' + CAST(@CurrentFileNumber AS nvarchar),2) ELSE '' END + '.' + @CurrentFileExtension
          END

          INSERT INTO @CurrentFiles ([Type], FilePath, Mirror)
          SELECT 'DISK', @CurrentFilePath, 1

          SET @CurrentDirectoryPath = NULL
          SET @CurrentFilePath = NULL
        END

        INSERT INTO @CurrentBackupSet (Mirror, VerifyCompleted)
        SELECT 1, 0
      END

      -- Create directory
      WHILE EXISTS (SELECT * FROM @CurrentDirectories WHERE CreateCompleted = 0)
      BEGIN
        SELECT TOP 1 @CurrentDirectoryID = ID,
                     @CurrentDirectoryPath = DirectoryPath
        FROM @CurrentDirectories
        WHERE CreateCompleted = 0
        ORDER BY ID ASC

        SET @CurrentCommandType01 = 'xp_create_subdir'
        SET @CurrentCommand01 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_create_subdir N''' + REPLACE(@CurrentDirectoryPath,'''','''''') + ''' IF @ReturnCode <> 0 RAISERROR(''Error creating directory.'', 16, 1)'
        EXECUTE @CurrentCommandOutput01 = [dbo].[CommandExecute] @Command = @CurrentCommand01, @CommandType = @CurrentCommandType01, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
        SET @Error = @@ERROR
        IF @Error <> 0 SET @CurrentCommandOutput01 = @Error
        IF @CurrentCommandOutput01 <> 0 SET @ReturnCode = @CurrentCommandOutput01

        UPDATE @CurrentDirectories
        SET CreateCompleted = 1,
            CreateOutput = @CurrentCommandOutput01
        WHERE ID = @CurrentDirectoryID

        SET @CurrentDirectoryID = NULL
        SET @CurrentDirectoryPath = NULL

        SET @CurrentCommand01 = NULL

        SET @CurrentCommandOutput01 = NULL

        SET @CurrentCommandType01 = NULL
      END

      IF @CleanupMode = 'BEFORE_BACKUP'
      BEGIN
        INSERT INTO @CurrentCleanupDates (CleanupDate, Mirror)
        SELECT DATEADD(hh,-(@CleanupTime),GETDATE()), 0

        IF NOT EXISTS(SELECT * FROM @CurrentCleanupDates WHERE (Mirror = 0 OR Mirror IS NULL) AND CleanupDate IS NULL)
        BEGIN
          UPDATE @CurrentDirectories
          SET CleanupDate = (SELECT MIN(CleanupDate)
                             FROM @CurrentCleanupDates
                             WHERE (Mirror = 0 OR Mirror IS NULL)),
              CleanupMode = 'BEFORE_BACKUP'
          WHERE Mirror = 0
        END
      END

      IF @MirrorCleanupMode = 'BEFORE_BACKUP'
      BEGIN
        INSERT INTO @CurrentCleanupDates (CleanupDate, Mirror)
        SELECT DATEADD(hh,-(@MirrorCleanupTime),GETDATE()), 1

        IF NOT EXISTS(SELECT * FROM @CurrentCleanupDates WHERE (Mirror = 1 OR Mirror IS NULL) AND CleanupDate IS NULL)
        BEGIN
          UPDATE @CurrentDirectories
          SET CleanupDate = (SELECT MIN(CleanupDate)
                             FROM @CurrentCleanupDates
                             WHERE (Mirror = 1 OR Mirror IS NULL)),
              CleanupMode = 'BEFORE_BACKUP'
          WHERE Mirror = 1
        END
      END

      -- Delete old backup files, before backup
      IF NOT EXISTS (SELECT * FROM @CurrentDirectories WHERE CreateOutput <> 0 OR CreateOutput IS NULL)
      AND @CurrentBackupType = @BackupType
      BEGIN
        WHILE EXISTS (SELECT * FROM @CurrentDirectories WHERE CleanupDate IS NOT NULL AND CleanupMode = 'BEFORE_BACKUP' AND CleanupCompleted = 0)
        BEGIN
          SELECT TOP 1 @CurrentDirectoryID = ID,
                       @CurrentDirectoryPath = DirectoryPath,
                       @CurrentCleanupDate = CleanupDate
          FROM @CurrentDirectories
          WHERE CleanupDate IS NOT NULL
          AND CleanupCompleted = 0
          ORDER BY ID ASC

          IF @BackupSoftware IS NULL
          BEGIN
            SET @CurrentCommandType02 = 'xp_delete_file'

            SET @CurrentCommand02 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_delete_file 0, N''' + REPLACE(@CurrentDirectoryPath,'''','''''') + ''', ''' + @CurrentFileExtension + ''', ''' + CONVERT(nvarchar(19),@CurrentCleanupDate,126) + ''' IF @ReturnCode <> 0 RAISERROR(''Error deleting files.'', 16, 1)'
          END

          IF @BackupSoftware = 'LITESPEED'
          BEGIN
            SET @CurrentCommandType02 = 'xp_slssqlmaint'

            SET @CurrentCommand02 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_slssqlmaint N''-MAINTDEL -DELFOLDER "' + REPLACE(@CurrentDirectoryPath,'''','''''') + '" -DELEXTENSION "' + @CurrentFileExtension + '" -DELUNIT "' + CAST(DATEDIFF(mi,@CurrentCleanupDate,GETDATE()) + 1 AS nvarchar) + '" -DELUNITTYPE "minutes" -DELUSEAGE'' IF @ReturnCode <> 0 RAISERROR(''Error deleting LiteSpeed backup files.'', 16, 1)'
          END

          IF @BackupSoftware = 'SQLBACKUP'
          BEGIN
            SET @CurrentCommandType02 = 'sqbutility'

            SET @CurrentCommand02 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.sqbutility 1032, N''' + REPLACE(@CurrentDatabaseName,'''','''''') + ''', N''' + REPLACE(@CurrentDirectoryPath,'''','''''') + ''', ''' + CASE WHEN @CurrentBackupType = 'FULL' THEN 'D' WHEN @CurrentBackupType = 'DIFF' THEN 'I' WHEN @CurrentBackupType = 'LOG' THEN 'L' END + ''', ''' + CAST(DATEDIFF(hh,@CurrentCleanupDate,GETDATE()) + 1 AS nvarchar) + 'h'', ' + ISNULL('''' + REPLACE(@EncryptionKey,'''','''''') + '''','NULL') + ' IF @ReturnCode <> 0 RAISERROR(''Error deleting SQLBackup backup files.'', 16, 1)'
          END

          IF @BackupSoftware = 'SQLSAFE'
          BEGIN
            SET @CurrentCommandType02 = 'xp_ss_delete'

            SET @CurrentCommand02 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_ss_delete @filename = N''' + REPLACE(@CurrentDirectoryPath,'''','''''') + '\*.' + @CurrentFileExtension + ''', @age = ''' + CAST(DATEDIFF(mi,@CurrentCleanupDate,GETDATE()) + 1 AS nvarchar) + 'Minutes'' IF @ReturnCode <> 0 RAISERROR(''Error deleting SQLsafe backup files.'', 16, 1)'
          END

          EXECUTE @CurrentCommandOutput02 = [dbo].[CommandExecute] @Command = @CurrentCommand02, @CommandType = @CurrentCommandType02, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
          SET @Error = @@ERROR
          IF @Error <> 0 SET @CurrentCommandOutput02 = @Error
          IF @CurrentCommandOutput02 <> 0 SET @ReturnCode = @CurrentCommandOutput02

          UPDATE @CurrentDirectories
          SET CleanupCompleted = 1,
              CleanupOutput = @CurrentCommandOutput02
          WHERE ID = @CurrentDirectoryID

          SET @CurrentDirectoryID = NULL
          SET @CurrentDirectoryPath = NULL
          SET @CurrentCleanupDate = NULL

          SET @CurrentCommand02 = NULL

          SET @CurrentCommandOutput02 = NULL

          SET @CurrentCommandType02 = NULL
        END
      END

      -- Perform a backup
      IF NOT EXISTS (SELECT * FROM @CurrentDirectories WHERE CreateOutput <> 0 OR CreateOutput IS NULL)
      BEGIN
        IF @BackupSoftware IS NULL
        BEGIN
          SELECT @CurrentCommandType03 = CASE
          WHEN @CurrentBackupType IN('DIFF','FULL') THEN 'BACKUP_DATABASE'
          WHEN @CurrentBackupType = 'LOG' THEN 'BACKUP_LOG'
          END

          SELECT @CurrentCommand03 = CASE
          WHEN @CurrentBackupType IN('DIFF','FULL') THEN 'BACKUP DATABASE ' + QUOTENAME(@CurrentDatabaseName)
          WHEN @CurrentBackupType = 'LOG' THEN 'BACKUP LOG ' + QUOTENAME(@CurrentDatabaseName)
          END

          IF @ReadWriteFileGroups = 'Y' AND @CurrentDatabaseName <> 'master' SET @CurrentCommand03 = @CurrentCommand03 + ' READ_WRITE_FILEGROUPS'

          SET @CurrentCommand03 = @CurrentCommand03 + ' TO'

          SELECT @CurrentCommand03 = @CurrentCommand03 + ' ' + [Type] + ' = N''' + REPLACE(FilePath,'''','''''') + '''' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) <> @NumberOfFiles THEN ',' ELSE '' END
          FROM @CurrentFiles
          WHERE Mirror = 0
          ORDER BY FilePath ASC

          IF EXISTS(SELECT * FROM @CurrentFiles WHERE Mirror = 1)
          BEGIN
            SET @CurrentCommand03 = @CurrentCommand03 + ' MIRROR TO'

            SELECT @CurrentCommand03 = @CurrentCommand03 + ' ' + [Type] + ' = N''' + REPLACE(FilePath,'''','''''') + '''' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) <> @NumberOfFiles THEN ',' ELSE '' END
            FROM @CurrentFiles
            WHERE Mirror = 1
            ORDER BY FilePath ASC
          END

          SET @CurrentCommand03 = @CurrentCommand03 + ' WITH '
          IF @CheckSum = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + 'CHECKSUM'
          IF @CheckSum = 'N' SET @CurrentCommand03 = @CurrentCommand03 + 'NO_CHECKSUM'

          IF @Version >= 10
          BEGIN
            SET @CurrentCommand03 = @CurrentCommand03 + CASE WHEN @Compress = 'Y' AND (@CurrentIsEncrypted = 0 OR (@CurrentIsEncrypted = 1 AND @Version >= 13 AND @MaxTransferSize > 65536)) THEN ', COMPRESSION' ELSE ', NO_COMPRESSION' END
          END

          IF @CurrentBackupType = 'DIFF' SET @CurrentCommand03 = @CurrentCommand03 + ', DIFFERENTIAL'

          IF EXISTS(SELECT * FROM @CurrentFiles WHERE Mirror = 1)
          BEGIN
            SET @CurrentCommand03 = @CurrentCommand03 + ', FORMAT'
          END

          IF @CopyOnly = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + ', COPY_ONLY'
          IF @NoRecovery = 'Y' AND @CurrentBackupType = 'LOG' SET @CurrentCommand03 = @CurrentCommand03 + ', NORECOVERY'
          IF @BlockSize IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', BLOCKSIZE = ' + CAST(@BlockSize AS nvarchar)
          IF @BufferCount IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', BUFFERCOUNT = ' + CAST(@BufferCount AS nvarchar)
          IF @MaxTransferSize IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', MAXTRANSFERSIZE = ' + CAST(@MaxTransferSize AS nvarchar)
          IF @Description IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', DESCRIPTION = N''' + REPLACE(@Description,'''','''''') + ''''
          IF @Encrypt = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + ', ENCRYPTION (ALGORITHM = ' + UPPER(@EncryptionAlgorithm) + ', '
          IF @Encrypt = 'Y' AND @ServerCertificate IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + 'SERVER CERTIFICATE = ' + QUOTENAME(@ServerCertificate)
          IF @Encrypt = 'Y' AND @ServerAsymmetricKey IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + 'SERVER ASYMMETRIC KEY = ' + QUOTENAME(@ServerAsymmetricKey)
          IF @Encrypt = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + ')'
          IF @URL IS NOT NULL AND @Credential IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', CREDENTIAL = N''' + REPLACE(@Credential,'''','''''') + ''''
        END

        IF @BackupSoftware = 'LITESPEED'
        BEGIN
          SELECT @CurrentCommandType03 = CASE
          WHEN @CurrentBackupType IN('DIFF','FULL') THEN 'xp_backup_database'
          WHEN @CurrentBackupType = 'LOG' THEN 'xp_backup_log'
          END

          SELECT @CurrentCommand03 = CASE
          WHEN @CurrentBackupType IN('DIFF','FULL') THEN 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_backup_database @database = N''' + REPLACE(@CurrentDatabaseName,'''','''''') + ''''
          WHEN @CurrentBackupType = 'LOG' THEN 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_backup_log @database = N''' + REPLACE(@CurrentDatabaseName,'''','''''') + ''''
          END

          SELECT @CurrentCommand03 = @CurrentCommand03 + ', @filename = N''' + REPLACE(FilePath,'''','''''') + ''''
          FROM @CurrentFiles
          WHERE Mirror = 0
          ORDER BY FilePath ASC

          IF EXISTS(SELECT * FROM @CurrentFiles WHERE Mirror = 1)
          BEGIN
            SELECT @CurrentCommand03 = @CurrentCommand03 + ', @mirror = N''' + REPLACE(FilePath,'''','''''') + ''''
            FROM @CurrentFiles
            WHERE Mirror = 1
            ORDER BY FilePath ASC
          END

          SET @CurrentCommand03 = @CurrentCommand03 + ', @with = '''
          IF @CheckSum = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + 'CHECKSUM'
          IF @CheckSum = 'N' SET @CurrentCommand03 = @CurrentCommand03 + 'NO_CHECKSUM'
          IF @CurrentBackupType = 'DIFF' SET @CurrentCommand03 = @CurrentCommand03 + ', DIFFERENTIAL'
          IF @CopyOnly = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + ', COPY_ONLY'
          IF @NoRecovery = 'Y' AND @CurrentBackupType = 'LOG' SET @CurrentCommand03 = @CurrentCommand03 + ', NORECOVERY'
          IF @BlockSize IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', BLOCKSIZE = ' + CAST(@BlockSize AS nvarchar)
          SET @CurrentCommand03 = @CurrentCommand03 + ''''
          IF @ReadWriteFileGroups = 'Y' AND @CurrentDatabaseName <> 'master' SET @CurrentCommand03 = @CurrentCommand03 + ', @read_write_filegroups = 1'
          IF @CompressionLevel IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @compressionlevel = ' + CAST(@CompressionLevel AS nvarchar)
          IF @BufferCount IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @buffercount = ' + CAST(@BufferCount AS nvarchar)
          IF @MaxTransferSize IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @maxtransfersize = ' + CAST(@MaxTransferSize AS nvarchar)
          IF @Threads IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @threads = ' + CAST(@Threads AS nvarchar)
          IF @Throttle IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @throttle = ' + CAST(@Throttle AS nvarchar)
          IF @Description IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @desc = N''' + REPLACE(@Description,'''','''''') + ''''

          IF @EncryptionAlgorithm IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @cryptlevel = ' + CASE
          WHEN @EncryptionAlgorithm = 'RC2_40' THEN '0'
          WHEN @EncryptionAlgorithm = 'RC2_56' THEN '1'
          WHEN @EncryptionAlgorithm = 'RC2_112' THEN '2'
          WHEN @EncryptionAlgorithm = 'RC2_128' THEN '3'
          WHEN @EncryptionAlgorithm = 'TRIPLE_DES_3KEY' THEN '4'
          WHEN @EncryptionAlgorithm = 'RC4_128' THEN '5'
          WHEN @EncryptionAlgorithm = 'AES_128' THEN '6'
          WHEN @EncryptionAlgorithm = 'AES_192' THEN '7'
          WHEN @EncryptionAlgorithm = 'AES_256' THEN '8'
          END

          IF @EncryptionKey IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @encryptionkey = N''' + REPLACE(@EncryptionKey,'''','''''') + ''''
          SET @CurrentCommand03 = @CurrentCommand03 + ' IF @ReturnCode <> 0 RAISERROR(''Error performing LiteSpeed backup.'', 16, 1)'
        END

        IF @BackupSoftware = 'SQLBACKUP'
        BEGIN
          SET @CurrentCommandType03 = 'sqlbackup'

          SELECT @CurrentCommand03 = CASE
          WHEN @CurrentBackupType IN('DIFF','FULL') THEN 'BACKUP DATABASE ' + QUOTENAME(@CurrentDatabaseName)
          WHEN @CurrentBackupType = 'LOG' THEN 'BACKUP LOG ' + QUOTENAME(@CurrentDatabaseName)
          END

          IF @ReadWriteFileGroups = 'Y' AND @CurrentDatabaseName <> 'master' SET @CurrentCommand03 = @CurrentCommand03 + ' READ_WRITE_FILEGROUPS'

          SET @CurrentCommand03 = @CurrentCommand03 + ' TO'

          SELECT @CurrentCommand03 = @CurrentCommand03 + ' DISK = N''' + REPLACE(FilePath,'''','''''') + '''' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) <> @NumberOfFiles THEN ',' ELSE '' END
          FROM @CurrentFiles
          WHERE Mirror = 0
          ORDER BY FilePath ASC

          SET @CurrentCommand03 = @CurrentCommand03 + ' WITH '

          IF EXISTS(SELECT * FROM @CurrentFiles WHERE Mirror = 1)
          BEGIN
            SET @CurrentCommand03 = @CurrentCommand03 + ' MIRRORFILE' + ' = N''' + REPLACE((SELECT FilePath FROM @CurrentFiles WHERE Mirror = 1),'''','''''') + ''', '
          END

          IF @CheckSum = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + 'CHECKSUM'
          IF @CheckSum = 'N' SET @CurrentCommand03 = @CurrentCommand03 + 'NO_CHECKSUM'
          IF @CurrentBackupType = 'DIFF' SET @CurrentCommand03 = @CurrentCommand03 + ', DIFFERENTIAL'
          IF @CopyOnly = 'Y' SET @CurrentCommand03 = @CurrentCommand03 + ', COPY_ONLY'
          IF @NoRecovery = 'Y' AND @CurrentBackupType = 'LOG' SET @CurrentCommand03 = @CurrentCommand03 + ', NORECOVERY'
          IF @CompressionLevel IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', COMPRESSION = ' + CAST(@CompressionLevel AS nvarchar)
          IF @Threads IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', THREADCOUNT = ' + CAST(@Threads AS nvarchar)
          IF @MaxTransferSize IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', MAXTRANSFERSIZE = ' + CAST(@MaxTransferSize AS nvarchar)
          IF @Description IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', DESCRIPTION = N''' + REPLACE(@Description,'''','''''') + ''''

          IF @EncryptionAlgorithm IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', KEYSIZE = ' + CASE
          WHEN @EncryptionAlgorithm = 'AES_128' THEN '128'
          WHEN @EncryptionAlgorithm = 'AES_256' THEN '256'
          END

          IF @EncryptionKey IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', PASSWORD = N''' + REPLACE(@EncryptionKey,'''','''''') + ''''
          SET @CurrentCommand03 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.sqlbackup N''-SQL "' + REPLACE(@CurrentCommand03,'''','''''') + '"''' + ' IF @ReturnCode <> 0 RAISERROR(''Error performing SQLBackup backup.'', 16, 1)'
        END

        IF @BackupSoftware = 'SQLSAFE'
        BEGIN
          SET @CurrentCommandType03 = 'xp_ss_backup'

          SET @CurrentCommand03 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_ss_backup @database = N''' + REPLACE(@CurrentDatabaseName,'''','''''') + ''''

          SELECT @CurrentCommand03 = @CurrentCommand03 + ', ' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) = 1 THEN '@filename' ELSE '@backupfile' END + ' = N''' + REPLACE(FilePath,'''','''''') + ''''
          FROM @CurrentFiles
          WHERE Mirror = 0
          ORDER BY FilePath ASC

          SELECT @CurrentCommand03 = @CurrentCommand03 + ', @mirrorfile = N''' + REPLACE(FilePath,'''','''''') + ''''
          FROM @CurrentFiles
          WHERE Mirror = 1
          ORDER BY FilePath ASC

          SET @CurrentCommand03 = @CurrentCommand03 + ', @backuptype = ' + CASE WHEN @CurrentBackupType = 'FULL' THEN '''Full''' WHEN @CurrentBackupType = 'DIFF' THEN '''Differential''' WHEN @CurrentBackupType = 'LOG' THEN '''Log''' END
          IF @ReadWriteFileGroups = 'Y' AND @CurrentDatabaseName <> 'master' SET @CurrentCommand03 = @CurrentCommand03 + ', @readwritefilegroups = 1'
          SET @CurrentCommand03 = @CurrentCommand03 + ', @checksum = ' + CASE WHEN @CheckSum = 'Y' THEN '1' WHEN @CheckSum = 'N' THEN '0' END
          SET @CurrentCommand03 = @CurrentCommand03 + ', @copyonly = ' + CASE WHEN @CopyOnly = 'Y' THEN '1' WHEN @CopyOnly = 'N' THEN '0' END
          IF @CompressionLevel IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @compressionlevel = ' + CAST(@CompressionLevel AS nvarchar)
          IF @Threads IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @threads = ' + CAST(@Threads AS nvarchar)
          IF @Description IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @desc = N''' + REPLACE(@Description,'''','''''') + ''''

          IF @EncryptionAlgorithm IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @encryptiontype = N''' + CASE
          WHEN @EncryptionAlgorithm = 'AES_128' THEN 'AES128'
          WHEN @EncryptionAlgorithm = 'AES_256' THEN 'AES256'
          END + ''''

          IF @EncryptionKey IS NOT NULL SET @CurrentCommand03 = @CurrentCommand03 + ', @encryptedbackuppassword = N''' + REPLACE(@EncryptionKey,'''','''''') + ''''
          SET @CurrentCommand03 = @CurrentCommand03 + ' IF @ReturnCode <> 0 RAISERROR(''Error performing SQLsafe backup.'', 16, 1)'
        END

        EXECUTE @CurrentCommandOutput03 = [dbo].[CommandExecute] @Command = @CurrentCommand03, @CommandType = @CurrentCommandType03, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
        SET @Error = @@ERROR
        IF @Error <> 0 SET @CurrentCommandOutput03 = @Error
        IF @CurrentCommandOutput03 <> 0 SET @ReturnCode = @CurrentCommandOutput03
      END

      -- Verify the backup
      IF @CurrentCommandOutput03 = 0 AND @Verify = 'Y'
      BEGIN
      WHILE EXISTS (SELECT * FROM @CurrentBackupSet WHERE VerifyCompleted = 0)
        BEGIN
          SELECT TOP 1 @CurrentBackupSetID = ID,
                       @CurrentIsMirror = Mirror
          FROM @CurrentBackupSet
          WHERE VerifyCompleted = 0
          ORDER BY ID ASC

          IF @BackupSoftware IS NULL
          BEGIN
            SET @CurrentCommandType04 = 'RESTORE_VERIFYONLY'

            SET @CurrentCommand04 = 'RESTORE VERIFYONLY FROM'

            SELECT @CurrentCommand04 = @CurrentCommand04 + ' ' + [Type] + ' = N''' + REPLACE(FilePath,'''','''''') + '''' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) <> @NumberOfFiles THEN ',' ELSE '' END
            FROM @CurrentFiles
            WHERE Mirror = @CurrentIsMirror
            ORDER BY FilePath ASC

            SET @CurrentCommand04 = @CurrentCommand04 + ' WITH '
            IF @CheckSum = 'Y' SET @CurrentCommand04 = @CurrentCommand04 + 'CHECKSUM'
            IF @CheckSum = 'N' SET @CurrentCommand04 = @CurrentCommand04 + 'NO_CHECKSUM'
            IF @URL IS NOT NULL AND @Credential IS NOT NULL SET @CurrentCommand04 = @CurrentCommand04 + ', CREDENTIAL = N''' + REPLACE(@Credential,'''','''''') + ''''
          END

          IF @BackupSoftware = 'LITESPEED'
          BEGIN
            SET @CurrentCommandType04 = 'xp_restore_verifyonly'

            SET @CurrentCommand04 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_restore_verifyonly'

            SELECT @CurrentCommand04 = @CurrentCommand04 + ' @filename = N''' + REPLACE(FilePath,'''','''''') + '''' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) <> @NumberOfFiles THEN ',' ELSE '' END
            FROM @CurrentFiles
            WHERE Mirror = @CurrentIsMirror
            ORDER BY FilePath ASC

            SET @CurrentCommand04 = @CurrentCommand04 + ', @with = '''
            IF @CheckSum = 'Y' SET @CurrentCommand04 = @CurrentCommand04 + 'CHECKSUM'
            IF @CheckSum = 'N' SET @CurrentCommand04 = @CurrentCommand04 + 'NO_CHECKSUM'
            SET @CurrentCommand04 = @CurrentCommand04 + ''''
            IF @EncryptionKey IS NOT NULL SET @CurrentCommand04 = @CurrentCommand04 + ', @encryptionkey = N''' + REPLACE(@EncryptionKey,'''','''''') + ''''

            SET @CurrentCommand04 = @CurrentCommand04 + ' IF @ReturnCode <> 0 RAISERROR(''Error verifying LiteSpeed backup.'', 16, 1)'
          END

          IF @BackupSoftware = 'SQLBACKUP'
          BEGIN
            SET @CurrentCommandType04 = 'sqlbackup'

            SET @CurrentCommand04 = 'RESTORE VERIFYONLY FROM'

            SELECT @CurrentCommand04 = @CurrentCommand04 + ' DISK = N''' + REPLACE(FilePath,'''','''''') + '''' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) <> @NumberOfFiles THEN ',' ELSE '' END
            FROM @CurrentFiles
            WHERE Mirror = @CurrentIsMirror
            ORDER BY FilePath ASC

            SET @CurrentCommand04 = @CurrentCommand04 + ' WITH '
            IF @CheckSum = 'Y' SET @CurrentCommand04 = @CurrentCommand04 + 'CHECKSUM'
            IF @CheckSum = 'N' SET @CurrentCommand04 = @CurrentCommand04 + 'NO_CHECKSUM'
            IF @EncryptionKey IS NOT NULL SET @CurrentCommand04 = @CurrentCommand04 + ', PASSWORD = N''' + REPLACE(@EncryptionKey,'''','''''') + ''''

            SET @CurrentCommand04 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.sqlbackup N''-SQL "' + REPLACE(@CurrentCommand04,'''','''''') + '"''' + ' IF @ReturnCode <> 0 RAISERROR(''Error verifying SQLBackup backup.'', 16, 1)'
          END

          IF @BackupSoftware = 'SQLSAFE'
          BEGIN
            SET @CurrentCommandType04 = 'xp_ss_verify'

            SET @CurrentCommand04 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_ss_verify @database = N''' + REPLACE(@CurrentDatabaseName,'''','''''') + ''''

            SELECT @CurrentCommand04 = @CurrentCommand04 + ', ' + CASE WHEN ROW_NUMBER() OVER (ORDER BY FilePath ASC) = 1 THEN '@filename' ELSE '@backupfile' END + ' = N''' + REPLACE(FilePath,'''','''''') + ''''
            FROM @CurrentFiles
            WHERE Mirror = @CurrentIsMirror
            ORDER BY FilePath ASC

            SET @CurrentCommand04 = @CurrentCommand04 + ' IF @ReturnCode <> 0 RAISERROR(''Error verifying SQLsafe backup.'', 16, 1)'
          END

          EXECUTE @CurrentCommandOutput04 = [dbo].[CommandExecute] @Command = @CurrentCommand04, @CommandType = @CurrentCommandType04, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
          SET @Error = @@ERROR
          IF @Error <> 0 SET @CurrentCommandOutput04 = @Error
          IF @CurrentCommandOutput04 <> 0 SET @ReturnCode = @CurrentCommandOutput04

          UPDATE @CurrentBackupSet
          SET VerifyCompleted = 1,
              VerifyOutput = @CurrentCommandOutput04
          WHERE ID = @CurrentBackupSetID

          SET @CurrentBackupSetID = NULL
          SET @CurrentIsMirror = NULL

          SET @CurrentCommand04 = NULL

          SET @CurrentCommandOutput04 = NULL

          SET @CurrentCommandType04 = NULL
        END
      END

      IF @CleanupMode = 'AFTER_BACKUP'
      BEGIN
        INSERT INTO @CurrentCleanupDates (CleanupDate, Mirror)
        SELECT DATEADD(hh,-(@CleanupTime),GETDATE()), 0

        IF NOT EXISTS(SELECT * FROM @CurrentCleanupDates WHERE (Mirror = 0 OR Mirror IS NULL) AND CleanupDate IS NULL)
        BEGIN
          UPDATE @CurrentDirectories
          SET CleanupDate = (SELECT MIN(CleanupDate)
                             FROM @CurrentCleanupDates
                             WHERE (Mirror = 0 OR Mirror IS NULL)),
              CleanupMode = 'AFTER_BACKUP'
          WHERE Mirror = 0
        END
      END

      IF @MirrorCleanupMode = 'AFTER_BACKUP'
      BEGIN
        INSERT INTO @CurrentCleanupDates (CleanupDate, Mirror)
        SELECT DATEADD(hh,-(@MirrorCleanupTime),GETDATE()), 1

        IF NOT EXISTS(SELECT * FROM @CurrentCleanupDates WHERE (Mirror = 1 OR Mirror IS NULL) AND CleanupDate IS NULL)
        BEGIN
          UPDATE @CurrentDirectories
          SET CleanupDate = (SELECT MIN(CleanupDate)
                             FROM @CurrentCleanupDates
                             WHERE (Mirror = 1 OR Mirror IS NULL)),
              CleanupMode = 'AFTER_BACKUP'
          WHERE Mirror = 1
        END
      END

      -- Delete old backup files, after backup
      IF ((@CurrentCommandOutput03 = 0 AND @Verify = 'N')
      OR (@CurrentCommandOutput03 = 0 AND @Verify = 'Y' AND NOT EXISTS (SELECT * FROM @CurrentBackupSet WHERE VerifyOutput <> 0 OR VerifyOutput IS NULL)))
      AND @CurrentBackupType = @BackupType
      BEGIN
        WHILE EXISTS (SELECT * FROM @CurrentDirectories WHERE CleanupDate IS NOT NULL AND CleanupMode = 'AFTER_BACKUP' AND CleanupCompleted = 0)
        BEGIN
          SELECT TOP 1 @CurrentDirectoryID = ID,
                       @CurrentDirectoryPath = DirectoryPath,
                       @CurrentCleanupDate = CleanupDate
          FROM @CurrentDirectories
          WHERE CleanupDate IS NOT NULL
          AND CleanupCompleted = 0
          ORDER BY ID ASC

          IF @BackupSoftware IS NULL
          BEGIN
            SET @CurrentCommandType05 = 'xp_delete_file'

            SET @CurrentCommand05 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_delete_file 0, N''' + REPLACE(@CurrentDirectoryPath,'''','''''') + ''', ''' + @CurrentFileExtension + ''', ''' + CONVERT(nvarchar(19),@CurrentCleanupDate,126) + ''' IF @ReturnCode <> 0 RAISERROR(''Error deleting files.'', 16, 1)'
          END

          IF @BackupSoftware = 'LITESPEED'
          BEGIN
            SET @CurrentCommandType05 = 'xp_slssqlmaint'

            SET @CurrentCommand05 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_slssqlmaint N''-MAINTDEL -DELFOLDER "' + REPLACE(@CurrentDirectoryPath,'''','''''') + '" -DELEXTENSION "' + @CurrentFileExtension + '" -DELUNIT "' + CAST(DATEDIFF(mi,@CurrentCleanupDate,GETDATE()) + 1 AS nvarchar) + '" -DELUNITTYPE "minutes" -DELUSEAGE'' IF @ReturnCode <> 0 RAISERROR(''Error deleting LiteSpeed backup files.'', 16, 1)'
          END

          IF @BackupSoftware = 'SQLBACKUP'
          BEGIN
            SET @CurrentCommandType05 = 'sqbutility'

            SET @CurrentCommand05 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.sqbutility 1032, N''' + REPLACE(@CurrentDatabaseName,'''','''''') + ''', N''' + REPLACE(@CurrentDirectoryPath,'''','''''') + ''', ''' + CASE WHEN @CurrentBackupType = 'FULL' THEN 'D' WHEN @CurrentBackupType = 'DIFF' THEN 'I' WHEN @CurrentBackupType = 'LOG' THEN 'L' END + ''', ''' + CAST(DATEDIFF(hh,@CurrentCleanupDate,GETDATE()) + 1 AS nvarchar) + 'h'', ' + ISNULL('''' + REPLACE(@EncryptionKey,'''','''''') + '''','NULL') + ' IF @ReturnCode <> 0 RAISERROR(''Error deleting SQLBackup backup files.'', 16, 1)'
          END

          IF @BackupSoftware = 'SQLSAFE'
          BEGIN
            SET @CurrentCommandType05 = 'xp_ss_delete'

            SET @CurrentCommand05 = 'DECLARE @ReturnCode int EXECUTE @ReturnCode = [master].dbo.xp_ss_delete @filename = N''' + REPLACE(@CurrentDirectoryPath,'''','''''') + '\*.' + @CurrentFileExtension + ''', @age = ''' + CAST(DATEDIFF(mi,@CurrentCleanupDate,GETDATE()) + 1 AS nvarchar) + 'Minutes'' IF @ReturnCode <> 0 RAISERROR(''Error deleting SQLsafe backup files.'', 16, 1)'
          END

          EXECUTE @CurrentCommandOutput05 = [dbo].[CommandExecute] @Command = @CurrentCommand05, @CommandType = @CurrentCommandType05, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
          SET @Error = @@ERROR
          IF @Error <> 0 SET @CurrentCommandOutput05 = @Error
          IF @CurrentCommandOutput05 <> 0 SET @ReturnCode = @CurrentCommandOutput05

          UPDATE @CurrentDirectories
          SET CleanupCompleted = 1,
              CleanupOutput = @CurrentCommandOutput05
          WHERE ID = @CurrentDirectoryID

          SET @CurrentDirectoryID = NULL
          SET @CurrentDirectoryPath = NULL
          SET @CurrentCleanupDate = NULL

          SET @CurrentCommand05 = NULL

          SET @CurrentCommandOutput05 = NULL

          SET @CurrentCommandType05 = NULL
        END
      END
    END

    -- Update that the database is completed
    UPDATE @tmpDatabases
    SET Completed = 1
    WHERE Selected = 1
    AND Completed = 0
    AND ID = @CurrentDBID

    -- Clear variables
    SET @CurrentDBID = NULL
    SET @CurrentDatabaseID = NULL
    SET @CurrentDatabaseName = NULL
    SET @CurrentBackupType = NULL
    SET @CurrentFileExtension = NULL
    SET @CurrentFileNumber = NULL
    SET @CurrentDifferentialBaseLSN = NULL
    SET @CurrentDifferentialBaseIsSnapshot = NULL
    SET @CurrentLogLSN = NULL
    SET @CurrentLatestBackup = NULL
    SET @CurrentDatabaseNameFS = NULL
    SET @CurrentDate = NULL
    SET @CurrentCleanupDate = NULL
    SET @CurrentIsDatabaseAccessible = NULL
    SET @CurrentAvailabilityGroup = NULL
    SET @CurrentAvailabilityGroupRole = NULL
    SET @CurrentAvailabilityGroupBackupPreference = NULL
    SET @CurrentIsPreferredBackupReplica = NULL
    SET @CurrentDatabaseMirroringRole = NULL
    SET @CurrentLogShippingRole = NULL
    SET @CurrentIsEncrypted = NULL
    SET @CurrentIsReadOnly = NULL

    SET @CurrentCommand03 = NULL
    SET @CurrentCommand06 = NULL

    SET @CurrentCommandOutput03 = NULL

    SET @CurrentCommandType03 = NULL

    DELETE FROM @CurrentDirectories
    DELETE FROM @CurrentFiles
    DELETE FROM @CurrentCleanupDates
    DELETE FROM @CurrentBackupSet

  END

  ----------------------------------------------------------------------------------------------------
  --// Log completing information                                                                 //--
  ----------------------------------------------------------------------------------------------------

  Logging:
  SET @EndMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120)
  SET @EndMessage = REPLACE(@EndMessage,'%','%%')
  RAISERROR(@EndMessage,10,1) WITH NOWAIT

  IF @ReturnCode <> 0
  BEGIN
    RETURN @ReturnCode
  END

  ----------------------------------------------------------------------------------------------------

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Databases]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@BackupType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Verify]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CleanupTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CleanupMode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Compress]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CopyOnly]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@ChangeBackupType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@BackupSoftware]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CheckSum]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@BlockSize]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@BufferCount]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@MaxTransferSize]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@NumberOfFiles]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CompressionLevel]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Description]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Threads]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Throttle]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Encrypt]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@EncryptionAlgorithm]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@ServerCertificate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@ServerAsymmetricKey]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@EncryptionKey]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@ReadWriteFileGroups]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@OverrideBackupPreference]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@NoRecovery]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@URL]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Credential]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@MirrorDirectory]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@MirrorCleanupTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@MirrorCleanupMode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@AvailabilityGroups]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Updateability]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@LogToTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Execute]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases1].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases2].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseNameFS]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[Completed]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups1].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups2].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups3].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups4].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups4].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabasesAvailabilityGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabasesAvailabilityGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseNameFS]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directories].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directories].[DirectoryPath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directories].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directories].[Completed]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE3].[Directories].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE3].[Directories].[StartPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE3].[Directories].[Directory]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE4].[Directories].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE4].[Directories].[StartPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[CTE4].[Directories].[Directory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directories].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directories].[DirectoryPath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@Directories].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[FileExists]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[FileIsADirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[ParentDirectoryExists]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[FileExists]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[FileIsADirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[ParentDirectoryExists]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@tmpDatabases].[ID]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[CleanupDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[DirectoryPath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[DirectoryNumber]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CreateCompleted]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupCompleted]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[Mirror]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentFiles].[Type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentFiles].[FilePath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentFiles].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[VerifyCompleted]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CreateCompleted]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Command]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@CommandType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@LogToTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Execute]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CreateOutput]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[CleanupDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[CleanupDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[Mirror]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupMode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CreateOutput]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupMode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupCompleted]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupOutput]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentFiles].[Mirror]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentFiles].[FilePath]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[VerifyCompleted]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[VerifyOutput]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[VerifyOutput]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@Directories]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@Directories].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@Directories].[DirectoryPath]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@Directories].[Mirror]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@Directories].[Completed]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@DirectoryInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[FileExists]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[FileIsADirectory]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@DirectoryInfo].[ParentDirectoryExists]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@tmpDatabases]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabases].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseNameFS]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabases].[DatabaseType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabases].[AvailabilityGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabases].[Selected]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabases].[Completed]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpAvailabilityGroups].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@tmpDatabasesAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabasesAvailabilityGroups].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@SelectedDatabases]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[DatabaseType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[AvailabilityGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@SelectedDatabases].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@SelectedAvailabilityGroups].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@CurrentBackupSet]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[Mirror]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[VerifyCompleted]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentBackupSet].[VerifyOutput]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@CurrentDirectories]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[DirectoryPath]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[Mirror]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[DirectoryNumber]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupDate]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupMode]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CreateCompleted]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupCompleted]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CreateOutput]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentDirectories].[CleanupOutput]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@CurrentFiles]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentFiles].[Type]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentFiles].[FilePath]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentFiles].[Mirror]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[CleanupDate]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseBackup].[@CurrentCleanupDates].[Mirror]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE1].[Databases1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases1].[DatabaseItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE1].[Databases2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases2].[DatabaseItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE1].[Databases3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[DatabaseItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[DatabaseType]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[AvailabilityGroup]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE1].[Databases4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[DatabaseName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[DatabaseType]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[DatabaseType]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[AvailabilityGroup]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[AvailabilityGroup]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE1].[Databases4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseBackup].[CTE1].[Databases3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups1].[AvailabilityGroupItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups2].[AvailabilityGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups3].[AvailabilityGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups4].[AvailabilityGroupName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseBackup].[CTE2].[AvailabilityGroups3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE3].[Directories]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE3].[Directories].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE3].[Directories].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE3].[Directories].[Directory]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseBackup].[CTE4].[Directories]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE4].[Directories].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE4].[Directories].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseBackup].[CTE4].[Directories].[Directory]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Databases]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Directory]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@BackupType]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Verify]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@CleanupTime]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@CleanupMode]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['AFTER_BACKUP']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Compress]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@CopyOnly]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@ChangeBackupType]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@BackupSoftware]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@CheckSum]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@BlockSize]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@BufferCount]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@MaxTransferSize]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@NumberOfFiles]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@CompressionLevel]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Description]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Threads]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Throttle]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Encrypt]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@EncryptionAlgorithm]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@ServerCertificate]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@ServerAsymmetricKey]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@EncryptionKey]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@ReadWriteFileGroups]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@OverrideBackupPreference]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@NoRecovery]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@URL]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Credential]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@MirrorDirectory]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@MirrorCleanupTime]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@MirrorCleanupMode]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['AFTER_BACKUP']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@AvailabilityGroups]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Updateability]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['ALL']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@LogToTable]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseBackup].[@Execute]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Y']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="105159" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[DatabaseBackup]&#xD;&#xA;&#xD;&#xA;@Databases nvarchar(max) = NULL,&#xD;&#xA;@Directory nvarchar(max) = NULL,&#xD;&#xA;@BackupType nvarchar(max),&#xD;&#xA;@Verify nvarchar(max) = 'N',&#xD;&#xA;@CleanupTime int = NULL,&#xD;&#xA;@CleanupMode nvarchar(max) = 'AFTER_BACKUP',&#xD;&#xA;@Compress nvarchar(max) = NULL,&#xD;&#xA;@CopyOnly nvarchar(max) = 'N',&#xD;&#xA;@ChangeBackupType nvarchar(max) = 'N',&#xD;&#xA;@BackupSoftware nvarchar(max) = NULL,&#xD;&#xA;@CheckSum nvarchar(max) = 'N',&#xD;&#xA;@BlockSize int = NULL,&#xD;&#xA;@BufferCount int = NULL,&#xD;&#xA;@MaxTransferSize int = NULL,&#xD;&#xA;@NumberOfFiles int = NULL,&#xD;&#xA;@CompressionLevel int = NULL,&#xD;&#xA;@Description nvarchar(max) = NULL,&#xD;&#xA;@Threads int = NULL,&#xD;&#xA;@Throttle int = NULL,&#xD;&#xA;@Encrypt nvarchar(max) = 'N',&#xD;&#xA;@EncryptionAlgorithm nvarchar(max) = NULL,&#xD;&#xA;@ServerCertificate nvarchar(max) = NULL,&#xD;&#xA;@ServerAsymmetricKey nvarchar(max) = NULL,&#xD;&#xA;@EncryptionKey nvarchar(max) = NULL,&#xD;&#xA;@ReadWriteFileGroups nvarchar(max) = 'N',&#xD;&#xA;@OverrideBackupPreference nvarchar(max) = 'N',&#xD;&#xA;@NoRecovery nvarchar(max) = 'N',&#xD;&#xA;@URL nvarchar(max) = NULL,&#xD;&#xA;@Credential nvarchar(max) = NULL,&#xD;&#xA;@MirrorDirectory nvarchar(max) = NULL,&#xD;&#xA;@MirrorCleanupTime int = NULL,&#xD;&#xA;@MirrorCleanupMode nvarchar(max) = 'AFTER_BACKUP',&#xD;&#xA;@AvailabilityGroups nvarchar(max) = NULL,&#xD;&#xA;@Updateability nvarchar(max) = 'ALL',&#xD;&#xA;@LogToTable nvarchar(max) = 'N',&#xD;&#xA;@Execute nvarchar(max) = 'Y'&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[DatabaseIntegrityCheck]">
			<Property Name="BodyScript">
				<Value><![CDATA[

BEGIN

  ----------------------------------------------------------------------------------------------------
  --// Source: https://ola.hallengren.com                                                          //--
  ----------------------------------------------------------------------------------------------------

  SET NOCOUNT ON

  DECLARE @StartMessage nvarchar(max)
  DECLARE @EndMessage nvarchar(max)
  DECLARE @DatabaseMessage nvarchar(max)
  DECLARE @ErrorMessage nvarchar(max)

  DECLARE @Version numeric(18,10)
  DECLARE @AmazonRDS bit

  DECLARE @Cluster nvarchar(max)

  DECLARE @CurrentDBID int
  DECLARE @CurrentDatabaseID int
  DECLARE @CurrentDatabaseName nvarchar(max)
  DECLARE @CurrentIsDatabaseAccessible bit
  DECLARE @CurrentAvailabilityGroup nvarchar(max)
  DECLARE @CurrentAvailabilityGroupRole nvarchar(max)
  DECLARE @CurrentDatabaseMirroringRole nvarchar(max)
  DECLARE @CurrentIsReadOnly bit

  DECLARE @CurrentFGID int
  DECLARE @CurrentFileGroupID int
  DECLARE @CurrentFileGroupName nvarchar(max)
  DECLARE @CurrentFileGroupExists bit

  DECLARE @CurrentOID int
  DECLARE @CurrentSchemaID int
  DECLARE @CurrentSchemaName nvarchar(max)
  DECLARE @CurrentObjectID int
  DECLARE @CurrentObjectName nvarchar(max)
  DECLARE @CurrentObjectType nvarchar(max)
  DECLARE @CurrentObjectExists bit

  DECLARE @CurrentCommand01 nvarchar(max)
  DECLARE @CurrentCommand02 nvarchar(max)
  DECLARE @CurrentCommand03 nvarchar(max)
  DECLARE @CurrentCommand04 nvarchar(max)
  DECLARE @CurrentCommand05 nvarchar(max)
  DECLARE @CurrentCommand06 nvarchar(max)
  DECLARE @CurrentCommand07 nvarchar(max)
  DECLARE @CurrentCommand08 nvarchar(max)
  DECLARE @CurrentCommand09 nvarchar(max)

  DECLARE @CurrentCommandOutput01 int
  DECLARE @CurrentCommandOutput04 int
  DECLARE @CurrentCommandOutput05 int
  DECLARE @CurrentCommandOutput08 int
  DECLARE @CurrentCommandOutput09 int

  DECLARE @CurrentCommandType01 nvarchar(max)
  DECLARE @CurrentCommandType04 nvarchar(max)
  DECLARE @CurrentCommandType05 nvarchar(max)
  DECLARE @CurrentCommandType08 nvarchar(max)
  DECLARE @CurrentCommandType09 nvarchar(max)

  DECLARE @tmpDatabases TABLE (ID int IDENTITY,
                               DatabaseName nvarchar(max),
                               DatabaseType nvarchar(max),
                               AvailabilityGroup bit,
                               [Snapshot] bit,
                               Selected bit,
                               Completed bit,
                               PRIMARY KEY(Selected, Completed, ID))

  DECLARE @tmpAvailabilityGroups TABLE (ID int IDENTITY PRIMARY KEY,
                                        AvailabilityGroupName nvarchar(max),
                                        Selected bit)

  DECLARE @tmpDatabasesAvailabilityGroups TABLE (DatabaseName nvarchar(max), AvailabilityGroupName nvarchar(max))

  DECLARE @tmpFileGroups TABLE (ID int IDENTITY,
                                FileGroupID int,
                                FileGroupName nvarchar(max),
                                Selected bit,
                                Completed bit,
                                PRIMARY KEY(Selected, Completed, ID))

  DECLARE @tmpObjects TABLE (ID int IDENTITY,
                             SchemaID int,
                             SchemaName nvarchar(max),
                             ObjectID int,
                             ObjectName nvarchar(max),
                             ObjectType nvarchar(max),
                             Selected bit,
                             Completed bit,
                             PRIMARY KEY(Selected, Completed, ID))

  DECLARE @SelectedDatabases TABLE (DatabaseName nvarchar(max),
                                    DatabaseType nvarchar(max),
                                    AvailabilityGroup nvarchar(max),
                                    Selected bit)

  DECLARE @SelectedAvailabilityGroups TABLE (AvailabilityGroupName nvarchar(max),
                                             Selected bit)

  DECLARE @SelectedFileGroups TABLE (DatabaseName nvarchar(max),
                                     FileGroupName nvarchar(max),
                                     Selected bit)

  DECLARE @SelectedObjects TABLE (DatabaseName nvarchar(max),
                                  SchemaName nvarchar(max),
                                  ObjectName nvarchar(max),
                                  Selected bit)

  DECLARE @SelectedCheckCommands TABLE (CheckCommand nvarchar(max))

  DECLARE @Error int
  DECLARE @ReturnCode int

  SET @Error = 0
  SET @ReturnCode = 0

  SET @Version = CAST(LEFT(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)),CHARINDEX('.',CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max))) - 1) + '.' + REPLACE(RIGHT(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)), LEN(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max))) - CHARINDEX('.',CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)))),'.','') AS numeric(18,10))

  SET @AmazonRDS = CASE WHEN DB_ID('rdsadmin') IS NOT NULL AND SUSER_SNAME(0x01) = 'rdsa' THEN 1 ELSE 0 END

  ----------------------------------------------------------------------------------------------------
  --// Log initial information                                                                    //--
  ----------------------------------------------------------------------------------------------------

  SET @StartMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Server: ' + CAST(SERVERPROPERTY('ServerName') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Version: ' + CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Edition: ' + CAST(SERVERPROPERTY('Edition') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Procedure: ' + QUOTENAME(DB_NAME(DB_ID())) + '.' + (SELECT QUOTENAME(schemas.name) FROM sys.schemas schemas INNER JOIN sys.objects objects ON schemas.[schema_id] = objects.[schema_id] WHERE [object_id] = @@PROCID) + '.' + QUOTENAME(OBJECT_NAME(@@PROCID)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Parameters: @Databases = ' + ISNULL('''' + REPLACE(@Databases,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @CheckCommands = ' + ISNULL('''' + REPLACE(@CheckCommands,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @PhysicalOnly = ' + ISNULL('''' + REPLACE(@PhysicalOnly,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @NoIndex = ' + ISNULL('''' + REPLACE(@NoIndex,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @ExtendedLogicalChecks = ' + ISNULL('''' + REPLACE(@ExtendedLogicalChecks,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @TabLock = ' + ISNULL('''' + REPLACE(@TabLock,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @FileGroups = ' + ISNULL('''' + REPLACE(@FileGroups,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Objects = ' + ISNULL('''' + REPLACE(@Objects,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @MaxDOP = ' + ISNULL(CAST(@MaxDOP AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @AvailabilityGroups = ' + ISNULL('''' + REPLACE(@AvailabilityGroups,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @AvailabilityGroupReplicas = ' + ISNULL('''' + REPLACE(@AvailabilityGroupReplicas,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Updateability = ' + ISNULL('''' + REPLACE(@Updateability,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @LockTimeout = ' + ISNULL(CAST(@LockTimeout AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @LogToTable = ' + ISNULL('''' + REPLACE(@LogToTable,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Execute = ' + ISNULL('''' + REPLACE(@Execute,'''','''''') + '''','NULL') + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Source: https://ola.hallengren.com' + CHAR(13) + CHAR(10)
  SET @StartMessage = REPLACE(@StartMessage,'%','%%') + ' '
  RAISERROR(@StartMessage,10,1) WITH NOWAIT

  ----------------------------------------------------------------------------------------------------
  --// Check core requirements                                                                    //--
  ----------------------------------------------------------------------------------------------------

  IF NOT EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'P' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandExecute')
  BEGIN
    SET @ErrorMessage = 'The stored procedure CommandExecute is missing. Download https://ola.hallengren.com/scripts/CommandExecute.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'P' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandExecute' AND (OBJECT_DEFINITION(objects.[object_id]) NOT LIKE '%@LogToTable%' OR OBJECT_DEFINITION(objects.[object_id]) LIKE '%LOCK_TIMEOUT%'))
  BEGIN
    SET @ErrorMessage = 'The stored procedure CommandExecute needs to be updated. Download https://ola.hallengren.com/scripts/CommandExecute.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LogToTable = 'Y' AND NOT EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'U' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandLog')
  BEGIN
    SET @ErrorMessage = 'The table CommandLog is missing. Download https://ola.hallengren.com/scripts/CommandLog.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF SERVERPROPERTY('EngineEdition') = 5 AND @Version < 12
  BEGIN
    SET @ErrorMessage = 'The stored procedure DatabaseIntegrityCheck is not supported on this version of Azure SQL Database.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ReturnCode = @Error
    GOTO Logging
  END

  ----------------------------------------------------------------------------------------------------
  --// Select databases                                                                           //--
  ----------------------------------------------------------------------------------------------------

  SET @Databases = REPLACE(@Databases, CHAR(10), '')
  SET @Databases = REPLACE(@Databases, CHAR(13), '')

  WHILE CHARINDEX(', ',@Databases) > 0 SET @Databases = REPLACE(@Databases,', ',',')
  WHILE CHARINDEX(' ,',@Databases) > 0 SET @Databases = REPLACE(@Databases,' ,',',')

  SET @Databases = LTRIM(RTRIM(@Databases));

  WITH Databases1 (StartPosition, EndPosition, DatabaseItem) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Databases, 1), 0), LEN(@Databases) + 1) AS EndPosition,
         SUBSTRING(@Databases, 1, ISNULL(NULLIF(CHARINDEX(',', @Databases, 1), 0), LEN(@Databases) + 1) - 1) AS DatabaseItem
  WHERE @Databases IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Databases, EndPosition + 1), 0), LEN(@Databases) + 1) AS EndPosition,
         SUBSTRING(@Databases, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @Databases, EndPosition + 1), 0), LEN(@Databases) + 1) - EndPosition - 1) AS DatabaseItem
  FROM Databases1
  WHERE EndPosition < LEN(@Databases) + 1
  ),
  Databases2 (DatabaseItem, Selected) AS
  (
  SELECT CASE WHEN DatabaseItem LIKE '-%' THEN RIGHT(DatabaseItem,LEN(DatabaseItem) - 1) ELSE DatabaseItem END AS DatabaseItem,
         CASE WHEN DatabaseItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
  FROM Databases1
  ),
  Databases3 (DatabaseItem, DatabaseType, AvailabilityGroup, Selected) AS
  (
  SELECT CASE WHEN DatabaseItem IN('ALL_DATABASES','SYSTEM_DATABASES','USER_DATABASES','AVAILABILITY_GROUP_DATABASES') THEN '%' ELSE DatabaseItem END AS DatabaseItem,
         CASE WHEN DatabaseItem = 'SYSTEM_DATABASES' THEN 'S' WHEN DatabaseItem = 'USER_DATABASES' THEN 'U' ELSE NULL END AS DatabaseType,
         CASE WHEN DatabaseItem = 'AVAILABILITY_GROUP_DATABASES' THEN 1 ELSE NULL END AvailabilityGroup,
         Selected
  FROM Databases2
  ),
  Databases4 (DatabaseName, DatabaseType, AvailabilityGroup, Selected) AS
  (
  SELECT CASE WHEN LEFT(DatabaseItem,1) = '[' AND RIGHT(DatabaseItem,1) = ']' THEN PARSENAME(DatabaseItem,1) ELSE DatabaseItem END AS DatabaseItem,
         DatabaseType,
         AvailabilityGroup,
         Selected
  FROM Databases3
  )
  INSERT INTO @SelectedDatabases (DatabaseName, DatabaseType, AvailabilityGroup, Selected)
  SELECT DatabaseName,
         DatabaseType,
         AvailabilityGroup,
         Selected
  FROM Databases4
  OPTION (MAXRECURSION 0)

  IF @Version >= 11 AND SERVERPROPERTY('EngineEdition') <> 5
  BEGIN
    INSERT INTO @tmpDatabases (DatabaseName, DatabaseType, AvailabilityGroup, [Snapshot], Selected, Completed)
    SELECT [name] AS DatabaseName,
           CASE WHEN name IN('master','msdb','model') THEN 'S' ELSE 'U' END AS DatabaseType,
           CASE WHEN name IN (SELECT availability_databases_cluster.database_name FROM sys.availability_databases_cluster availability_databases_cluster) THEN 1 ELSE 0 END AS AvailabilityGroup,
           CASE WHEN source_database_id IS NOT NULL THEN 1 ELSE 0 END AS [Snapshot],
           0 AS Selected,
           0 AS Completed
    FROM sys.databases
    ORDER BY [name] ASC
  END
  ELSE
  BEGIN
    INSERT INTO @tmpDatabases (DatabaseName, DatabaseType, AvailabilityGroup, [Snapshot], Selected, Completed)
    SELECT [name] AS DatabaseName,
           CASE WHEN name IN('master','msdb','model') THEN 'S' ELSE 'U' END AS DatabaseType,
           NULL AS AvailabilityGroup,
           CASE WHEN source_database_id IS NOT NULL THEN 1 ELSE 0 END AS [Snapshot],
           0 AS Selected,
           0 AS Completed
    FROM sys.databases
    ORDER BY [name] ASC
  END

  UPDATE tmpDatabases
  SET tmpDatabases.Selected = SelectedDatabases.Selected
  FROM @tmpDatabases tmpDatabases
  INNER JOIN @SelectedDatabases SelectedDatabases
  ON tmpDatabases.DatabaseName LIKE REPLACE(SelectedDatabases.DatabaseName,'_','[_]')
  AND (tmpDatabases.DatabaseType = SelectedDatabases.DatabaseType OR SelectedDatabases.DatabaseType IS NULL)
  AND (tmpDatabases.AvailabilityGroup = SelectedDatabases.AvailabilityGroup OR SelectedDatabases.AvailabilityGroup IS NULL)
  AND NOT ((tmpDatabases.DatabaseName = 'tempdb' OR tmpDatabases.[Snapshot] = 1) AND tmpDatabases.DatabaseName <> SelectedDatabases.DatabaseName)
  WHERE SelectedDatabases.Selected = 1

  UPDATE tmpDatabases
  SET tmpDatabases.Selected = SelectedDatabases.Selected
  FROM @tmpDatabases tmpDatabases
  INNER JOIN @SelectedDatabases SelectedDatabases
  ON tmpDatabases.DatabaseName LIKE REPLACE(SelectedDatabases.DatabaseName,'_','[_]')
  AND (tmpDatabases.DatabaseType = SelectedDatabases.DatabaseType OR SelectedDatabases.DatabaseType IS NULL)
  AND (tmpDatabases.AvailabilityGroup = SelectedDatabases.AvailabilityGroup OR SelectedDatabases.AvailabilityGroup IS NULL)
  AND NOT ((tmpDatabases.DatabaseName = 'tempdb' OR tmpDatabases.[Snapshot] = 1) AND tmpDatabases.DatabaseName <> SelectedDatabases.DatabaseName)
  WHERE SelectedDatabases.Selected = 0

  IF @Databases IS NOT NULL AND (NOT EXISTS(SELECT * FROM @SelectedDatabases) OR EXISTS(SELECT * FROM @SelectedDatabases WHERE DatabaseName IS NULL OR DatabaseName = ''))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Databases is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  ----------------------------------------------------------------------------------------------------
  --// Select availability groups                                                                 //--
  ----------------------------------------------------------------------------------------------------

  IF @AvailabilityGroups IS NOT NULL AND @Version >= 11
  BEGIN

    SET @AvailabilityGroups = REPLACE(@AvailabilityGroups, CHAR(10), '')
    SET @AvailabilityGroups = REPLACE(@AvailabilityGroups, CHAR(13), '')

    WHILE CHARINDEX(', ',@AvailabilityGroups) > 0 SET @AvailabilityGroups = REPLACE(@AvailabilityGroups,', ',',')
    WHILE CHARINDEX(' ,',@AvailabilityGroups) > 0 SET @AvailabilityGroups = REPLACE(@AvailabilityGroups,' ,',',')

    SET @AvailabilityGroups = LTRIM(RTRIM(@AvailabilityGroups));

    WITH AvailabilityGroups1 (StartPosition, EndPosition, AvailabilityGroupItem) AS
    (
    SELECT 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, 1), 0), LEN(@AvailabilityGroups) + 1) AS EndPosition,
           SUBSTRING(@AvailabilityGroups, 1, ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, 1), 0), LEN(@AvailabilityGroups) + 1) - 1) AS AvailabilityGroupItem
    WHERE @AvailabilityGroups IS NOT NULL
    UNION ALL
    SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, EndPosition + 1), 0), LEN(@AvailabilityGroups) + 1) AS EndPosition,
           SUBSTRING(@AvailabilityGroups, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, EndPosition + 1), 0), LEN(@AvailabilityGroups) + 1) - EndPosition - 1) AS AvailabilityGroupItem
    FROM AvailabilityGroups1
    WHERE EndPosition < LEN(@AvailabilityGroups) + 1
    ),
    AvailabilityGroups2 (AvailabilityGroupItem, Selected) AS
    (
    SELECT CASE WHEN AvailabilityGroupItem LIKE '-%' THEN RIGHT(AvailabilityGroupItem,LEN(AvailabilityGroupItem) - 1) ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           CASE WHEN AvailabilityGroupItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
    FROM AvailabilityGroups1
    ),
    AvailabilityGroups3 (AvailabilityGroupItem, Selected) AS
    (
    SELECT CASE WHEN AvailabilityGroupItem = 'ALL_AVAILABILITY_GROUPS' THEN '%' ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           Selected
    FROM AvailabilityGroups2
    ),
    AvailabilityGroups4 (AvailabilityGroupName, Selected) AS
    (
    SELECT CASE WHEN LEFT(AvailabilityGroupItem,1) = '[' AND RIGHT(AvailabilityGroupItem,1) = ']' THEN PARSENAME(AvailabilityGroupItem,1) ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           Selected
    FROM AvailabilityGroups3
    )
    INSERT INTO @SelectedAvailabilityGroups (AvailabilityGroupName, Selected)
    SELECT AvailabilityGroupName, Selected
    FROM AvailabilityGroups4
    OPTION (MAXRECURSION 0)

    INSERT INTO @tmpAvailabilityGroups (AvailabilityGroupName, Selected)
    SELECT name AS AvailabilityGroupName,
           0 AS Selected
    FROM sys.availability_groups

    UPDATE tmpAvailabilityGroups
    SET tmpAvailabilityGroups.Selected = SelectedAvailabilityGroups.Selected
    FROM @tmpAvailabilityGroups tmpAvailabilityGroups
    INNER JOIN @SelectedAvailabilityGroups SelectedAvailabilityGroups
    ON tmpAvailabilityGroups.AvailabilityGroupName LIKE REPLACE(SelectedAvailabilityGroups.AvailabilityGroupName,'_','[_]')
    WHERE SelectedAvailabilityGroups.Selected = 1

    UPDATE tmpAvailabilityGroups
    SET tmpAvailabilityGroups.Selected = SelectedAvailabilityGroups.Selected
    FROM @tmpAvailabilityGroups tmpAvailabilityGroups
    INNER JOIN @SelectedAvailabilityGroups SelectedAvailabilityGroups
    ON tmpAvailabilityGroups.AvailabilityGroupName LIKE REPLACE(SelectedAvailabilityGroups.AvailabilityGroupName,'_','[_]')
    WHERE SelectedAvailabilityGroups.Selected = 0

    INSERT INTO @tmpDatabasesAvailabilityGroups (DatabaseName, AvailabilityGroupName)
    SELECT availability_databases_cluster.database_name, availability_groups.name
    FROM sys.availability_databases_cluster availability_databases_cluster
    INNER JOIN sys.availability_groups availability_groups ON availability_databases_cluster.group_id = availability_groups.group_id

    UPDATE tmpDatabases
    SET Selected = 1
    FROM @tmpDatabases tmpDatabases
    INNER JOIN @tmpDatabasesAvailabilityGroups tmpDatabasesAvailabilityGroups ON tmpDatabases.DatabaseName = tmpDatabasesAvailabilityGroups.DatabaseName
    INNER JOIN @tmpAvailabilityGroups tmpAvailabilityGroups ON tmpDatabasesAvailabilityGroups.AvailabilityGroupName = tmpAvailabilityGroups.AvailabilityGroupName
    WHERE tmpAvailabilityGroups.Selected = 1

  END

  IF @AvailabilityGroups IS NOT NULL AND (NOT EXISTS(SELECT * FROM @SelectedAvailabilityGroups) OR EXISTS(SELECT * FROM @SelectedAvailabilityGroups WHERE AvailabilityGroupName IS NULL OR AvailabilityGroupName = '') OR @Version < 11)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @AvailabilityGroups is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@Databases IS NULL AND @AvailabilityGroups IS NULL)
  BEGIN
    SET @ErrorMessage = 'You need to specify one of the parameters @Databases and @AvailabilityGroups.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@Databases IS NOT NULL AND @AvailabilityGroups IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'You can only specify one of the parameters @Databases and @AvailabilityGroups.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  ----------------------------------------------------------------------------------------------------
  --// Select filegroups                                                                          //--
  ----------------------------------------------------------------------------------------------------

  SET @FileGroups = REPLACE(@FileGroups, CHAR(10), '')
  SET @FileGroups = REPLACE(@FileGroups, CHAR(13), '')

  WHILE CHARINDEX(', ',@FileGroups) > 0 SET @FileGroups = REPLACE(@FileGroups,', ',',')
  WHILE CHARINDEX(' ,',@FileGroups) > 0 SET @FileGroups = REPLACE(@FileGroups,' ,',',')

  SET @FileGroups = LTRIM(RTRIM(@FileGroups));

  WITH FileGroups1 (StartPosition, EndPosition, FileGroupItem) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FileGroups, 1), 0), LEN(@FileGroups) + 1) AS EndPosition,
         SUBSTRING(@FileGroups, 1, ISNULL(NULLIF(CHARINDEX(',', @FileGroups, 1), 0), LEN(@FileGroups) + 1) - 1) AS FileGroupItem
  WHERE @FileGroups IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FileGroups, EndPosition + 1), 0), LEN(@FileGroups) + 1) AS EndPosition,
         SUBSTRING(@FileGroups, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @FileGroups, EndPosition + 1), 0), LEN(@FileGroups) + 1) - EndPosition - 1) AS FileGroupItem
  FROM FileGroups1
  WHERE EndPosition < LEN(@FileGroups) + 1
  ),
  FileGroups2 (FileGroupItem, Selected) AS
  (
  SELECT CASE WHEN FileGroupItem LIKE '-%' THEN RIGHT(FileGroupItem,LEN(FileGroupItem) - 1) ELSE FileGroupItem END AS FileGroupItem,
         CASE WHEN FileGroupItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
  FROM FileGroups1
  ),
  FileGroups3 (FileGroupItem, Selected) AS
  (
  SELECT CASE WHEN FileGroupItem = 'ALL_FILEGROUPS' THEN '%.%' ELSE FileGroupItem END AS FileGroupItem,
         Selected
  FROM FileGroups2
  ),
  FileGroups4 (DatabaseName, FileGroupName, Selected) AS
  (
  SELECT CASE WHEN PARSENAME(FileGroupItem,4) IS NULL AND PARSENAME(FileGroupItem,3) IS NULL THEN PARSENAME(FileGroupItem,2) ELSE NULL END AS DatabaseName,
         CASE WHEN PARSENAME(FileGroupItem,4) IS NULL AND PARSENAME(FileGroupItem,3) IS NULL THEN PARSENAME(FileGroupItem,1) ELSE NULL END AS FileGroupName,
         Selected
  FROM FileGroups3
  )
  INSERT INTO @SelectedFileGroups (DatabaseName, FileGroupName, Selected)
  SELECT DatabaseName, FileGroupName, Selected
  FROM FileGroups4
  OPTION (MAXRECURSION 0)

  ----------------------------------------------------------------------------------------------------
  --// Select objects                                                                             //--
  ----------------------------------------------------------------------------------------------------

  SET @Objects = REPLACE(@Objects, CHAR(10), '')
  SET @Objects = REPLACE(@Objects, CHAR(13), '')

  WHILE CHARINDEX(', ',@Objects) > 0 SET @Objects = REPLACE(@Objects,', ',',')
  WHILE CHARINDEX(' ,',@Objects) > 0 SET @Objects = REPLACE(@Objects,' ,',',')

  SET @Objects = LTRIM(RTRIM(@Objects));

  WITH Objects1 (StartPosition, EndPosition, ObjectItem) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Objects, 1), 0), LEN(@Objects) + 1) AS EndPosition,
         SUBSTRING(@Objects, 1, ISNULL(NULLIF(CHARINDEX(',', @Objects, 1), 0), LEN(@Objects) + 1) - 1) AS ObjectItem
  WHERE @Objects IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Objects, EndPosition + 1), 0), LEN(@Objects) + 1) AS EndPosition,
         SUBSTRING(@Objects, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @Objects, EndPosition + 1), 0), LEN(@Objects) + 1) - EndPosition - 1) AS ObjectItem
  FROM Objects1
  WHERE EndPosition < LEN(@Objects) + 1
  ),
  Objects2 (ObjectItem, Selected) AS
  (
  SELECT CASE WHEN ObjectItem LIKE '-%' THEN RIGHT(ObjectItem,LEN(ObjectItem) - 1) ELSE ObjectItem END AS ObjectItem,
         CASE WHEN ObjectItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
  FROM Objects1
  ),
  Objects3 (ObjectItem, Selected) AS
  (
  SELECT CASE WHEN ObjectItem = 'ALL_OBJECTS' THEN '%.%.%' ELSE ObjectItem END AS ObjectItem,
         Selected
  FROM Objects2
  ),
  Objects4 (DatabaseName, SchemaName, ObjectName, Selected) AS
  (
  SELECT CASE WHEN PARSENAME(ObjectItem,4) IS NULL THEN PARSENAME(ObjectItem,3) ELSE NULL END AS DatabaseName,
         CASE WHEN PARSENAME(ObjectItem,4) IS NULL THEN PARSENAME(ObjectItem,2) ELSE NULL END AS SchemaName,
         CASE WHEN PARSENAME(ObjectItem,4) IS NULL THEN PARSENAME(ObjectItem,1) ELSE NULL END AS ObjectName,
         Selected
  FROM Objects3
  )
  INSERT INTO @SelectedObjects (DatabaseName, SchemaName, ObjectName, Selected)
  SELECT DatabaseName, SchemaName, ObjectName, Selected
  FROM Objects4
  OPTION (MAXRECURSION 0);

  ----------------------------------------------------------------------------------------------------
  --// Select check commands                                                                      //--
  ----------------------------------------------------------------------------------------------------

  WITH CheckCommands (StartPosition, EndPosition, CheckCommand) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @CheckCommands, 1), 0), LEN(@CheckCommands) + 1) AS EndPosition,
         SUBSTRING(@CheckCommands, 1, ISNULL(NULLIF(CHARINDEX(',', @CheckCommands, 1), 0), LEN(@CheckCommands) + 1) - 1) AS CheckCommand
  WHERE @CheckCommands IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @CheckCommands, EndPosition + 1), 0), LEN(@CheckCommands) + 1) AS EndPosition,
         SUBSTRING(@CheckCommands, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @CheckCommands, EndPosition + 1), 0), LEN(@CheckCommands) + 1) - EndPosition - 1) AS CheckCommand
  FROM CheckCommands
  WHERE EndPosition < LEN(@CheckCommands) + 1
  )
  INSERT INTO @SelectedCheckCommands (CheckCommand)
  SELECT CheckCommand
  FROM CheckCommands
  OPTION (MAXRECURSION 0)

  ----------------------------------------------------------------------------------------------------
  --// Check input parameters                                                                     //--
  ----------------------------------------------------------------------------------------------------

  IF EXISTS (SELECT * FROM @SelectedCheckCommands WHERE CheckCommand NOT IN('CHECKDB','CHECKFILEGROUP','CHECKALLOC','CHECKTABLE','CHECKCATALOG')) OR EXISTS (SELECT * FROM @SelectedCheckCommands GROUP BY CheckCommand HAVING COUNT(*) > 1) OR NOT EXISTS (SELECT * FROM @SelectedCheckCommands) OR (EXISTS (SELECT * FROM @SelectedCheckCommands WHERE CheckCommand IN('CHECKDB')) AND EXISTS (SELECT CheckCommand FROM @SelectedCheckCommands WHERE CheckCommand IN('CHECKFILEGROUP','CHECKALLOC','CHECKTABLE','CHECKCATALOG'))) OR (EXISTS (SELECT * FROM @SelectedCheckCommands WHERE CheckCommand IN('CHECKFILEGROUP')) AND EXISTS (SELECT CheckCommand FROM @SelectedCheckCommands WHERE CheckCommand IN('CHECKALLOC','CHECKTABLE')))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @CheckCommands is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @PhysicalOnly NOT IN ('Y','N') OR @PhysicalOnly IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @PhysicalOnly is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @NoIndex NOT IN ('Y','N') OR @NoIndex IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @NoIndex is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @ExtendedLogicalChecks NOT IN ('Y','N') OR @ExtendedLogicalChecks IS NULL OR (@ExtendedLogicalChecks = 'Y' AND NOT @Version >= 10) OR (@PhysicalOnly = 'Y' AND @ExtendedLogicalChecks = 'Y')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @ExtendedLogicalChecks is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @TabLock NOT IN ('Y','N') OR @TabLock IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @TabLock is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS(SELECT * FROM @SelectedFileGroups WHERE DatabaseName IS NULL OR FileGroupName IS NULL) OR (@FileGroups IS NOT NULL AND NOT EXISTS(SELECT * FROM @SelectedFileGroups)) OR (@FileGroups IS NOT NULL AND NOT EXISTS (SELECT * FROM @SelectedCheckCommands WHERE CheckCommand = 'CHECKFILEGROUP'))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @FileGroups is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS(SELECT * FROM @SelectedObjects WHERE DatabaseName IS NULL OR SchemaName IS NULL OR ObjectName IS NULL) OR (@Objects IS NOT NULL AND NOT EXISTS(SELECT * FROM @SelectedObjects)) OR (@Objects IS NOT NULL AND NOT EXISTS (SELECT * FROM @SelectedCheckCommands WHERE CheckCommand = 'CHECKTABLE'))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Objects is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @MaxDOP < 0 OR @MaxDOP > 64 OR (@MaxDOP > 1 AND SERVERPROPERTY('EngineEdition') NOT IN (3,5)) OR (@MaxDOP IS NOT NULL AND @Version < 12.050000)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @MaxDOP is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @AvailabilityGroupReplicas NOT IN('ALL','PRIMARY','SECONDARY') OR @AvailabilityGroupReplicas IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @AvailabilityGroupReplicas is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Updateability NOT IN('READ_ONLY','READ_WRITE','ALL') OR @Updateability IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Updateability is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LockTimeout < 0
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @LockTimeout is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LogToTable NOT IN('Y','N') OR @LogToTable IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @LogToTable is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Execute NOT IN('Y','N') OR @Execute IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Execute is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ErrorMessage = 'The documentation is available at https://ola.hallengren.com/sql-server-integrity-check.html.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @ReturnCode = @Error
    GOTO Logging
  END

  ----------------------------------------------------------------------------------------------------
  --// Check Availability Group cluster name                                                      //--
  ----------------------------------------------------------------------------------------------------

  IF @Version >= 11 AND SERVERPROPERTY('EngineEdition') <> 5
  BEGIN
    SELECT @Cluster = cluster_name
    FROM sys.dm_hadr_cluster
  END

  ----------------------------------------------------------------------------------------------------
  --// Execute commands                                                                           //--
  ----------------------------------------------------------------------------------------------------

  WHILE EXISTS (SELECT * FROM @tmpDatabases WHERE Selected = 1 AND Completed = 0)
  BEGIN

    SELECT TOP 1 @CurrentDBID = ID,
                 @CurrentDatabaseName = DatabaseName
    FROM @tmpDatabases
    WHERE Selected = 1
    AND Completed = 0
    ORDER BY ID ASC

    SET @CurrentDatabaseID = DB_ID(@CurrentDatabaseName)

    IF DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') = 'ONLINE' AND SERVERPROPERTY('EngineEdition') <> 5
    BEGIN
      IF EXISTS (SELECT * FROM sys.database_recovery_status WHERE database_id = @CurrentDatabaseID AND database_guid IS NOT NULL)
      BEGIN
        SET @CurrentIsDatabaseAccessible = 1
      END
      ELSE
      BEGIN
        SET @CurrentIsDatabaseAccessible = 0
      END
    END

    IF @Version >= 11 AND @Cluster IS NOT NULL
    BEGIN
      SELECT @CurrentAvailabilityGroup = availability_groups.name,
             @CurrentAvailabilityGroupRole = dm_hadr_availability_replica_states.role_desc
      FROM sys.databases databases
      INNER JOIN sys.availability_databases_cluster availability_databases_cluster ON databases.group_database_id = availability_databases_cluster.group_database_id
      INNER JOIN sys.availability_groups availability_groups ON availability_databases_cluster.group_id = availability_groups.group_id
      INNER JOIN sys.dm_hadr_availability_replica_states dm_hadr_availability_replica_states ON availability_groups.group_id = dm_hadr_availability_replica_states.group_id AND databases.replica_id = dm_hadr_availability_replica_states.replica_id
      WHERE databases.name = @CurrentDatabaseName
    END

    IF SERVERPROPERTY('EngineEdition') <> 5
    BEGIN
      SELECT @CurrentDatabaseMirroringRole = UPPER(mirroring_role_desc)
      FROM sys.database_mirroring
      WHERE database_id = @CurrentDatabaseID
    END

    SELECT @CurrentIsReadOnly = is_read_only
    FROM sys.databases
    WHERE name = @CurrentDatabaseName

    -- Set database message
    SET @DatabaseMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Database: ' + QUOTENAME(@CurrentDatabaseName) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Status: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') AS nvarchar) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Standby: ' + CASE WHEN DATABASEPROPERTYEX(@CurrentDatabaseName,'IsInStandBy') = 1 THEN 'Yes' ELSE 'No' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Updateability: ' + CASE WHEN @CurrentIsReadOnly = 1 THEN 'READ_ONLY' WHEN  @CurrentIsReadOnly = 0 THEN 'READ_WRITE' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'User access: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'UserAccess') AS nvarchar) + CHAR(13) + CHAR(10)
    IF @CurrentIsDatabaseAccessible IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Is accessible: ' + CASE WHEN @CurrentIsDatabaseAccessible = 1 THEN 'Yes' ELSE 'No' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Recovery model: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'Recovery') AS nvarchar) + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Availability group: ' + @CurrentAvailabilityGroup + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Availability group role: ' + @CurrentAvailabilityGroupRole + CHAR(13) + CHAR(10)
    IF @CurrentDatabaseMirroringRole IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Database mirroring role: ' + @CurrentDatabaseMirroringRole + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = REPLACE(@DatabaseMessage,'%','%%') + ' '
    RAISERROR(@DatabaseMessage,10,1) WITH NOWAIT

    IF DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') = 'ONLINE'
    AND (@CurrentIsDatabaseAccessible = 1 OR @CurrentIsDatabaseAccessible IS NULL)
    AND (@CurrentAvailabilityGroupRole = @AvailabilityGroupReplicas OR @AvailabilityGroupReplicas = 'ALL' OR @CurrentAvailabilityGroupRole IS NULL)
    AND NOT (@CurrentIsReadOnly = 1 AND @Updateability = 'READ_WRITE')
    AND NOT (@CurrentIsReadOnly = 0 AND @Updateability = 'READ_ONLY')
    BEGIN

      -- Check database
      IF EXISTS(SELECT * FROM @SelectedCheckCommands WHERE CheckCommand = 'CHECKDB')
      BEGIN
        SET @CurrentCommandType01 = 'DBCC_CHECKDB'

        SET @CurrentCommand01 = ''
        IF @LockTimeout IS NOT NULL SET @CurrentCommand01 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
        SET @CurrentCommand01 = @CurrentCommand01 + 'DBCC CHECKDB (' + QUOTENAME(@CurrentDatabaseName)
        IF @NoIndex = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ', NOINDEX'
        SET @CurrentCommand01 = @CurrentCommand01 + ') WITH NO_INFOMSGS, ALL_ERRORMSGS'
        IF @PhysicalOnly = 'N' SET @CurrentCommand01 = @CurrentCommand01 + ', DATA_PURITY'
        IF @PhysicalOnly = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ', PHYSICAL_ONLY'
        IF @ExtendedLogicalChecks = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ', EXTENDED_LOGICAL_CHECKS'
        IF @TabLock = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ', TABLOCK'
        IF @MaxDOP IS NOT NULL SET @CurrentCommand01 = @CurrentCommand01 + ', MAXDOP = ' + CAST(@MaxDOP AS nvarchar)

        EXECUTE @CurrentCommandOutput01 = [dbo].[CommandExecute] @Command = @CurrentCommand01, @CommandType = @CurrentCommandType01, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
        SET @Error = @@ERROR
        IF @Error <> 0 SET @CurrentCommandOutput01 = @Error
        IF @CurrentCommandOutput01 <> 0 SET @ReturnCode = @CurrentCommandOutput01
      END

      -- Check filegroups
      IF EXISTS(SELECT * FROM @SelectedCheckCommands WHERE CheckCommand = 'CHECKFILEGROUP')
      BEGIN
        SET @CurrentCommand02 = 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; SELECT data_space_id AS FileGroupID, name AS FileGroupName, 0 AS Selected, 0 AS Completed FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.filegroups filegroups WHERE [type] <> ''FX'' ORDER BY CASE WHEN filegroups.name = ''PRIMARY'' THEN 1 ELSE 0 END DESC, filegroups.name ASC'

        INSERT INTO @tmpFileGroups (FileGroupID, FileGroupName, Selected, Completed)
        EXECUTE sp_executesql @statement = @CurrentCommand02
        SET @Error = @@ERROR
        IF @Error <> 0 SET @ReturnCode = @Error

        IF @FileGroups IS NULL
        BEGIN
          UPDATE tmpFileGroups
          SET tmpFileGroups.Selected = 1
          FROM @tmpFileGroups tmpFileGroups
        END
        ELSE
        BEGIN
          UPDATE tmpFileGroups
          SET tmpFileGroups.Selected = SelectedFileGroups.Selected
          FROM @tmpFileGroups tmpFileGroups
          INNER JOIN @SelectedFileGroups SelectedFileGroups
          ON @CurrentDatabaseName LIKE REPLACE(SelectedFileGroups.DatabaseName,'_','[_]') AND tmpFileGroups.FileGroupName LIKE REPLACE(SelectedFileGroups.FileGroupName,'_','[_]')
          WHERE SelectedFileGroups.Selected = 1

          UPDATE tmpFileGroups
          SET tmpFileGroups.Selected = SelectedFileGroups.Selected
          FROM @tmpFileGroups tmpFileGroups
          INNER JOIN @SelectedFileGroups SelectedFileGroups
          ON @CurrentDatabaseName LIKE REPLACE(SelectedFileGroups.DatabaseName,'_','[_]') AND tmpFileGroups.FileGroupName LIKE REPLACE(SelectedFileGroups.FileGroupName,'_','[_]')
          WHERE SelectedFileGroups.Selected = 0
        END

        WHILE EXISTS (SELECT * FROM @tmpFileGroups WHERE Selected = 1 AND Completed = 0)
        BEGIN
          SELECT TOP 1 @CurrentFGID = ID,
                       @CurrentFileGroupID = FileGroupID,
                       @CurrentFileGroupName = FileGroupName
          FROM @tmpFileGroups
          WHERE Selected = 1
          AND Completed = 0
          ORDER BY ID ASC

          -- Does the filegroup exist?
          SET @CurrentCommand03 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand03 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand03 = @CurrentCommand03 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.filegroups filegroups WHERE [type] <> ''FX'' AND filegroups.data_space_id = @ParamFileGroupID AND filegroups.[name] = @ParamFileGroupName) BEGIN SET @ParamFileGroupExists = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand03, @params = N'@ParamFileGroupID int, @ParamFileGroupName sysname, @ParamFileGroupExists bit OUTPUT', @ParamFileGroupID = @CurrentFileGroupID, @ParamFileGroupName = @CurrentFileGroupName, @ParamFileGroupExists = @CurrentFileGroupExists OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentFileGroupExists IS NULL SET @CurrentFileGroupExists = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The file group ' + QUOTENAME(@CurrentFileGroupName) + ' in the database ' + QUOTENAME(@CurrentDatabaseName) + ' is locked. It could not be checked if the filegroup exists.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
          END

          IF @CurrentFileGroupExists = 1
          BEGIN
            SET @CurrentCommandType04 = 'DBCC_CHECKFILEGROUP'

            SET @CurrentCommand04 = ''
            IF @LockTimeout IS NOT NULL SET @CurrentCommand04 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
            SET @CurrentCommand04 = @CurrentCommand04 + 'USE ' + QUOTENAME(@CurrentDatabaseName) + '; DBCC CHECKFILEGROUP (' + QUOTENAME(@CurrentFileGroupName)
            IF @NoIndex = 'Y' SET @CurrentCommand04 = @CurrentCommand04 + ', NOINDEX'
            SET @CurrentCommand04 = @CurrentCommand04 + ') WITH NO_INFOMSGS, ALL_ERRORMSGS'
            IF @PhysicalOnly = 'Y' SET @CurrentCommand04 = @CurrentCommand04 + ', PHYSICAL_ONLY'
            IF @TabLock = 'Y' SET @CurrentCommand04 = @CurrentCommand04 + ', TABLOCK'
            IF @MaxDOP IS NOT NULL SET @CurrentCommand04 = @CurrentCommand04 + ', MAXDOP = ' + CAST(@MaxDOP AS nvarchar)

            EXECUTE @CurrentCommandOutput04 = [dbo].[CommandExecute] @Command = @CurrentCommand04, @CommandType = @CurrentCommandType04, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
            SET @Error = @@ERROR
            IF @Error <> 0 SET @CurrentCommandOutput04 = @Error
            IF @CurrentCommandOutput04 <> 0 SET @ReturnCode = @CurrentCommandOutput04
          END

          UPDATE @tmpFileGroups
          SET Completed = 1
          WHERE Selected = 1
          AND Completed = 0
          AND ID = @CurrentFGID

          SET @CurrentFGID = NULL
          SET @CurrentFileGroupID = NULL
          SET @CurrentFileGroupName = NULL
          SET @CurrentFileGroupExists = NULL

          SET @CurrentCommand03 = NULL
          SET @CurrentCommand04 = NULL

          SET @CurrentCommandOutput04 = NULL

          SET @CurrentCommandType04 = NULL
        END
      END

      -- Check disk space allocation structures
      IF EXISTS(SELECT * FROM @SelectedCheckCommands WHERE CheckCommand = 'CHECKALLOC')
      BEGIN
        SET @CurrentCommandType05 = 'DBCC_CHECKALLOC'

        SET @CurrentCommand05 = ''
        IF @LockTimeout IS NOT NULL SET @CurrentCommand05 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
        SET @CurrentCommand05 = @CurrentCommand05 + 'DBCC CHECKALLOC (' + QUOTENAME(@CurrentDatabaseName)
        SET @CurrentCommand05 = @CurrentCommand05 + ') WITH NO_INFOMSGS, ALL_ERRORMSGS'
        IF @TabLock = 'Y' SET @CurrentCommand05 = @CurrentCommand05 + ', TABLOCK'

        EXECUTE @CurrentCommandOutput05 = [dbo].[CommandExecute] @Command = @CurrentCommand05, @CommandType = @CurrentCommandType05, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
        SET @Error = @@ERROR
        IF @Error <> 0 SET @CurrentCommandOutput05 = @Error
        IF @CurrentCommandOutput05 <> 0 SET @ReturnCode = @CurrentCommandOutput05
      END

      -- Check objects
      IF EXISTS(SELECT * FROM @SelectedCheckCommands WHERE CheckCommand = 'CHECKTABLE')
      BEGIN
        SET @CurrentCommand06 = 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; SELECT schemas.[schema_id] AS SchemaID, schemas.[name] AS SchemaName, objects.[object_id] AS ObjectID, objects.[name] AS ObjectName, RTRIM(objects.[type]) AS ObjectType, 0 AS Selected, 0 AS Completed FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.objects objects INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.schemas schemas ON objects.schema_id = schemas.schema_id LEFT OUTER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.tables tables ON objects.object_id = tables.object_id WHERE objects.[type] IN(''U'',''V'') AND EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes WHERE indexes.object_id = objects.object_id)' + CASE WHEN @Version >= 12 THEN ' AND (tables.is_memory_optimized = 0 OR is_memory_optimized IS NULL)' ELSE '' END + ' ORDER BY schemas.name ASC, objects.name ASC'

        INSERT INTO @tmpObjects (SchemaID, SchemaName, ObjectID, ObjectName, ObjectType, Selected, Completed)
        EXECUTE sp_executesql @statement = @CurrentCommand06
        SET @Error = @@ERROR
        IF @Error <> 0 SET @ReturnCode = @Error

        IF @Objects IS NULL
        BEGIN
          UPDATE tmpObjects
          SET tmpObjects.Selected = 1
          FROM @tmpObjects tmpObjects
        END
        ELSE
        BEGIN
          UPDATE tmpObjects
          SET tmpObjects.Selected = SelectedObjects.Selected
          FROM @tmpObjects tmpObjects
          INNER JOIN @SelectedObjects SelectedObjects
          ON @CurrentDatabaseName LIKE REPLACE(SelectedObjects.DatabaseName,'_','[_]') AND tmpObjects.SchemaName LIKE REPLACE(SelectedObjects.SchemaName,'_','[_]') AND tmpObjects.ObjectName LIKE REPLACE(SelectedObjects.ObjectName,'_','[_]')
          WHERE SelectedObjects.Selected = 1

          UPDATE tmpObjects
          SET tmpObjects.Selected = SelectedObjects.Selected
          FROM @tmpObjects tmpObjects
          INNER JOIN @SelectedObjects SelectedObjects
          ON @CurrentDatabaseName LIKE REPLACE(SelectedObjects.DatabaseName,'_','[_]') AND tmpObjects.SchemaName LIKE REPLACE(SelectedObjects.SchemaName,'_','[_]') AND tmpObjects.ObjectName LIKE REPLACE(SelectedObjects.ObjectName,'_','[_]')
          WHERE SelectedObjects.Selected = 0
        END

        WHILE EXISTS (SELECT * FROM @tmpObjects WHERE Selected = 1 AND Completed = 0)
        BEGIN
          SELECT TOP 1 @CurrentOID = ID,
                       @CurrentSchemaID = SchemaID,
                       @CurrentSchemaName = SchemaName,
                       @CurrentObjectID = ObjectID,
                       @CurrentObjectName = ObjectName,
                       @CurrentObjectType = ObjectType
          FROM @tmpObjects
          WHERE Selected = 1
          AND Completed = 0
          ORDER BY ID ASC

          -- Does the object exist?
          SET @CurrentCommand07 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand07 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand07 = @CurrentCommand07 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.objects objects INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.schemas schemas ON objects.schema_id = schemas.schema_id LEFT OUTER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.tables tables ON objects.object_id = tables.object_id WHERE objects.[type] IN(''U'',''V'') AND EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes WHERE indexes.object_id = objects.object_id)' + CASE WHEN @Version >= 12 THEN ' AND (tables.is_memory_optimized = 0 OR is_memory_optimized IS NULL)' ELSE '' END + ' AND schemas.[schema_id] = @ParamSchemaID AND schemas.[name] = @ParamSchemaName AND objects.[object_id] = @ParamObjectID AND objects.[name] = @ParamObjectName AND objects.[type] = @ParamObjectType) BEGIN SET @ParamObjectExists = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand07, @params = N'@ParamSchemaID int, @ParamSchemaName sysname, @ParamObjectID int, @ParamObjectName sysname, @ParamObjectType sysname, @ParamObjectExists bit OUTPUT', @ParamSchemaID = @CurrentSchemaID, @ParamSchemaName = @CurrentSchemaName, @ParamObjectID = @CurrentObjectID, @ParamObjectName = @CurrentObjectName, @ParamObjectType = @CurrentObjectType, @ParamObjectExists = @CurrentObjectExists OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentObjectExists IS NULL SET @CurrentObjectExists = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if the object exists.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
          END

          IF @CurrentObjectExists = 1
          BEGIN
            SET @CurrentCommandType08 = 'DBCC_CHECKTABLE'

            SET @CurrentCommand08 = ''
            IF @LockTimeout IS NOT NULL SET @CurrentCommand08 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
            SET @CurrentCommand08 = @CurrentCommand08 + 'USE ' + QUOTENAME(@CurrentDatabaseName) + '; DBCC CHECKTABLE (''' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ''''
            IF @NoIndex = 'Y' SET @CurrentCommand08 = @CurrentCommand08 + ', NOINDEX'
            SET @CurrentCommand08 = @CurrentCommand08 + ') WITH NO_INFOMSGS, ALL_ERRORMSGS'
            IF @PhysicalOnly = 'N' SET @CurrentCommand08 = @CurrentCommand08 + ', DATA_PURITY'
            IF @PhysicalOnly = 'Y' SET @CurrentCommand08 = @CurrentCommand08 + ', PHYSICAL_ONLY'
            IF @ExtendedLogicalChecks = 'Y' SET @CurrentCommand08 = @CurrentCommand08 + ', EXTENDED_LOGICAL_CHECKS'
            IF @TabLock = 'Y' SET @CurrentCommand08 = @CurrentCommand08 + ', TABLOCK'
            IF @MaxDOP IS NOT NULL SET @CurrentCommand08 = @CurrentCommand08 + ', MAXDOP = ' + CAST(@MaxDOP AS nvarchar)

            EXECUTE @CurrentCommandOutput08 = [dbo].[CommandExecute] @Command = @CurrentCommand08, @CommandType = @CurrentCommandType08, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @SchemaName = @CurrentSchemaName, @ObjectName = @CurrentObjectName, @ObjectType = @CurrentObjectType, @LogToTable = @LogToTable, @Execute = @Execute
            SET @Error = @@ERROR
            IF @Error <> 0 SET @CurrentCommandOutput08 = @Error
            IF @CurrentCommandOutput08 <> 0 SET @ReturnCode = @CurrentCommandOutput08
          END

          UPDATE @tmpObjects
          SET Completed = 1
          WHERE Selected = 1
          AND Completed = 0
          AND ID = @CurrentOID

          SET @CurrentOID = NULL
          SET @CurrentSchemaID = NULL
          SET @CurrentSchemaName = NULL
          SET @CurrentObjectID = NULL
          SET @CurrentObjectName = NULL
          SET @CurrentObjectType = NULL
          SET @CurrentObjectExists = NULL

          SET @CurrentCommand07 = NULL
          SET @CurrentCommand08 = NULL

          SET @CurrentCommandOutput08 = NULL

          SET @CurrentCommandType08 = NULL
        END
      END

      -- Check catalog
      IF EXISTS(SELECT * FROM @SelectedCheckCommands WHERE CheckCommand = 'CHECKCATALOG')
      BEGIN
        SET @CurrentCommandType09 = 'DBCC_CHECKCATALOG'

        SET @CurrentCommand09 = ''
        IF @LockTimeout IS NOT NULL SET @CurrentCommand09 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
        SET @CurrentCommand09 = @CurrentCommand09 + 'DBCC CHECKCATALOG (' + QUOTENAME(@CurrentDatabaseName)
        SET @CurrentCommand09 = @CurrentCommand09 + ') WITH NO_INFOMSGS'

        EXECUTE @CurrentCommandOutput09 = [dbo].[CommandExecute] @Command = @CurrentCommand09, @CommandType = @CurrentCommandType09, @Mode = 1, @DatabaseName = @CurrentDatabaseName, @LogToTable = @LogToTable, @Execute = @Execute
        SET @Error = @@ERROR
        IF @Error <> 0 SET @CurrentCommandOutput09 = @Error
        IF @CurrentCommandOutput09 <> 0 SET @ReturnCode = @CurrentCommandOutput09
      END

    END

    -- Update that the database is completed
    UPDATE @tmpDatabases
    SET Completed = 1
    WHERE Selected = 1
    AND Completed = 0
    AND ID = @CurrentDBID

    -- Clear variables
    SET @CurrentDBID = NULL
    SET @CurrentDatabaseID = NULL
    SET @CurrentDatabaseName = NULL
    SET @CurrentIsDatabaseAccessible = NULL
    SET @CurrentAvailabilityGroup = NULL
    SET @CurrentAvailabilityGroupRole = NULL
    SET @CurrentDatabaseMirroringRole = NULL
    SET @CurrentIsReadOnly = NULL

    SET @CurrentCommand01 = NULL
    SET @CurrentCommand02 = NULL
    SET @CurrentCommand05 = NULL
    SET @CurrentCommand06 = NULL
    SET @CurrentCommand09 = NULL

    SET @CurrentCommandOutput01 = NULL
    SET @CurrentCommandOutput05 = NULL
    SET @CurrentCommandOutput09 = NULL

    SET @CurrentCommandType01 = NULL
    SET @CurrentCommandType05 = NULL
    SET @CurrentCommandType09 = NULL

    DELETE FROM @tmpFileGroups
    DELETE FROM @tmpObjects

  END

  ----------------------------------------------------------------------------------------------------
  --// Log completing information                                                                 //--
  ----------------------------------------------------------------------------------------------------

  Logging:
  SET @EndMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120)
  SET @EndMessage = REPLACE(@EndMessage,'%','%%')
  RAISERROR(@EndMessage,10,1) WITH NOWAIT

  IF @ReturnCode <> 0
  BEGIN
    RETURN @ReturnCode
  END

  ----------------------------------------------------------------------------------------------------

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@Databases]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@CheckCommands]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@PhysicalOnly]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@NoIndex]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@ExtendedLogicalChecks]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@TabLock]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@FileGroups]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@Objects]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@MaxDOP]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@AvailabilityGroups]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@AvailabilityGroupReplicas]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@Updateability]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@LockTimeout]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@LogToTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@Execute]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases1].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases2].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Snapshot]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Completed]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Snapshot]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups1].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups2].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups3].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups4].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups4].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabasesAvailabilityGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabasesAvailabilityGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups1].[FileGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups2].[FileGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups3].[FileGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[FileGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups4].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups4].[FileGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups4].[Selected]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects1].[ObjectItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects2].[ObjectItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects3].[ObjectItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[Selected]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE5].[CheckCommands].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedCheckCommands].[CheckCommand]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[CTE5].[CheckCommands].[CheckCommand]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedCheckCommands].[CheckCommand]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[FileGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[ObjectName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[ID]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Command]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@CommandType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@LogToTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Execute]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[FileGroupID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[FileGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[Completed]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[FileGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[FileGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[ID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[SchemaID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ObjectID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ObjectType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ObjectType]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[DatabaseType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[AvailabilityGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Snapshot]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Selected]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabases].[Completed]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpAvailabilityGroups].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabasesAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabasesAvailabilityGroups].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[FileGroupID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[FileGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[Selected]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpFileGroups].[Completed]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[SchemaID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[SchemaName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ObjectID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ObjectName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[ObjectType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[Selected]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@tmpObjects].[Completed]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[DatabaseType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[AvailabilityGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedDatabases].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedAvailabilityGroups].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[FileGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedFileGroups].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[SchemaName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[ObjectName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedObjects].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedCheckCommands]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DatabaseIntegrityCheck].[@SelectedCheckCommands].[CheckCommand]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases1].[DatabaseItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases2].[DatabaseItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[DatabaseItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[DatabaseType]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[AvailabilityGroup]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[DatabaseName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[DatabaseType]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[DatabaseType]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[AvailabilityGroup]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[AvailabilityGroup]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE1].[Databases3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups1].[AvailabilityGroupItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups2].[AvailabilityGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups3].[AvailabilityGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups4].[AvailabilityGroupName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE2].[AvailabilityGroups3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups1].[FileGroupItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups2].[FileGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups3].[FileGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups4].[DatabaseName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups4].[FileGroupName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE3].[FileGroups3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects1].[ObjectItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects2].[ObjectItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects3].[ObjectItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[DatabaseName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[SchemaName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[ObjectName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[DatabaseIntegrityCheck].[CTE4].[Objects3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DatabaseIntegrityCheck].[CTE5].[CheckCommands]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE5].[CheckCommands].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE5].[CheckCommands].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[DatabaseIntegrityCheck].[CTE5].[CheckCommands].[CheckCommand]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@Databases]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@CheckCommands]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['CHECKDB']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@PhysicalOnly]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@NoIndex]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@ExtendedLogicalChecks]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@TabLock]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@FileGroups]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@Objects]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@MaxDOP]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@AvailabilityGroups]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@AvailabilityGroupReplicas]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['ALL']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@Updateability]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['ALL']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@LockTimeout]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@LogToTable]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DatabaseIntegrityCheck].[@Execute]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Y']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="57889" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[DatabaseIntegrityCheck]&#xD;&#xA;&#xD;&#xA;@Databases nvarchar(max) = NULL,&#xD;&#xA;@CheckCommands nvarchar(max) = 'CHECKDB',&#xD;&#xA;@PhysicalOnly nvarchar(max) = 'N',&#xD;&#xA;@NoIndex nvarchar(max) = 'N',&#xD;&#xA;@ExtendedLogicalChecks nvarchar(max) = 'N',&#xD;&#xA;@TabLock nvarchar(max) = 'N',&#xD;&#xA;@FileGroups nvarchar(max) = NULL,&#xD;&#xA;@Objects nvarchar(max) = NULL,&#xD;&#xA;@MaxDOP int = NULL,&#xD;&#xA;@AvailabilityGroups nvarchar(max) = NULL,&#xD;&#xA;@AvailabilityGroupReplicas nvarchar(max) = 'ALL',&#xD;&#xA;@Updateability nvarchar(max) = 'ALL',&#xD;&#xA;@LockTimeout int = NULL,&#xD;&#xA;@LogToTable nvarchar(max) = 'N',&#xD;&#xA;@Execute nvarchar(max) = 'Y'&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[DBBruteForce]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	--build up helper table for types used later to limit rows we will query
	DECLARE @typelist TABLE(rowid INT IDENTITY, TYPE VARCHAR(255), typename varchar(255) PRIMARY KEY(type,typename));
	--feel free to add more in here if you need currently this only supports number, string and date
	INSERT INTO @typelist(type,typename)
	VALUES 
	('number','decimal'),
	('number','numeric'),
	('string','char'),
	('number','smallint'),
	('string','varchar'),
	('date','datetime'),
	('string','nvarchar'),
	('string','text'),
	('string','ntext'),
	('number','int'),
	('number','bigint'),
	('date','smalldatetime'),
	('number','float'),
	('number','money');
	--now remove the temp tbles if they already exists

	IF OBJECT_ID('tempdb..#TempCols') IS NOT NULL
	DROP TABLE #TempCols;
	
	IF OBJECT_ID('tempdb..#TempBruteForce') IS NOT NULL
	DROP TABLE #TempBruteForce;
	
	--create the temp table needed for the search
	CREATE TABLE #TempCols(id INT IDENTITY PRIMARY KEY, tbl VARCHAR(255) NOT null, col VARCHAR(255) NOT null, TYPE varchar(255));
	CREATE TABLE #TempBruteForce(id INT IDENTITY PRIMARY KEY, tbl VARCHAR(255) NOT null, tblqry Nvarchar(max), cnt INT DEFAULT (0),processed BIT DEFAULT(0),sqltxt Nvarchar(max),errortxt NVARCHAR(max));
	
	--there shouldnt be a huge need to a index here so im skipping that
	
	--now we have 2 seperate ways to deal with this, one for strings and one for the rest
	IF(@type = 'string')
	BEGIN
		INSERT INTO #TempCols(tbl,col,type)	
		SELECT DISTINCT '[' + ss.name + '].[' + t.name + ']' AS tblname, c.name AS colname, st.name AS coltype
		FROM sys.tables t
		INNER JOIN sys.columns c ON c.object_id = t.object_id
		INNER JOIN sys.types st ON st.system_type_id = c.system_type_id AND st.name != 'sysname'
		INNER JOIN sys.schemas ss ON ss.schema_id = t.schema_id 
		WHERE EXISTS (SELECT 1 FROM @typelist WHERE type = @type AND typename = st.name)
		AND (st.name IN ('ntext','text') OR c.max_length >= LEN(@searchvalue))
		
		--now lets combine these to lessen the load on the server dependent on what was requested by grouping these by table
		--then combining all the columns into one where clause, this will reduce the number of searches to the number of tables with qualifying columns in them
		--changing it a little to work with all the differnt options available
		IF(@fuzzy = 1 AND @fuzzyoperator = 'beginswith')
		BEGIN
			--begins with search
			INSERT INTO #TempBruteForce(tbl,tblqry,cnt,processed,sqltxt,errortxt)
			SELECT t.tbl,'select count(1) from ' + tbl + ' where 1 = 1 and ('+REPLACE(x.csvvalue,'|',' or ')+')',0,0,NULL,null
			FROM #TempCols t
			 OUTER APPLY ( SELECT    STUFF(( SELECT  '|' + ('[' + tt.col + '] LIKE '''+@searchvalue+'%''')
													FROM    #TempCols tt
													WHERE   tt.tbl = t.tbl
												  FOR
													XML PATH(''), TYPE ).value('.[1]', 'nvarchar(max)'
												  ), 1, 1, '') AS csvvalue
								) x
			GROUP BY tbl,x.csvvalue
		END
		ELSE IF(@fuzzy = 1 AND @fuzzyoperator = 'endswith')
		BEGIN
			--ends with search
			INSERT INTO #TempBruteForce(tbl,tblqry,cnt,processed,sqltxt,errortxt)
			SELECT t.tbl,'select count(1) from ' + tbl + ' where 1 = 1 and ('+REPLACE(x.csvvalue,'|',' or ')+')',0,0,NULL,null
			FROM #TempCols t
			 OUTER APPLY ( SELECT    STUFF(( SELECT  '|' + ('[' + tt.col + '] LIKE ''%'+@searchvalue+'''')
													FROM    #TempCols tt
													WHERE   tt.tbl = t.tbl
												  FOR
													XML PATH(''), TYPE ).value('.[1]', 'nvarchar(max)'
												  ), 1, 1, '') AS csvvalue
								) x
			GROUP BY tbl,x.csvvalue
		END
		ELSE IF(@fuzzy = 0)
		BEGIN
			--string exact match, using like to work around text and ntext columns but with no wildcards
			INSERT INTO #TempBruteForce(tbl,tblqry,cnt,processed,sqltxt,errortxt)
			SELECT t.tbl,'select count(1) from ' + tbl + ' where 1 = 1 and ('+REPLACE(x.csvvalue,'|',' or ')+')',0,0,NULL,null
			FROM #TempCols t
			 OUTER APPLY ( SELECT    STUFF(( SELECT  '|' + ('[' + tt.col + '] LIKE '''+@searchvalue+'''')
													FROM    #TempCols tt
													WHERE   tt.tbl = t.tbl
												  FOR
													XML PATH(''), TYPE ).value('.[1]', 'nvarchar(max)'
												  ), 1, 1, '') AS csvvalue
								) x
			GROUP BY tbl,x.csvvalue
		END
		ELSE
		BEGIN
			--default to contains
			INSERT INTO #TempBruteForce(tbl,tblqry,cnt,processed,sqltxt,errortxt)
			SELECT t.tbl,'select count(1) from ' + tbl + ' where 1 = 1 and ('+REPLACE(x.csvvalue,'|',' or ')+')',0,0,NULL,null
			FROM #TempCols t
			 OUTER APPLY ( SELECT    STUFF(( SELECT  '|' + ('charindex('''+@searchvalue+''',[' + tt.col + '], 1) > 0')
													FROM    #TempCols tt
													WHERE   tt.tbl = t.tbl
												  FOR
													XML PATH(''), TYPE ).value('.[1]', 'nvarchar(max)'
												  ), 1, 1, '') AS csvvalue
								) x
			GROUP BY tbl,x.csvvalue
		end
		
	END 
	ELSE IF(@type = 'number')
	BEGIN
		--build up the columns for number search
		INSERT INTO #TempCols(tbl,col,type)	
		SELECT DISTINCT '[' + ss.name + '].[' + t.name + ']' AS tblname, c.name AS colname, st.name AS coltype
		FROM sys.tables t
		INNER JOIN sys.columns c ON c.object_id = t.object_id
		INNER JOIN sys.types st ON st.system_type_id = c.system_type_id AND st.name != 'sysname'
		INNER JOIN sys.schemas ss ON ss.schema_id = t.schema_id 
		WHERE EXISTS (SELECT 1 FROM @typelist WHERE type = @type AND typename = st.name)
		
		--build up query texts
		INSERT INTO #TempBruteForce(tbl,tblqry,cnt,processed,sqltxt,errortxt)	
		SELECT t.tbl,'select count(1) from ' + tbl + ' where 1 = 1 and ('+REPLACE(x.csvvalue,'|',' or ')+')',0,0,NULL,null
			FROM #TempCols t
			 OUTER APPLY ( SELECT    STUFF(( SELECT  '|' + ('[' + tt.col + '] = '+@searchvalue+'')
													FROM    #TempCols tt
													WHERE   tt.tbl = t.tbl
												  FOR
													XML PATH(''), TYPE ).value('.[1]', 'nvarchar(max)'
												  ), 1, 1, '') AS csvvalue
								) x
			GROUP BY tbl,x.csvvalue
	END 
	ELSE IF(@type = 'date')
	BEGIN
		--build up TABLE AND col list OF datetime columns
		INSERT INTO #TempCols(tbl,col,type)	
		SELECT DISTINCT '[' + ss.name + '].[' + t.name + ']' AS tblname, c.name AS colname, st.name AS coltype
		FROM sys.tables t
		INNER JOIN sys.columns c ON c.object_id = t.object_id
		INNER JOIN sys.types st ON st.system_type_id = c.system_type_id AND st.name != 'sysname'
		INNER JOIN sys.schemas ss ON ss.schema_id = t.schema_id 
		WHERE EXISTS (SELECT 1 FROM @typelist WHERE type = @type AND typename = st.name)
		--in this case we cast datetimes as daes to do a simple comparison, mainly to avoid a 2 millisec difference causing a non match.  
		--Its better to error on the side of more rows idenified then less.
		INSERT INTO #TempBruteForce(tbl,tblqry,cnt,processed,sqltxt,errortxt)	
		SELECT t.tbl,'select count(1) from ' + tbl + ' where 1 = 1 and ('+REPLACE(x.csvvalue,'|',' or ')+')',0,0,NULL,null
			FROM #TempCols t
			 OUTER APPLY ( SELECT    STUFF(( SELECT  '|' + ('cast([' + tt.col + '] as date) = cast('''+@searchvalue+''' as date)')
													FROM    #TempCols tt
													WHERE   tt.tbl = t.tbl
												  FOR
													XML PATH(''), TYPE ).value('.[1]', 'nvarchar(max)'
												  ), 1, 1, '') AS csvvalue
								) x
			GROUP BY tbl,x.csvvalue
	END 
	ELSE
	BEGIN
		--if the type cant be determined just error the process out
		RAISERROR ('Unknown type encountered! string, number, and date are the only accepted types', 0, 20) WITH NOWAIT;
	END 
	
	--declarations
	DECLARE @rowcnt INT; 
	DECLARE @operator VARCHAR(200);
	DECLARE @where varchar(200);
	DECLARE @sqltxt NVARCHAR(max);
	DECLARE @SQL NVARCHAR(max);
	DECLARE @SQL_cnt NVARCHAR(max);
	DECLARE @ParmDefinition nVARCHAR(500);
	DECLARE @I  INT;
	DECLARE @id INT;
	DECLARE @tbl varchar(255);
	DECLARE @col VARCHAR(255);
	DECLARE @fldtype VARCHAR(255); 
	DECLARE @counter INT;
	
	DECLARE dbnames CURSOR LOCAL FORWARD_ONLY FAST_FORWARD FOR 
	SELECT id,tbl,tblqry FROM #TempBruteForce
	
	OPEN dbnames
	FETCH NEXT FROM dbnames INTO @id,@tbl,@sqltxt
	
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @SQL_cnt = 'SELECT @IOUT = ('+@sqltxt+');';
		SELECT @SQL =  @sqltxt;
		SET @ParmDefinition = N'@IOUT INT OUTPUT';
		
		BEGIN TRY
			EXEC sp_executesql 
			@SQL_cnt, 
			@ParmDefinition,
			@IOUT=@I OUTPUT;
			
			--get count results and update the temptable, mark as processed
			UPDATE #TempBruteForce SET cnt = @I, sqltxt = @sql, processed = 1 WHERE id = @id;
			
			--if @i is greater than 0 than lets print the query to the messages, allows a preview of data found before it finishes, 
			--it can take an hour on large databases with large tables and lots of rows.  so sometimes i dont like to wait.
			IF(@I > 0)
			BEGIN
				RAISERROR (@SQL, 0, 1) WITH NOWAIT;
			END
			ELSE
			BEGIN
				--i like to at least print the table out for ones nothing was found in, mainly to tell where its at in the process
				DECLARE @temptxt VARCHAR(255);
				SET @temptxt = @tbl + ': [no data found]'
				RAISERROR (@temptxt, 0, 1) WITH NOWAIT;
			end
			
		END TRY
		BEGIN CATCH
			--in this case i am interested in what errors so lets just record that one back in the temp table as an error
			PRINT('Error occurred in table: '+@tbl+'');
			UPDATE t SET processed = 1,errortxt = @sqltxt
			FROM #TempBruteForce t
			where t.id = @id;
		END CATCH
	
	
		FETCH NEXT FROM dbnames INTO @id,@tbl,@sqltxt
	END
	
	CLOSE dbnames
	DEALLOCATE dbnames
	
	SELECT 'Search Results';
	SELECT * FROM #TempBruteForce WHERE cnt > 0 ORDER BY cnt DESC;
	SELECT 'Errors Encountered';
	SELECT * FROM #TempBruteForce WHERE LEN(errortxt) > 0;

	SET NOCOUNT OFF;
	
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@typelist].[TYPE]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@typelist].[typename]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols].[tbl]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols].[col]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols].[TYPE]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@typelist].[TYPE]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@typelist].[typename]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@searchvalue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@fuzzy]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[@fuzzyoperator]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[tbl]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[tblqry]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[cnt]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[processed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[sqltxt]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[errortxt]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols].[col]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols].[tbl]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols].[tbl]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempCols].[tbl]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[id]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[DBBruteForce].[#TempBruteForce].[id]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DBBruteForce].[@typelist]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[@typelist].[rowid]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[@typelist].[TYPE]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[@typelist].[typename]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DBBruteForce].[#TempCols]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempCols].[id]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempCols].[tbl]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempCols].[col]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempCols].[TYPE]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[DBBruteForce].[#TempBruteForce]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempBruteForce].[id]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempBruteForce].[tbl]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempBruteForce].[tblqry]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempBruteForce].[cnt]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempBruteForce].[processed]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempBruteForce].[sqltxt]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[DBBruteForce].[#TempBruteForce].[errortxt]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DBBruteForce].[@searchvalue]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DBBruteForce].[@type]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="200" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DBBruteForce].[@fuzzy]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DBBruteForce].[@fuzzyoperator]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="200" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="245" />
				<Property Name="Length" Value="10202" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;John Imel&#xD;&#xA;-- Create date: 2016/05/02&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description:&#x9;http://www.sqlservercentral.com/scripts/bruteforce/140542/&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[DBBruteForce]&#xD;&#xA;&#x9;@searchvalue varchar(4000),&#xD;&#xA;&#x9;@type varchar(200),&#xD;&#xA;&#x9;@fuzzy BIT,&#xD;&#xA;&#x9;@fuzzyoperator VARCHAR(200)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[DirectoryCreate]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="DirectoryCreate" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[FileSystemHelper]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DirectoryCreate].[@path]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[DirectoryDelete]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="DirectoryDelete" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[FileSystemHelper]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DirectoryDelete].[@path]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[DirectoryDeleteContents]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="DirectoryDeleteContents" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[FileSystemHelper]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DirectoryDeleteContents].[@path]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DirectoryDeleteContents].[@daysToKeep]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DirectoryDeleteContents].[@fileExtension]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlMultiStatementTableValuedFunction" Name="[dbo].[DirectoryList]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[DirectoryList].[Name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[DirectoryList].[Directory]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[DirectoryList].[Size]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[DirectoryList].[DateCreated]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[DirectoryList].[DateModified]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[DirectoryList].[Extension]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="DataAccess" Value="0" />
						<Property Name="FillRowMethodName" Value="FillRowDirectoryList" />
						<Property Name="MethodName" Value="DirectoryList" />
						<Property Name="ClassName" Value="UserDefinedFunctions" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[FileSystemHelper]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DirectoryList].[@path]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[DirectoryList].[@filter]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[DTSPackages]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[DTSPackages].[x]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlXmlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[xml]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[FileCopy]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="FileCopy" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[FileSystemHelper]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[FileCopy].[@sExistingFileNamePath]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[FileCopy].[@sNewFileNamePath]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[FileCopy].[@bOverwrite]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[FileDelete]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="FileDelete" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[FileSystemHelper]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[FileDelete].[@sFileNamePath]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[FileRead]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="FileRead" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[FileSystemHelper]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[FileRead].[@sFileNamePath]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[FileRead].[@output]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[dbo].[GetNums]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[GetNums].[@n]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[n]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNums].[CTE1].[L0]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[CTE1].[L0].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNums].[CTE1].[L1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[CTE1].[L1].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNums].[CTE1].[L2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[CTE1].[L2].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNums].[CTE1].[L3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[CTE1].[L3].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNums].[CTE1].[L4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[CTE1].[L4].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNums].[CTE1].[L5]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[CTE1].[L5].[c]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNums].[CTE1].[Nums]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[GetNums].[CTE1].[Nums].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
  WITH
  L0   AS(SELECT 1 AS c UNION ALL SELECT 1),
  L1   AS(SELECT 1 AS c FROM L0 AS A CROSS JOIN L0 AS B),
  L2   AS(SELECT 1 AS c FROM L1 AS A CROSS JOIN L1 AS B),
  L3   AS(SELECT 1 AS c FROM L2 AS A CROSS JOIN L2 AS B),
  L4   AS(SELECT 1 AS c FROM L3 AS A CROSS JOIN L3 AS B),
  L5   AS(SELECT 1 AS c FROM L4 AS A CROSS JOIN L4 AS B),
  Nums AS(SELECT ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS n FROM L5)
  SELECT n FROM Nums WHERE n <= @n]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="527" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION dbo.GetNums(@n AS BIGINT) RETURNS TABLE&#xD;&#xA;AS&#xD;&#xA;RETURN" />
							<Property Name="FooterContents" Value=";" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[GetNums].[@n]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[IndexOptimize]">
			<Property Name="BodyScript">
				<Value><![CDATA[

BEGIN

  ----------------------------------------------------------------------------------------------------
  --// Source: https://ola.hallengren.com                                                          //--
  ----------------------------------------------------------------------------------------------------

  SET NOCOUNT ON

  SET ARITHABORT ON

  SET NUMERIC_ROUNDABORT OFF

  DECLARE @StartMessage nvarchar(max)
  DECLARE @EndMessage nvarchar(max)
  DECLARE @DatabaseMessage nvarchar(max)
  DECLARE @ErrorMessage nvarchar(max)

  DECLARE @Version numeric(18,10)
  DECLARE @AmazonRDS bit

  DECLARE @Cluster nvarchar(max)

  DECLARE @StartTime datetime

  DECLARE @CurrentDBID int
  DECLARE @CurrentDatabaseID int
  DECLARE @CurrentDatabaseName nvarchar(max)
  DECLARE @CurrentIsDatabaseAccessible bit
  DECLARE @CurrentAvailabilityGroup nvarchar(max)
  DECLARE @CurrentAvailabilityGroupRole nvarchar(max)
  DECLARE @CurrentDatabaseMirroringRole nvarchar(max)
  DECLARE @CurrentIsReadOnly bit

  DECLARE @CurrentCommand01 nvarchar(max)
  DECLARE @CurrentCommand02 nvarchar(max)
  DECLARE @CurrentCommand03 nvarchar(max)
  DECLARE @CurrentCommand04 nvarchar(max)
  DECLARE @CurrentCommand05 nvarchar(max)
  DECLARE @CurrentCommand06 nvarchar(max)
  DECLARE @CurrentCommand07 nvarchar(max)
  DECLARE @CurrentCommand08 nvarchar(max)
  DECLARE @CurrentCommand09 nvarchar(max)
  DECLARE @CurrentCommand10 nvarchar(max)
  DECLARE @CurrentCommand11 nvarchar(max)
  DECLARE @CurrentCommand12 nvarchar(max)
  DECLARE @CurrentCommand13 nvarchar(max)
  DECLARE @CurrentCommand14 nvarchar(max)

  DECLARE @CurrentCommandOutput13 int
  DECLARE @CurrentCommandOutput14 int

  DECLARE @CurrentCommandType13 nvarchar(max)
  DECLARE @CurrentCommandType14 nvarchar(max)

  DECLARE @CurrentIxID int
  DECLARE @CurrentSchemaID int
  DECLARE @CurrentSchemaName nvarchar(max)
  DECLARE @CurrentObjectID int
  DECLARE @CurrentObjectName nvarchar(max)
  DECLARE @CurrentObjectType nvarchar(max)
  DECLARE @CurrentIsMemoryOptimized bit
  DECLARE @CurrentIndexID int
  DECLARE @CurrentIndexName nvarchar(max)
  DECLARE @CurrentIndexType int
  DECLARE @CurrentStatisticsID int
  DECLARE @CurrentStatisticsName nvarchar(max)
  DECLARE @CurrentPartitionID bigint
  DECLARE @CurrentPartitionNumber int
  DECLARE @CurrentPartitionCount int
  DECLARE @CurrentIsPartition bit
  DECLARE @CurrentIndexExists bit
  DECLARE @CurrentStatisticsExists bit
  DECLARE @CurrentIsImageText bit
  DECLARE @CurrentIsNewLOB bit
  DECLARE @CurrentIsFileStream bit
  DECLARE @CurrentIsColumnStore bit
  DECLARE @CurrentAllowPageLocks bit
  DECLARE @CurrentNoRecompute bit
  DECLARE @CurrentStatisticsModified bit
  DECLARE @CurrentOnReadOnlyFileGroup bit
  DECLARE @CurrentFragmentationLevel float
  DECLARE @CurrentPageCount bigint
  DECLARE @CurrentFragmentationGroup nvarchar(max)
  DECLARE @CurrentAction nvarchar(max)
  DECLARE @CurrentMaxDOP int
  DECLARE @CurrentUpdateStatistics nvarchar(max)
  DECLARE @CurrentStatisticsSample int
  DECLARE @CurrentStatisticsResample nvarchar(max)
  DECLARE @CurrentComment nvarchar(max)
  DECLARE @CurrentExtendedInfo xml
  DECLARE @CurrentDelay datetime

  DECLARE @tmpDatabases TABLE (ID int IDENTITY,
                               DatabaseName nvarchar(max),
                               DatabaseType nvarchar(max),
                               AvailabilityGroup bit,
                               Selected bit,
                               Completed bit,
                               PRIMARY KEY(Selected, Completed, ID))

  DECLARE @tmpAvailabilityGroups TABLE (ID int IDENTITY PRIMARY KEY,
                                        AvailabilityGroupName nvarchar(max),
                                        Selected bit)

  DECLARE @tmpDatabasesAvailabilityGroups TABLE (DatabaseName nvarchar(max), AvailabilityGroupName nvarchar(max))

  DECLARE @tmpIndexesStatistics TABLE (ID int IDENTITY,
                                       SchemaID int,
                                       SchemaName nvarchar(max),
                                       ObjectID int,
                                       ObjectName nvarchar(max),
                                       ObjectType nvarchar(max),
                                       IsMemoryOptimized bit,
                                       IndexID int,
                                       IndexName nvarchar(max),
                                       IndexType int,
                                       StatisticsID int,
                                       StatisticsName nvarchar(max),
                                       PartitionID bigint,
                                       PartitionNumber int,
                                       PartitionCount int,
                                       Selected bit,
                                       Completed bit,
                                       PRIMARY KEY(Selected, Completed, ID))

  DECLARE @SelectedDatabases TABLE (DatabaseName nvarchar(max),
                                    DatabaseType nvarchar(max),
                                    AvailabilityGroup nvarchar(max),
                                    Selected bit)

  DECLARE @SelectedAvailabilityGroups TABLE (AvailabilityGroupName nvarchar(max),
                                             Selected bit)

  DECLARE @SelectedIndexes TABLE (DatabaseName nvarchar(max),
                                  SchemaName nvarchar(max),
                                  ObjectName nvarchar(max),
                                  IndexName nvarchar(max),
                                  Selected bit)

  DECLARE @Actions TABLE ([Action] nvarchar(max))

  INSERT INTO @Actions([Action]) VALUES('INDEX_REBUILD_ONLINE')
  INSERT INTO @Actions([Action]) VALUES('INDEX_REBUILD_OFFLINE')
  INSERT INTO @Actions([Action]) VALUES('INDEX_REORGANIZE')

  DECLARE @ActionsPreferred TABLE (FragmentationGroup nvarchar(max),
                                   [Priority] int,
                                   [Action] nvarchar(max))

  DECLARE @CurrentActionsAllowed TABLE ([Action] nvarchar(max))

  DECLARE @Error int
  DECLARE @ReturnCode int

  SET @Error = 0
  SET @ReturnCode = 0

  SET @Version = CAST(LEFT(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)),CHARINDEX('.',CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max))) - 1) + '.' + REPLACE(RIGHT(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)), LEN(CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max))) - CHARINDEX('.',CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)))),'.','') AS numeric(18,10))

  SET @AmazonRDS = CASE WHEN DB_ID('rdsadmin') IS NOT NULL AND SUSER_SNAME(0x01) = 'rdsa' THEN 1 ELSE 0 END

  ----------------------------------------------------------------------------------------------------
  --// Log initial information                                                                    //--
  ----------------------------------------------------------------------------------------------------

  SET @StartTime = CONVERT(datetime,CONVERT(nvarchar,GETDATE(),120),120)

  SET @StartMessage = 'Date and time: ' + CONVERT(nvarchar,@StartTime,120) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Server: ' + CAST(SERVERPROPERTY('ServerName') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Version: ' + CAST(SERVERPROPERTY('ProductVersion') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Edition: ' + CAST(SERVERPROPERTY('Edition') AS nvarchar(max)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Procedure: ' + QUOTENAME(DB_NAME(DB_ID())) + '.' + (SELECT QUOTENAME(schemas.name) FROM sys.schemas schemas INNER JOIN sys.objects objects ON schemas.[schema_id] = objects.[schema_id] WHERE [object_id] = @@PROCID) + '.' + QUOTENAME(OBJECT_NAME(@@PROCID)) + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Parameters: @Databases = ' + ISNULL('''' + REPLACE(@Databases,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @FragmentationLow = ' + ISNULL('''' + REPLACE(@FragmentationLow,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @FragmentationMedium = ' + ISNULL('''' + REPLACE(@FragmentationMedium,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @FragmentationHigh = ' + ISNULL('''' + REPLACE(@FragmentationHigh,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @FragmentationLevel1 = ' + ISNULL(CAST(@FragmentationLevel1 AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @FragmentationLevel2 = ' + ISNULL(CAST(@FragmentationLevel2 AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @PageCountLevel = ' + ISNULL(CAST(@PageCountLevel AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @SortInTempdb = ' + ISNULL('''' + REPLACE(@SortInTempdb,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @MaxDOP = ' + ISNULL(CAST(@MaxDOP AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @FillFactor = ' + ISNULL(CAST(@FillFactor AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @PadIndex = ' + ISNULL('''' + REPLACE(@PadIndex,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @LOBCompaction = ' + ISNULL('''' + REPLACE(@LOBCompaction,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @UpdateStatistics = ' + ISNULL('''' + REPLACE(@UpdateStatistics,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @OnlyModifiedStatistics = ' + ISNULL('''' + REPLACE(@OnlyModifiedStatistics,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @StatisticsSample = ' + ISNULL(CAST(@StatisticsSample AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @StatisticsResample = ' + ISNULL('''' + REPLACE(@StatisticsResample,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @PartitionLevel = ' + ISNULL('''' + REPLACE(@PartitionLevel,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @MSShippedObjects = ' + ISNULL('''' + REPLACE(@MSShippedObjects,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Indexes = ' + ISNULL('''' + REPLACE(@Indexes,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @TimeLimit = ' + ISNULL(CAST(@TimeLimit AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @Delay = ' + ISNULL(CAST(@Delay AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @WaitAtLowPriorityMaxDuration = ' + ISNULL(CAST(@WaitAtLowPriorityMaxDuration AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @WaitAtLowPriorityAbortAfterWait = ' + ISNULL('''' + REPLACE(@WaitAtLowPriorityAbortAfterWait,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @AvailabilityGroups = ' + ISNULL('''' + REPLACE(@AvailabilityGroups,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @LockTimeout = ' + ISNULL(CAST(@LockTimeout AS nvarchar),'NULL')
  SET @StartMessage = @StartMessage + ', @LogToTable = ' + ISNULL('''' + REPLACE(@LogToTable,'''','''''') + '''','NULL')
  SET @StartMessage = @StartMessage + ', @Execute = ' + ISNULL('''' + REPLACE(@Execute,'''','''''') + '''','NULL') + CHAR(13) + CHAR(10)
  SET @StartMessage = @StartMessage + 'Source: https://ola.hallengren.com' + CHAR(13) + CHAR(10)
  SET @StartMessage = REPLACE(@StartMessage,'%','%%') + ' '
  RAISERROR(@StartMessage,10,1) WITH NOWAIT

  ----------------------------------------------------------------------------------------------------
  --// Check core requirements                                                                    //--
  ----------------------------------------------------------------------------------------------------

  IF NOT EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'P' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandExecute')
  BEGIN
    SET @ErrorMessage = 'The stored procedure CommandExecute is missing. Download https://ola.hallengren.com/scripts/CommandExecute.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'P' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandExecute' AND (OBJECT_DEFINITION(objects.[object_id]) NOT LIKE '%@LogToTable%' OR OBJECT_DEFINITION(objects.[object_id]) LIKE '%LOCK_TIMEOUT%'))
  BEGIN
    SET @ErrorMessage = 'The stored procedure CommandExecute needs to be updated. Download https://ola.hallengren.com/scripts/CommandExecute.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LogToTable = 'Y' AND NOT EXISTS (SELECT * FROM sys.objects objects INNER JOIN sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] = 'U' AND schemas.[name] = 'dbo' AND objects.[name] = 'CommandLog')
  BEGIN
    SET @ErrorMessage = 'The table CommandLog is missing. Download https://ola.hallengren.com/scripts/CommandLog.sql.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF SERVERPROPERTY('EngineEdition') = 5 AND @Version < 12
  BEGIN
    SET @ErrorMessage = 'The stored procedure IndexOptimize is not supported on this version of Azure SQL Database.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ReturnCode = @Error
    GOTO Logging
  END

  ----------------------------------------------------------------------------------------------------
  --// Select databases                                                                           //--
  ----------------------------------------------------------------------------------------------------

  SET @Databases = REPLACE(@Databases, CHAR(10), '')
  SET @Databases = REPLACE(@Databases, CHAR(13), '')

  WHILE CHARINDEX(', ',@Databases) > 0 SET @Databases = REPLACE(@Databases,', ',',')
  WHILE CHARINDEX(' ,',@Databases) > 0 SET @Databases = REPLACE(@Databases,' ,',',')

  SET @Databases = LTRIM(RTRIM(@Databases));

  WITH Databases1 (StartPosition, EndPosition, DatabaseItem) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Databases, 1), 0), LEN(@Databases) + 1) AS EndPosition,
         SUBSTRING(@Databases, 1, ISNULL(NULLIF(CHARINDEX(',', @Databases, 1), 0), LEN(@Databases) + 1) - 1) AS DatabaseItem
  WHERE @Databases IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Databases, EndPosition + 1), 0), LEN(@Databases) + 1) AS EndPosition,
         SUBSTRING(@Databases, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @Databases, EndPosition + 1), 0), LEN(@Databases) + 1) - EndPosition - 1) AS DatabaseItem
  FROM Databases1
  WHERE EndPosition < LEN(@Databases) + 1
  ),
  Databases2 (DatabaseItem, Selected) AS
  (
  SELECT CASE WHEN DatabaseItem LIKE '-%' THEN RIGHT(DatabaseItem,LEN(DatabaseItem) - 1) ELSE DatabaseItem END AS DatabaseItem,
         CASE WHEN DatabaseItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
  FROM Databases1
  ),
  Databases3 (DatabaseItem, DatabaseType, AvailabilityGroup, Selected) AS
  (
  SELECT CASE WHEN DatabaseItem IN('ALL_DATABASES','SYSTEM_DATABASES','USER_DATABASES','AVAILABILITY_GROUP_DATABASES') THEN '%' ELSE DatabaseItem END AS DatabaseItem,
         CASE WHEN DatabaseItem = 'SYSTEM_DATABASES' THEN 'S' WHEN DatabaseItem = 'USER_DATABASES' THEN 'U' ELSE NULL END AS DatabaseType,
         CASE WHEN DatabaseItem = 'AVAILABILITY_GROUP_DATABASES' THEN 1 ELSE NULL END AvailabilityGroup,
         Selected
  FROM Databases2
  ),
  Databases4 (DatabaseName, DatabaseType, AvailabilityGroup, Selected) AS
  (
  SELECT CASE WHEN LEFT(DatabaseItem,1) = '[' AND RIGHT(DatabaseItem,1) = ']' THEN PARSENAME(DatabaseItem,1) ELSE DatabaseItem END AS DatabaseItem,
         DatabaseType,
         AvailabilityGroup,
         Selected
  FROM Databases3
  )
  INSERT INTO @SelectedDatabases (DatabaseName, DatabaseType, AvailabilityGroup, Selected)
  SELECT DatabaseName,
         DatabaseType,
         AvailabilityGroup,
         Selected
  FROM Databases4
  OPTION (MAXRECURSION 0)

  IF @Version >= 11 AND SERVERPROPERTY('EngineEdition') <> 5
  BEGIN
    INSERT INTO @tmpDatabases (DatabaseName, DatabaseType, AvailabilityGroup, Selected, Completed)
    SELECT [name] AS DatabaseName,
           CASE WHEN name IN('master','msdb','model') THEN 'S' ELSE 'U' END AS DatabaseType,
           CASE WHEN name IN (SELECT availability_databases_cluster.database_name FROM sys.availability_databases_cluster availability_databases_cluster) THEN 1 ELSE 0 END AS AvailabilityGroup,
           0 AS Selected,
           0 AS Completed
    FROM sys.databases
    WHERE [name] <> 'tempdb'
    AND source_database_id IS NULL
    ORDER BY [name] ASC
  END
  ELSE
  BEGIN
    INSERT INTO @tmpDatabases (DatabaseName, DatabaseType, AvailabilityGroup, Selected, Completed)
    SELECT [name] AS DatabaseName,
           CASE WHEN name IN('master','msdb','model') THEN 'S' ELSE 'U' END AS DatabaseType,
           NULL AS AvailabilityGroup,
           0 AS Selected,
           0 AS Completed
    FROM sys.databases
    WHERE [name] <> 'tempdb'
    AND source_database_id IS NULL
    ORDER BY [name] ASC
  END

  UPDATE tmpDatabases
  SET tmpDatabases.Selected = SelectedDatabases.Selected
  FROM @tmpDatabases tmpDatabases
  INNER JOIN @SelectedDatabases SelectedDatabases
  ON tmpDatabases.DatabaseName LIKE REPLACE(SelectedDatabases.DatabaseName,'_','[_]')
  AND (tmpDatabases.DatabaseType = SelectedDatabases.DatabaseType OR SelectedDatabases.DatabaseType IS NULL)
  AND (tmpDatabases.AvailabilityGroup = SelectedDatabases.AvailabilityGroup OR SelectedDatabases.AvailabilityGroup IS NULL)
  WHERE SelectedDatabases.Selected = 1

  UPDATE tmpDatabases
  SET tmpDatabases.Selected = SelectedDatabases.Selected
  FROM @tmpDatabases tmpDatabases
  INNER JOIN @SelectedDatabases SelectedDatabases
  ON tmpDatabases.DatabaseName LIKE REPLACE(SelectedDatabases.DatabaseName,'_','[_]')
  AND (tmpDatabases.DatabaseType = SelectedDatabases.DatabaseType OR SelectedDatabases.DatabaseType IS NULL)
  AND (tmpDatabases.AvailabilityGroup = SelectedDatabases.AvailabilityGroup OR SelectedDatabases.AvailabilityGroup IS NULL)
  WHERE SelectedDatabases.Selected = 0

  IF @Databases IS NOT NULL AND (NOT EXISTS(SELECT * FROM @SelectedDatabases) OR EXISTS(SELECT * FROM @SelectedDatabases WHERE DatabaseName IS NULL OR DatabaseName = ''))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Databases is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  ----------------------------------------------------------------------------------------------------
  --// Select availability groups                                                                 //--
  ----------------------------------------------------------------------------------------------------

  IF @AvailabilityGroups IS NOT NULL AND @Version >= 11
  BEGIN

    SET @AvailabilityGroups = REPLACE(@AvailabilityGroups, CHAR(10), '')
    SET @AvailabilityGroups = REPLACE(@AvailabilityGroups, CHAR(13), '')

    WHILE CHARINDEX(', ',@AvailabilityGroups) > 0 SET @AvailabilityGroups = REPLACE(@AvailabilityGroups,', ',',')
    WHILE CHARINDEX(' ,',@AvailabilityGroups) > 0 SET @AvailabilityGroups = REPLACE(@AvailabilityGroups,' ,',',')

    SET @AvailabilityGroups = LTRIM(RTRIM(@AvailabilityGroups));

    WITH AvailabilityGroups1 (StartPosition, EndPosition, AvailabilityGroupItem) AS
    (
    SELECT 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, 1), 0), LEN(@AvailabilityGroups) + 1) AS EndPosition,
           SUBSTRING(@AvailabilityGroups, 1, ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, 1), 0), LEN(@AvailabilityGroups) + 1) - 1) AS AvailabilityGroupItem
    WHERE @AvailabilityGroups IS NOT NULL
    UNION ALL
    SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
           ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, EndPosition + 1), 0), LEN(@AvailabilityGroups) + 1) AS EndPosition,
           SUBSTRING(@AvailabilityGroups, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @AvailabilityGroups, EndPosition + 1), 0), LEN(@AvailabilityGroups) + 1) - EndPosition - 1) AS AvailabilityGroupItem
    FROM AvailabilityGroups1
    WHERE EndPosition < LEN(@AvailabilityGroups) + 1
    ),
    AvailabilityGroups2 (AvailabilityGroupItem, Selected) AS
    (
    SELECT CASE WHEN AvailabilityGroupItem LIKE '-%' THEN RIGHT(AvailabilityGroupItem,LEN(AvailabilityGroupItem) - 1) ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           CASE WHEN AvailabilityGroupItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
    FROM AvailabilityGroups1
    ),
    AvailabilityGroups3 (AvailabilityGroupItem, Selected) AS
    (
    SELECT CASE WHEN AvailabilityGroupItem = 'ALL_AVAILABILITY_GROUPS' THEN '%' ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           Selected
    FROM AvailabilityGroups2
    ),
    AvailabilityGroups4 (AvailabilityGroupName, Selected) AS
    (
    SELECT CASE WHEN LEFT(AvailabilityGroupItem,1) = '[' AND RIGHT(AvailabilityGroupItem,1) = ']' THEN PARSENAME(AvailabilityGroupItem,1) ELSE AvailabilityGroupItem END AS AvailabilityGroupItem,
           Selected
    FROM AvailabilityGroups3
    )
    INSERT INTO @SelectedAvailabilityGroups (AvailabilityGroupName, Selected)
    SELECT AvailabilityGroupName, Selected
    FROM AvailabilityGroups4
    OPTION (MAXRECURSION 0)

    INSERT INTO @tmpAvailabilityGroups (AvailabilityGroupName, Selected)
    SELECT name AS AvailabilityGroupName,
           0 AS Selected
    FROM sys.availability_groups

    UPDATE tmpAvailabilityGroups
    SET tmpAvailabilityGroups.Selected = SelectedAvailabilityGroups.Selected
    FROM @tmpAvailabilityGroups tmpAvailabilityGroups
    INNER JOIN @SelectedAvailabilityGroups SelectedAvailabilityGroups
    ON tmpAvailabilityGroups.AvailabilityGroupName LIKE REPLACE(SelectedAvailabilityGroups.AvailabilityGroupName,'_','[_]')
    WHERE SelectedAvailabilityGroups.Selected = 1

    UPDATE tmpAvailabilityGroups
    SET tmpAvailabilityGroups.Selected = SelectedAvailabilityGroups.Selected
    FROM @tmpAvailabilityGroups tmpAvailabilityGroups
    INNER JOIN @SelectedAvailabilityGroups SelectedAvailabilityGroups
    ON tmpAvailabilityGroups.AvailabilityGroupName LIKE REPLACE(SelectedAvailabilityGroups.AvailabilityGroupName,'_','[_]')
    WHERE SelectedAvailabilityGroups.Selected = 0

    INSERT INTO @tmpDatabasesAvailabilityGroups (DatabaseName, AvailabilityGroupName)
    SELECT availability_databases_cluster.database_name, availability_groups.name
    FROM sys.availability_databases_cluster availability_databases_cluster
    INNER JOIN sys.availability_groups availability_groups ON availability_databases_cluster.group_id = availability_groups.group_id

    UPDATE tmpDatabases
    SET Selected = 1
    FROM @tmpDatabases tmpDatabases
    INNER JOIN @tmpDatabasesAvailabilityGroups tmpDatabasesAvailabilityGroups ON tmpDatabases.DatabaseName = tmpDatabasesAvailabilityGroups.DatabaseName
    INNER JOIN @tmpAvailabilityGroups tmpAvailabilityGroups ON tmpDatabasesAvailabilityGroups.AvailabilityGroupName = tmpAvailabilityGroups.AvailabilityGroupName
    WHERE tmpAvailabilityGroups.Selected = 1

  END

  IF @AvailabilityGroups IS NOT NULL AND (NOT EXISTS(SELECT * FROM @SelectedAvailabilityGroups) OR EXISTS(SELECT * FROM @SelectedAvailabilityGroups WHERE AvailabilityGroupName IS NULL OR AvailabilityGroupName = '') OR @Version < 11)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @AvailabilityGroups is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@Databases IS NULL AND @AvailabilityGroups IS NULL)
  BEGIN
    SET @ErrorMessage = 'You need to specify one of the parameters @Databases and @AvailabilityGroups.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF (@Databases IS NOT NULL AND @AvailabilityGroups IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'You can only specify one of the parameters @Databases and @AvailabilityGroups.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  ----------------------------------------------------------------------------------------------------
  --// Select indexes                                                                             //--
  ----------------------------------------------------------------------------------------------------

  SET @Indexes = REPLACE(@Indexes, CHAR(10), '')
  SET @Indexes = REPLACE(@Indexes, CHAR(13), '')

  WHILE CHARINDEX(', ',@Indexes) > 0 SET @Indexes = REPLACE(@Indexes,', ',',')
  WHILE CHARINDEX(' ,',@Indexes) > 0 SET @Indexes = REPLACE(@Indexes,' ,',',')

  SET @Indexes = LTRIM(RTRIM(@Indexes));

  WITH Indexes1 (StartPosition, EndPosition, IndexItem) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Indexes, 1), 0), LEN(@Indexes) + 1) AS EndPosition,
         SUBSTRING(@Indexes, 1, ISNULL(NULLIF(CHARINDEX(',', @Indexes, 1), 0), LEN(@Indexes) + 1) - 1) AS IndexItem
  WHERE @Indexes IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @Indexes, EndPosition + 1), 0), LEN(@Indexes) + 1) AS EndPosition,
         SUBSTRING(@Indexes, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @Indexes, EndPosition + 1), 0), LEN(@Indexes) + 1) - EndPosition - 1) AS IndexItem
  FROM Indexes1
  WHERE EndPosition < LEN(@Indexes) + 1
  ),
  Indexes2 (IndexItem, Selected) AS
  (
  SELECT CASE WHEN IndexItem LIKE '-%' THEN RIGHT(IndexItem,LEN(IndexItem) - 1) ELSE IndexItem END AS IndexItem,
         CASE WHEN IndexItem LIKE '-%' THEN 0 ELSE 1 END AS Selected
  FROM Indexes1
  ),
  Indexes3 (IndexItem, Selected) AS
  (
  SELECT CASE WHEN IndexItem = 'ALL_INDEXES' THEN '%.%.%.%' ELSE IndexItem END AS IndexItem,
         Selected
  FROM Indexes2
  ),
  Indexes4 (DatabaseName, SchemaName, ObjectName, IndexName, Selected) AS
  (
  SELECT CASE WHEN PARSENAME(IndexItem,4) IS NULL THEN PARSENAME(IndexItem,3) ELSE PARSENAME(IndexItem,4) END AS DatabaseName,
         CASE WHEN PARSENAME(IndexItem,4) IS NULL THEN PARSENAME(IndexItem,2) ELSE PARSENAME(IndexItem,3) END AS SchemaName,
         CASE WHEN PARSENAME(IndexItem,4) IS NULL THEN PARSENAME(IndexItem,1) ELSE PARSENAME(IndexItem,2) END AS ObjectName,
         CASE WHEN PARSENAME(IndexItem,4) IS NULL THEN '%' ELSE PARSENAME(IndexItem,1) END AS IndexName,
         Selected
  FROM Indexes3
  )
  INSERT INTO @SelectedIndexes (DatabaseName, SchemaName, ObjectName, IndexName, Selected)
  SELECT DatabaseName, SchemaName, ObjectName, IndexName, Selected
  FROM Indexes4
  OPTION (MAXRECURSION 0);

  ----------------------------------------------------------------------------------------------------
  --// Select actions                                                                             //--
  ----------------------------------------------------------------------------------------------------

  WITH FragmentationLow (StartPosition, EndPosition, [Action]) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FragmentationLow, 1), 0), LEN(@FragmentationLow) + 1) AS EndPosition,
         SUBSTRING(@FragmentationLow, 1, ISNULL(NULLIF(CHARINDEX(',', @FragmentationLow, 1), 0), LEN(@FragmentationLow) + 1) - 1) AS [Action]
  WHERE @FragmentationLow IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FragmentationLow, EndPosition + 1), 0), LEN(@FragmentationLow) + 1) AS EndPosition,
         SUBSTRING(@FragmentationLow, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @FragmentationLow, EndPosition + 1), 0), LEN(@FragmentationLow) + 1) - EndPosition - 1) AS [Action]
  FROM FragmentationLow
  WHERE EndPosition < LEN(@FragmentationLow) + 1
  )
  INSERT INTO @ActionsPreferred(FragmentationGroup, [Priority], [Action])
  SELECT 'Low' AS FragmentationGroup,
         ROW_NUMBER() OVER(ORDER BY StartPosition ASC) AS [Priority],
         [Action]
  FROM FragmentationLow
  OPTION (MAXRECURSION 0);

  WITH FragmentationMedium (StartPosition, EndPosition, [Action]) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FragmentationMedium, 1), 0), LEN(@FragmentationMedium) + 1) AS EndPosition,
         SUBSTRING(@FragmentationMedium, 1, ISNULL(NULLIF(CHARINDEX(',', @FragmentationMedium, 1), 0), LEN(@FragmentationMedium) + 1) - 1) AS [Action]
  WHERE @FragmentationMedium IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FragmentationMedium, EndPosition + 1), 0), LEN(@FragmentationMedium) + 1) AS EndPosition,
         SUBSTRING(@FragmentationMedium, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @FragmentationMedium, EndPosition + 1), 0), LEN(@FragmentationMedium) + 1) - EndPosition - 1) AS [Action]
  FROM FragmentationMedium
  WHERE EndPosition < LEN(@FragmentationMedium) + 1
  )
  INSERT INTO @ActionsPreferred(FragmentationGroup, [Priority], [Action])
  SELECT 'Medium' AS FragmentationGroup,
         ROW_NUMBER() OVER(ORDER BY StartPosition ASC) AS [Priority],
         [Action]
  FROM FragmentationMedium
  OPTION (MAXRECURSION 0);

  WITH FragmentationHigh (StartPosition, EndPosition, [Action]) AS
  (
  SELECT 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FragmentationHigh, 1), 0), LEN(@FragmentationHigh) + 1) AS EndPosition,
         SUBSTRING(@FragmentationHigh, 1, ISNULL(NULLIF(CHARINDEX(',', @FragmentationHigh, 1), 0), LEN(@FragmentationHigh) + 1) - 1) AS [Action]
  WHERE @FragmentationHigh IS NOT NULL
  UNION ALL
  SELECT CAST(EndPosition AS int) + 1 AS StartPosition,
         ISNULL(NULLIF(CHARINDEX(',', @FragmentationHigh, EndPosition + 1), 0), LEN(@FragmentationHigh) + 1) AS EndPosition,
         SUBSTRING(@FragmentationHigh, EndPosition + 1, ISNULL(NULLIF(CHARINDEX(',', @FragmentationHigh, EndPosition + 1), 0), LEN(@FragmentationHigh) + 1) - EndPosition - 1) AS [Action]
  FROM FragmentationHigh
  WHERE EndPosition < LEN(@FragmentationHigh) + 1
  )
  INSERT INTO @ActionsPreferred(FragmentationGroup, [Priority], [Action])
  SELECT 'High' AS FragmentationGroup,
         ROW_NUMBER() OVER(ORDER BY StartPosition ASC) AS [Priority],
         [Action]
  FROM FragmentationHigh
  OPTION (MAXRECURSION 0)

  ----------------------------------------------------------------------------------------------------
  --// Check input parameters                                                                     //--
  ----------------------------------------------------------------------------------------------------

  IF EXISTS (SELECT [Action] FROM @ActionsPreferred WHERE FragmentationGroup = 'Low' AND [Action] NOT IN(SELECT * FROM @Actions))
  OR EXISTS(SELECT * FROM @ActionsPreferred WHERE FragmentationGroup = 'Low' GROUP BY [Action] HAVING COUNT(*) > 1)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @FragmentationLow is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS (SELECT [Action] FROM @ActionsPreferred WHERE FragmentationGroup = 'Medium' AND [Action] NOT IN(SELECT * FROM @Actions))
  OR EXISTS(SELECT * FROM @ActionsPreferred WHERE FragmentationGroup = 'Medium' GROUP BY [Action] HAVING COUNT(*) > 1)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @FragmentationMedium is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS (SELECT [Action] FROM @ActionsPreferred WHERE FragmentationGroup = 'High' AND [Action] NOT IN(SELECT * FROM @Actions))
  OR EXISTS(SELECT * FROM @ActionsPreferred WHERE FragmentationGroup = 'High' GROUP BY [Action] HAVING COUNT(*) > 1)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @FragmentationHigh is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @FragmentationLevel1 <= 0 OR @FragmentationLevel1 >= 100 OR @FragmentationLevel1 >= @FragmentationLevel2 OR @FragmentationLevel1 IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @FragmentationLevel1 is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @FragmentationLevel2 <= 0 OR @FragmentationLevel2 >= 100 OR @FragmentationLevel2 <= @FragmentationLevel1 OR @FragmentationLevel2 IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @FragmentationLevel2 is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @PageCountLevel < 0 OR @PageCountLevel IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @PageCountLevel is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @SortInTempdb NOT IN('Y','N') OR @SortInTempdb IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @SortInTempdb is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @MaxDOP < 0 OR @MaxDOP > 64 OR (@MaxDOP > 1 AND SERVERPROPERTY('EngineEdition') NOT IN (3,5))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @MaxDOP is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @FillFactor <= 0 OR @FillFactor > 100
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @FillFactor is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @PadIndex NOT IN('Y','N')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @PadIndex is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LOBCompaction NOT IN('Y','N') OR @LOBCompaction IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @LOBCompaction is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @UpdateStatistics NOT IN('ALL','COLUMNS','INDEX')
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @UpdateStatistics is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @OnlyModifiedStatistics NOT IN('Y','N') OR @OnlyModifiedStatistics IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @OnlyModifiedStatistics is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @StatisticsSample <= 0 OR @StatisticsSample  > 100
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @StatisticsSample is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @StatisticsResample NOT IN('Y','N') OR @StatisticsResample IS NULL OR (@StatisticsResample = 'Y' AND @StatisticsSample IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @StatisticsResample is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @PartitionLevel NOT IN('Y','N') OR @PartitionLevel IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @PartitionLevel is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @MSShippedObjects NOT IN('Y','N') OR @MSShippedObjects IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @MSShippedObjects is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF EXISTS(SELECT * FROM @SelectedIndexes WHERE DatabaseName IS NULL OR SchemaName IS NULL OR ObjectName IS NULL OR IndexName IS NULL) OR (@Indexes IS NOT NULL AND NOT EXISTS(SELECT * FROM @SelectedIndexes))
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Indexes is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @TimeLimit < 0
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @TimeLimit is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Delay < 0
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Delay is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @WaitAtLowPriorityMaxDuration < 0 OR (@WaitAtLowPriorityMaxDuration IS NOT NULL AND @Version < 12) OR (@WaitAtLowPriorityMaxDuration IS NOT NULL AND @WaitAtLowPriorityAbortAfterWait IS NULL) OR (@WaitAtLowPriorityMaxDuration IS NULL AND @WaitAtLowPriorityAbortAfterWait IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @WaitAtLowPriorityMaxDuration is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @WaitAtLowPriorityAbortAfterWait NOT IN('NONE','SELF','BLOCKERS') OR (@WaitAtLowPriorityAbortAfterWait IS NOT NULL AND @Version < 12) OR (@WaitAtLowPriorityAbortAfterWait IS NOT NULL AND @WaitAtLowPriorityMaxDuration IS NULL) OR (@WaitAtLowPriorityAbortAfterWait IS NULL AND @WaitAtLowPriorityMaxDuration IS NOT NULL)
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @WaitAtLowPriorityAbortAfterWait is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LockTimeout < 0
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @LockTimeout is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @LogToTable NOT IN('Y','N') OR @LogToTable IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @LogToTable is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Execute NOT IN('Y','N') OR @Execute IS NULL
  BEGIN
    SET @ErrorMessage = 'The value for the parameter @Execute is not supported.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @Error = @@ERROR
  END

  IF @Error <> 0
  BEGIN
    SET @ErrorMessage = 'The documentation is available at https://ola.hallengren.com/sql-server-index-and-statistics-maintenance.html.' + CHAR(13) + CHAR(10) + ' '
    RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
    SET @ReturnCode = @Error
    GOTO Logging
  END

  ----------------------------------------------------------------------------------------------------
  --// Check Availability Group cluster name                                                      //--
  ----------------------------------------------------------------------------------------------------

  IF @Version >= 11 AND SERVERPROPERTY('EngineEdition') <> 5
  BEGIN
    SELECT @Cluster = cluster_name
    FROM sys.dm_hadr_cluster
  END

  ----------------------------------------------------------------------------------------------------
  --// Execute commands                                                                           //--
  ----------------------------------------------------------------------------------------------------

  WHILE EXISTS (SELECT * FROM @tmpDatabases WHERE Selected = 1 AND Completed = 0)
  BEGIN

    SELECT TOP 1 @CurrentDBID = ID,
                 @CurrentDatabaseName = DatabaseName
    FROM @tmpDatabases
    WHERE Selected = 1
    AND Completed = 0
    ORDER BY ID ASC

    SET @CurrentDatabaseID = DB_ID(@CurrentDatabaseName)

    IF DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') = 'ONLINE' AND SERVERPROPERTY('EngineEdition') <> 5
    BEGIN
      IF EXISTS (SELECT * FROM sys.database_recovery_status WHERE database_id = @CurrentDatabaseID AND database_guid IS NOT NULL)
      BEGIN
        SET @CurrentIsDatabaseAccessible = 1
      END
      ELSE
      BEGIN
        SET @CurrentIsDatabaseAccessible = 0
      END
    END

    IF @Version >= 11 AND @Cluster IS NOT NULL
    BEGIN
      SELECT @CurrentAvailabilityGroup = availability_groups.name,
             @CurrentAvailabilityGroupRole = dm_hadr_availability_replica_states.role_desc
      FROM sys.databases databases
      INNER JOIN sys.availability_databases_cluster availability_databases_cluster ON databases.group_database_id = availability_databases_cluster.group_database_id
      INNER JOIN sys.availability_groups availability_groups ON availability_databases_cluster.group_id = availability_groups.group_id
      INNER JOIN sys.dm_hadr_availability_replica_states dm_hadr_availability_replica_states ON availability_groups.group_id = dm_hadr_availability_replica_states.group_id AND databases.replica_id = dm_hadr_availability_replica_states.replica_id
      WHERE databases.name = @CurrentDatabaseName
    END

    IF SERVERPROPERTY('EngineEdition') <> 5
    BEGIN
      SELECT @CurrentDatabaseMirroringRole = UPPER(mirroring_role_desc)
      FROM sys.database_mirroring
      WHERE database_id = @CurrentDatabaseID
    END

    SELECT @CurrentIsReadOnly = is_read_only
    FROM sys.databases
    WHERE name = @CurrentDatabaseName

    -- Set database message
    SET @DatabaseMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Database: ' + QUOTENAME(@CurrentDatabaseName) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Status: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') AS nvarchar) + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Standby: ' + CASE WHEN DATABASEPROPERTYEX(@CurrentDatabaseName,'IsInStandBy') = 1 THEN 'Yes' ELSE 'No' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Updateability: ' + CASE WHEN @CurrentIsReadOnly = 1 THEN 'READ_ONLY' WHEN  @CurrentIsReadOnly = 0 THEN 'READ_WRITE' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'User access: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'UserAccess') AS nvarchar) + CHAR(13) + CHAR(10)
    IF @CurrentIsDatabaseAccessible IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Is accessible: ' + CASE WHEN @CurrentIsDatabaseAccessible = 1 THEN 'Yes' ELSE 'No' END + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = @DatabaseMessage + 'Recovery model: ' + CAST(DATABASEPROPERTYEX(@CurrentDatabaseName,'Recovery') AS nvarchar) + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Availability group: ' + @CurrentAvailabilityGroup + CHAR(13) + CHAR(10)
    IF @CurrentAvailabilityGroup IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Availability group role: ' + @CurrentAvailabilityGroupRole + CHAR(13) + CHAR(10)
    IF @CurrentDatabaseMirroringRole IS NOT NULL SET @DatabaseMessage = @DatabaseMessage + 'Database mirroring role: ' + @CurrentDatabaseMirroringRole + CHAR(13) + CHAR(10)
    SET @DatabaseMessage = REPLACE(@DatabaseMessage,'%','%%') + ' '
    RAISERROR(@DatabaseMessage,10,1) WITH NOWAIT

    IF DATABASEPROPERTYEX(@CurrentDatabaseName,'Status') = 'ONLINE'
    AND (@CurrentIsDatabaseAccessible = 1 OR @CurrentIsDatabaseAccessible IS NULL)
    AND DATABASEPROPERTYEX(@CurrentDatabaseName,'Updateability') = 'READ_WRITE'
    BEGIN

      -- Select indexes in the current database
      IF (EXISTS(SELECT * FROM @ActionsPreferred) OR @UpdateStatistics IS NOT NULL) AND (GETDATE() < DATEADD(ss,@TimeLimit,@StartTime) OR @TimeLimit IS NULL)
      BEGIN
        SET @CurrentCommand01 = 'SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; SELECT SchemaID, SchemaName, ObjectID, ObjectName, ObjectType, IsMemoryOptimized, IndexID, IndexName, IndexType, StatisticsID, StatisticsName, PartitionID, PartitionNumber, PartitionCount, Selected, Completed FROM ('

        IF EXISTS(SELECT * FROM @ActionsPreferred) OR @UpdateStatistics IN('ALL','INDEX')
        BEGIN
          SET @CurrentCommand01 = @CurrentCommand01 + 'SELECT schemas.[schema_id] AS SchemaID, schemas.[name] AS SchemaName, objects.[object_id] AS ObjectID, objects.[name] AS ObjectName, RTRIM(objects.[type]) AS ObjectType, ' + CASE WHEN @Version >= 12 THEN 'tables.is_memory_optimized' ELSE 'NULL' END + ' AS IsMemoryOptimized, indexes.index_id AS IndexID, indexes.[name] AS IndexName, indexes.[type] AS IndexType, stats.stats_id AS StatisticsID, stats.name AS StatisticsName'
          IF @PartitionLevel = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ', partitions.partition_id AS PartitionID, partitions.partition_number AS PartitionNumber, IndexPartitions.partition_count AS PartitionCount'
          IF @PartitionLevel = 'N' SET @CurrentCommand01 = @CurrentCommand01 + ', NULL AS PartitionID, NULL AS PartitionNumber, NULL AS PartitionCount'
          SET @CurrentCommand01 = @CurrentCommand01 + ', 0 AS Selected, 0 AS Completed FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.objects objects ON indexes.[object_id] = objects.[object_id] INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] LEFT OUTER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.tables tables ON objects.[object_id] = tables.[object_id] LEFT OUTER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.stats stats ON indexes.[object_id] = stats.[object_id] AND indexes.[index_id] = stats.[stats_id]'
          IF @PartitionLevel = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ' LEFT OUTER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.partitions partitions ON indexes.[object_id] = partitions.[object_id] AND indexes.index_id = partitions.index_id LEFT OUTER JOIN (SELECT partitions.[object_id], partitions.index_id, COUNT(*) AS partition_count FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.partitions partitions GROUP BY partitions.[object_id], partitions.index_id) IndexPartitions ON partitions.[object_id] = IndexPartitions.[object_id] AND partitions.[index_id] = IndexPartitions.[index_id]'
          IF @PartitionLevel = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ' LEFT OUTER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.dm_db_partition_stats dm_db_partition_stats ON indexes.[object_id] = dm_db_partition_stats.[object_id] AND indexes.[index_id] = dm_db_partition_stats.[index_id] AND partitions.partition_id = dm_db_partition_stats.partition_id'
          IF @PartitionLevel = 'N' SET @CurrentCommand01 = @CurrentCommand01 + ' LEFT OUTER JOIN (SELECT dm_db_partition_stats.[object_id], dm_db_partition_stats.[index_id], SUM(dm_db_partition_stats.in_row_data_page_count) AS in_row_data_page_count FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.dm_db_partition_stats dm_db_partition_stats GROUP BY dm_db_partition_stats.[object_id], dm_db_partition_stats.[index_id]) dm_db_partition_stats ON indexes.[object_id] = dm_db_partition_stats.[object_id] AND indexes.[index_id] = dm_db_partition_stats.[index_id]'
          SET @CurrentCommand01 = @CurrentCommand01 + ' WHERE objects.[type] IN(''U'',''V'')' + CASE WHEN @MSShippedObjects = 'N' THEN ' AND objects.is_ms_shipped = 0' ELSE '' END + ' AND indexes.[type] IN(1,2,3,4,5,6,7) AND indexes.is_disabled = 0 AND indexes.is_hypothetical = 0'
          IF (@UpdateStatistics NOT IN('ALL','INDEX') OR @UpdateStatistics IS NULL) AND @PageCountLevel > 0 SET @CurrentCommand01 = @CurrentCommand01 + ' AND (dm_db_partition_stats.in_row_data_page_count >= @ParamPageCountLevel OR dm_db_partition_stats.in_row_data_page_count IS NULL)'
          IF NOT EXISTS(SELECT * FROM @ActionsPreferred) SET @CurrentCommand01 = @CurrentCommand01 + ' AND stats.stats_id IS NOT NULL'
        END

        IF (EXISTS(SELECT * FROM @ActionsPreferred) AND @UpdateStatistics = 'COLUMNS') OR @UpdateStatistics = 'ALL' SET @CurrentCommand01 = @CurrentCommand01 + ' UNION '

        IF @UpdateStatistics IN('ALL','COLUMNS') SET @CurrentCommand01 = @CurrentCommand01 + 'SELECT schemas.[schema_id] AS SchemaID, schemas.[name] AS SchemaName, objects.[object_id] AS ObjectID, objects.[name] AS ObjectName, RTRIM(objects.[type]) AS ObjectType, ' + CASE WHEN @Version >= 12 THEN 'tables.is_memory_optimized' ELSE 'NULL' END + ' AS IsMemoryOptimized, NULL AS IndexID, NULL AS IndexName, NULL AS IndexType, stats.stats_id AS StatisticsID, stats.name AS StatisticsName, NULL AS PartitionID, NULL AS PartitionNumber, NULL AS PartitionCount, 0 AS Selected, 0 AS Completed FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.stats stats INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.objects objects ON stats.[object_id] = objects.[object_id] INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] LEFT OUTER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.tables tables ON objects.[object_id] = tables.[object_id] WHERE objects.[type] IN(''U'',''V'')' + CASE WHEN @MSShippedObjects = 'N' THEN ' AND objects.is_ms_shipped = 0' ELSE '' END + ' AND NOT EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes WHERE indexes.[object_id] = stats.[object_id] AND indexes.index_id = stats.stats_id)'

        SET @CurrentCommand01 = @CurrentCommand01 + ') IndexesStatistics ORDER BY SchemaName ASC, ObjectName ASC'
        IF (EXISTS(SELECT * FROM @ActionsPreferred) AND @UpdateStatistics = 'COLUMNS') OR @UpdateStatistics = 'ALL' SET @CurrentCommand01 = @CurrentCommand01 + ', CASE WHEN IndexType IS NULL THEN 1 ELSE 0 END ASC'
        IF EXISTS(SELECT * FROM @ActionsPreferred) OR @UpdateStatistics IN('ALL','INDEX') SET @CurrentCommand01 = @CurrentCommand01 + ', IndexType ASC, IndexName ASC'
        IF @UpdateStatistics IN('ALL','COLUMNS') SET @CurrentCommand01 = @CurrentCommand01 + ', StatisticsName ASC'
        IF @PartitionLevel = 'Y' SET @CurrentCommand01 = @CurrentCommand01 + ', PartitionNumber ASC'

        INSERT INTO @tmpIndexesStatistics (SchemaID, SchemaName, ObjectID, ObjectName, ObjectType, IsMemoryOptimized, IndexID, IndexName, IndexType, StatisticsID, StatisticsName, PartitionID, PartitionNumber, PartitionCount, Selected, Completed)
        EXECUTE sp_executesql @statement = @CurrentCommand01, @params = N'@ParamPageCountLevel int', @ParamPageCountLevel = @PageCountLevel
        SET @Error = @@ERROR
        IF @Error <> 0
        BEGIN
          SET @ReturnCode = @Error
        END
      END

      IF @Indexes IS NULL
      BEGIN
        UPDATE tmpIndexesStatistics
        SET tmpIndexesStatistics.Selected = 1
        FROM @tmpIndexesStatistics tmpIndexesStatistics
      END
      ELSE
      BEGIN
        UPDATE tmpIndexesStatistics
        SET tmpIndexesStatistics.Selected = SelectedIndexes.Selected
        FROM @tmpIndexesStatistics tmpIndexesStatistics
        INNER JOIN @SelectedIndexes SelectedIndexes
        ON @CurrentDatabaseName LIKE REPLACE(SelectedIndexes.DatabaseName,'_','[_]') AND tmpIndexesStatistics.SchemaName LIKE REPLACE(SelectedIndexes.SchemaName,'_','[_]') AND tmpIndexesStatistics.ObjectName LIKE REPLACE(SelectedIndexes.ObjectName,'_','[_]') AND COALESCE(tmpIndexesStatistics.IndexName,tmpIndexesStatistics.StatisticsName) LIKE REPLACE(SelectedIndexes.IndexName,'_','[_]')
        WHERE SelectedIndexes.Selected = 1

        UPDATE tmpIndexesStatistics
        SET tmpIndexesStatistics.Selected = SelectedIndexes.Selected
        FROM @tmpIndexesStatistics tmpIndexesStatistics
        INNER JOIN @SelectedIndexes SelectedIndexes
        ON @CurrentDatabaseName LIKE REPLACE(SelectedIndexes.DatabaseName,'_','[_]') AND tmpIndexesStatistics.SchemaName LIKE REPLACE(SelectedIndexes.SchemaName,'_','[_]') AND tmpIndexesStatistics.ObjectName LIKE REPLACE(SelectedIndexes.ObjectName,'_','[_]') AND COALESCE(tmpIndexesStatistics.IndexName,tmpIndexesStatistics.StatisticsName) LIKE REPLACE(SelectedIndexes.IndexName,'_','[_]')
        WHERE SelectedIndexes.Selected = 0
      END

      WHILE EXISTS (SELECT * FROM @tmpIndexesStatistics WHERE Selected = 1 AND Completed = 0 AND (GETDATE() < DATEADD(ss,@TimeLimit,@StartTime) OR @TimeLimit IS NULL))
      BEGIN

        SELECT TOP 1 @CurrentIxID = ID,
                     @CurrentSchemaID = SchemaID,
                     @CurrentSchemaName = SchemaName,
                     @CurrentObjectID = ObjectID,
                     @CurrentObjectName = ObjectName,
                     @CurrentObjectType = ObjectType,
                     @CurrentIsMemoryOptimized = IsMemoryOptimized,
                     @CurrentIndexID = IndexID,
                     @CurrentIndexName = IndexName,
                     @CurrentIndexType = IndexType,
                     @CurrentStatisticsID = StatisticsID,
                     @CurrentStatisticsName = StatisticsName,
                     @CurrentPartitionID = PartitionID,
                     @CurrentPartitionNumber = PartitionNumber,
                     @CurrentPartitionCount = PartitionCount
        FROM @tmpIndexesStatistics
        WHERE Selected = 1
        AND Completed = 0
        ORDER BY ID ASC

        -- Is the index a partition?
        IF @CurrentPartitionNumber IS NULL OR @CurrentPartitionCount = 1 BEGIN SET @CurrentIsPartition = 0 END ELSE BEGIN SET @CurrentIsPartition = 1 END

        -- Does the index exist?
        IF @CurrentIndexID IS NOT NULL AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          SET @CurrentCommand02 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand02 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          IF @CurrentIsPartition = 0 SET @CurrentCommand02 = @CurrentCommand02 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.objects objects ON indexes.[object_id] = objects.[object_id] INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] IN(''U'',''V'')' + CASE WHEN @MSShippedObjects = 'N' THEN ' AND objects.is_ms_shipped = 0' ELSE '' END + ' AND indexes.[type] IN(1,2,3,4,5,6,7) AND indexes.is_disabled = 0 AND indexes.is_hypothetical = 0 AND schemas.[schema_id] = @ParamSchemaID AND schemas.[name] = @ParamSchemaName AND objects.[object_id] = @ParamObjectID AND objects.[name] = @ParamObjectName AND objects.[type] = @ParamObjectType AND indexes.index_id = @ParamIndexID AND indexes.[name] = @ParamIndexName AND indexes.[type] = @ParamIndexType) BEGIN SET @ParamIndexExists = 1 END'
          IF @CurrentIsPartition = 1 SET @CurrentCommand02 = @CurrentCommand02 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.objects objects ON indexes.[object_id] = objects.[object_id] INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.partitions partitions ON indexes.[object_id] = partitions.[object_id] AND indexes.index_id = partitions.index_id WHERE objects.[type] IN(''U'',''V'')' + CASE WHEN @MSShippedObjects = 'N' THEN ' AND objects.is_ms_shipped = 0' ELSE '' END + ' AND indexes.[type] IN(1,2,3,4,5,6,7) AND indexes.is_disabled = 0 AND indexes.is_hypothetical = 0 AND schemas.[schema_id] = @ParamSchemaID AND schemas.[name] = @ParamSchemaName AND objects.[object_id] = @ParamObjectID AND objects.[name] = @ParamObjectName AND objects.[type] = @ParamObjectType AND indexes.index_id = @ParamIndexID AND indexes.[name] = @ParamIndexName AND indexes.[type] = @ParamIndexType AND partitions.partition_id = @ParamPartitionID AND partitions.partition_number = @ParamPartitionNumber) BEGIN SET @ParamIndexExists = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand02, @params = N'@ParamSchemaID int, @ParamSchemaName sysname, @ParamObjectID int, @ParamObjectName sysname, @ParamObjectType sysname, @ParamIndexID int, @ParamIndexName sysname, @ParamIndexType int, @ParamPartitionID bigint, @ParamPartitionNumber int, @ParamIndexExists bit OUTPUT', @ParamSchemaID = @CurrentSchemaID, @ParamSchemaName = @CurrentSchemaName, @ParamObjectID = @CurrentObjectID, @ParamObjectName = @CurrentObjectName, @ParamObjectType = @CurrentObjectType, @ParamIndexID = @CurrentIndexID, @ParamIndexName = @CurrentIndexName, @ParamIndexType = @CurrentIndexType, @ParamPartitionID = @CurrentPartitionID, @ParamPartitionNumber = @CurrentPartitionNumber, @ParamIndexExists = @CurrentIndexExists OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentIndexExists IS NULL SET @CurrentIndexExists = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if the index exists.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
          IF @CurrentIndexExists = 0 GOTO NoAction
        END

        -- Does the statistics exist?
        IF @CurrentStatisticsID IS NOT NULL AND @UpdateStatistics IS NOT NULL
        BEGIN
          SET @CurrentCommand03 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand03 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand03 = @CurrentCommand03 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.stats stats INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.objects objects ON stats.[object_id] = objects.[object_id] INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.schemas schemas ON objects.[schema_id] = schemas.[schema_id] WHERE objects.[type] IN(''U'',''V'')' + CASE WHEN @MSShippedObjects = 'N' THEN ' AND objects.is_ms_shipped = 0' ELSE '' END + ' AND schemas.[schema_id] = @ParamSchemaID AND schemas.[name] = @ParamSchemaName AND objects.[object_id] = @ParamObjectID AND objects.[name] = @ParamObjectName AND objects.[type] = @ParamObjectType AND stats.stats_id = @ParamStatisticsID AND stats.[name] = @ParamStatisticsName) BEGIN SET @ParamStatisticsExists = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand03, @params = N'@ParamSchemaID int, @ParamSchemaName sysname, @ParamObjectID int, @ParamObjectName sysname, @ParamObjectType sysname, @ParamStatisticsID int, @ParamStatisticsName sysname, @ParamStatisticsExists bit OUTPUT', @ParamSchemaID = @CurrentSchemaID, @ParamSchemaName = @CurrentSchemaName, @ParamObjectID = @CurrentObjectID, @ParamObjectName = @CurrentObjectName, @ParamObjectType = @CurrentObjectType, @ParamStatisticsID = @CurrentStatisticsID, @ParamStatisticsName = @CurrentStatisticsName, @ParamStatisticsExists = @CurrentStatisticsExists OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentStatisticsExists IS NULL SET @CurrentStatisticsExists = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The statistics ' + QUOTENAME(@CurrentStatisticsName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if the statistics exists.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
          IF @CurrentStatisticsExists = 0 GOTO NoAction
        END

        -- Is one of the columns in the index an image, text or ntext data type?
        IF @CurrentIndexID IS NOT NULL AND @CurrentIndexType = 1 AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          SET @CurrentCommand04 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand04 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand04 = @CurrentCommand04 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.columns columns INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.types types ON columns.system_type_id = types.user_type_id WHERE columns.[object_id] = @ParamObjectID AND types.name IN(''image'',''text'',''ntext'')) BEGIN SET @ParamIsImageText = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand04, @params = N'@ParamObjectID int, @ParamIndexID int, @ParamIsImageText bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamIndexID = @CurrentIndexID, @ParamIsImageText = @CurrentIsImageText OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentIsImageText IS NULL SET @CurrentIsImageText = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if the index contains any image, text, or ntext data types.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Is one of the columns in the index an xml, varchar(max), nvarchar(max), varbinary(max) or large CLR data type?
        IF @CurrentIndexID IS NOT NULL AND @CurrentIndexType IN(1,2) AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          SET @CurrentCommand05 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand05 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          IF @CurrentIndexType = 1 SET @CurrentCommand05 = @CurrentCommand05 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.columns columns INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.types types ON columns.system_type_id = types.user_type_id OR (columns.user_type_id = types.user_type_id AND types.is_assembly_type = 1) WHERE columns.[object_id] = @ParamObjectID AND (types.name IN(''xml'') OR (types.name IN(''varchar'',''nvarchar'',''varbinary'') AND columns.max_length = -1) OR (types.is_assembly_type = 1 AND columns.max_length = -1))) BEGIN SET @ParamIsNewLOB = 1 END'
          IF @CurrentIndexType = 2 SET @CurrentCommand05 = @CurrentCommand05 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.index_columns index_columns INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.columns columns ON index_columns.[object_id] = columns.[object_id] AND index_columns.column_id = columns.column_id INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.types types ON columns.system_type_id = types.user_type_id OR (columns.user_type_id = types.user_type_id AND types.is_assembly_type = 1) WHERE index_columns.[object_id] = @ParamObjectID AND index_columns.index_id = @ParamIndexID AND (types.[name] IN(''xml'') OR (types.[name] IN(''varchar'',''nvarchar'',''varbinary'') AND columns.max_length = -1) OR (types.is_assembly_type = 1 AND columns.max_length = -1))) BEGIN SET @ParamIsNewLOB = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand05, @params = N'@ParamObjectID int, @ParamIndexID int, @ParamIsNewLOB bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamIndexID = @CurrentIndexID, @ParamIsNewLOB = @CurrentIsNewLOB OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentIsNewLOB IS NULL SET @CurrentIsNewLOB = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if the index contains any xml, varchar(max), nvarchar(max), varbinary(max), or large CLR data types.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Is one of the columns in the index a file stream column?
        IF @CurrentIndexID IS NOT NULL AND @CurrentIndexType = 1 AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          SET @CurrentCommand06 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand06 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand06 = @CurrentCommand06 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.columns columns WHERE columns.[object_id] = @ParamObjectID  AND columns.is_filestream = 1) BEGIN SET @ParamIsFileStream = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand06, @params = N'@ParamObjectID int, @ParamIndexID int, @ParamIsFileStream bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamIndexID = @CurrentIndexID, @ParamIsFileStream = @CurrentIsFileStream OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentIsFileStream IS NULL SET @CurrentIsFileStream = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if the index contains any file stream columns.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Is there a columnstore index on the table?
        IF @CurrentIndexID IS NOT NULL AND EXISTS(SELECT * FROM @ActionsPreferred) AND @Version >= 11
        BEGIN
          SET @CurrentCommand07 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand07 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand07 = @CurrentCommand07 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes WHERE indexes.[object_id] = @ParamObjectID AND [type] IN(5,6)) BEGIN SET @ParamIsColumnStore = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand07, @params = N'@ParamObjectID int, @ParamIsColumnStore bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamIsColumnStore = @CurrentIsColumnStore OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentIsColumnStore IS NULL SET @CurrentIsColumnStore = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if there is a columnstore index on the table.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Is Allow_Page_Locks set to On?
        IF @CurrentIndexID IS NOT NULL AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          SET @CurrentCommand08 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand08 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand08 = @CurrentCommand08 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes WHERE indexes.[object_id] = @ParamObjectID AND indexes.[index_id] = @ParamIndexID AND indexes.[allow_page_locks] = 1) BEGIN SET @ParamAllowPageLocks = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand08, @params = N'@ParamObjectID int, @ParamIndexID int, @ParamAllowPageLocks bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamIndexID = @CurrentIndexID, @ParamAllowPageLocks = @CurrentAllowPageLocks OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentAllowPageLocks IS NULL SET @CurrentAllowPageLocks = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if page locking is enabled on the index.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Is No_Recompute set to On?
        IF @CurrentStatisticsID IS NOT NULL AND @UpdateStatistics IS NOT NULL
        BEGIN
          SET @CurrentCommand09 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand09 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand09 = @CurrentCommand09 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.stats stats WHERE stats.[object_id] = @ParamObjectID AND stats.[stats_id] = @ParamStatisticsID AND stats.[no_recompute] = 1) BEGIN SET @ParamNoRecompute = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand09, @params = N'@ParamObjectID int, @ParamStatisticsID int, @ParamNoRecompute bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamStatisticsID = @CurrentStatisticsID, @ParamNoRecompute = @CurrentNoRecompute OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentNoRecompute IS NULL SET @CurrentNoRecompute = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The statistics ' + QUOTENAME(@CurrentStatisticsName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if automatic statistics update is enabled.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Has the data in the statistics been modified since the statistics was last updated?
        IF @CurrentStatisticsID IS NOT NULL AND @UpdateStatistics IS NOT NULL AND @OnlyModifiedStatistics = 'Y'
        BEGIN
          SET @CurrentCommand10 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand10 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          IF (@Version >= 10.504000 AND @Version < 11) OR @Version >= 11.03000
          BEGIN
            SET @CurrentCommand10 = @CurrentCommand10 + 'USE ' + QUOTENAME(@CurrentDatabaseName) + '; IF EXISTS(SELECT * FROM sys.dm_db_stats_properties (@ParamObjectID, @ParamStatisticsID) WHERE modification_counter > 0) BEGIN SET @ParamStatisticsModified = 1 END'
          END
          ELSE
          BEGIN
            SET @CurrentCommand10 = @CurrentCommand10 + 'IF EXISTS(SELECT * FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.sysindexes sysindexes WHERE sysindexes.[id] = @ParamObjectID AND sysindexes.[indid] = @ParamStatisticsID AND sysindexes.[rowmodctr] <> 0) BEGIN SET @ParamStatisticsModified = 1 END'
          END

          EXECUTE sp_executesql @statement = @CurrentCommand10, @params = N'@ParamObjectID int, @ParamStatisticsID int, @ParamStatisticsModified bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamStatisticsID = @CurrentStatisticsID, @ParamStatisticsModified = @CurrentStatisticsModified OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentStatisticsModified IS NULL SET @CurrentStatisticsModified = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The statistics ' + QUOTENAME(@CurrentStatisticsName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if any rows has been modified since the most recent statistics update.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Is the index on a read-only filegroup?
        IF @CurrentIndexID IS NOT NULL AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          SET @CurrentCommand11 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand11 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand11 = @CurrentCommand11 + 'IF EXISTS(SELECT * FROM (SELECT filegroups.data_space_id FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.destination_data_spaces destination_data_spaces ON indexes.data_space_id = destination_data_spaces.partition_scheme_id INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.filegroups filegroups ON destination_data_spaces.data_space_id = filegroups.data_space_id WHERE filegroups.is_read_only = 1 AND indexes.[object_id] = @ParamObjectID AND indexes.[index_id] = @ParamIndexID'
          IF @CurrentIsPartition = 1 SET @CurrentCommand11 = @CurrentCommand11 + ' AND destination_data_spaces.destination_id = @ParamPartitionNumber'
          SET @CurrentCommand11 = @CurrentCommand11 + ' UNION SELECT filegroups.data_space_id FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.indexes indexes INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.filegroups filegroups ON indexes.data_space_id = filegroups.data_space_id WHERE filegroups.is_read_only = 1 AND indexes.[object_id] = @ParamObjectID AND indexes.[index_id] = @ParamIndexID'
          IF @CurrentIndexType = 1 SET @CurrentCommand11 = @CurrentCommand11 + ' UNION SELECT filegroups.data_space_id FROM ' + QUOTENAME(@CurrentDatabaseName) + '.sys.tables tables INNER JOIN ' + QUOTENAME(@CurrentDatabaseName) + '.sys.filegroups filegroups ON tables.lob_data_space_id = filegroups.data_space_id WHERE filegroups.is_read_only = 1 AND tables.[object_id] = @ParamObjectID'
          SET @CurrentCommand11 = @CurrentCommand11 + ') ReadOnlyFileGroups) BEGIN SET @ParamOnReadOnlyFileGroup = 1 END'

          EXECUTE sp_executesql @statement = @CurrentCommand11, @params = N'@ParamObjectID int, @ParamIndexID int, @ParamPartitionNumber int, @ParamOnReadOnlyFileGroup bit OUTPUT', @ParamObjectID = @CurrentObjectID, @ParamIndexID = @CurrentIndexID, @ParamPartitionNumber = @CurrentPartitionNumber, @ParamOnReadOnlyFileGroup = @CurrentOnReadOnlyFileGroup OUTPUT
          SET @Error = @@ERROR
          IF @Error = 0 AND @CurrentOnReadOnlyFileGroup IS NULL SET @CurrentOnReadOnlyFileGroup = 0
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. It could not be checked if the index is on a read-only filegroup.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Is the index fragmented?
        IF @CurrentIndexID IS NOT NULL
        AND @CurrentOnReadOnlyFileGroup = 0
        AND EXISTS(SELECT * FROM @ActionsPreferred)
        AND (EXISTS(SELECT [Priority], [Action], COUNT(*) FROM @ActionsPreferred GROUP BY [Priority], [Action] HAVING COUNT(*) <> 3) OR @PageCountLevel > 0)
        BEGIN
          SET @CurrentCommand12 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand12 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand12 = @CurrentCommand12 + 'SELECT @ParamFragmentationLevel = MAX(avg_fragmentation_in_percent), @ParamPageCount = SUM(page_count) FROM sys.dm_db_index_physical_stats(@ParamDatabaseID, @ParamObjectID, @ParamIndexID, @ParamPartitionNumber, ''LIMITED'') WHERE alloc_unit_type_desc = ''IN_ROW_DATA'' AND index_level = 0'

          EXECUTE sp_executesql @statement = @CurrentCommand12, @params = N'@ParamDatabaseID int, @ParamObjectID int, @ParamIndexID int, @ParamPartitionNumber int, @ParamFragmentationLevel float OUTPUT, @ParamPageCount bigint OUTPUT', @ParamDatabaseID = @CurrentDatabaseID, @ParamObjectID = @CurrentObjectID, @ParamIndexID = @CurrentIndexID, @ParamPartitionNumber = @CurrentPartitionNumber, @ParamFragmentationLevel = @CurrentFragmentationLevel OUTPUT, @ParamPageCount = @CurrentPageCount OUTPUT
          SET @Error = @@ERROR
          IF @Error = 1222
          BEGIN
            SET @ErrorMessage = 'The index ' + QUOTENAME(@CurrentIndexName) + ' on the object ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' is locked. The size and fragmentation of the index could not be checked.' + CHAR(13) + CHAR(10) + ' '
            SET @ErrorMessage = REPLACE(@ErrorMessage,'%','%%')
            RAISERROR(@ErrorMessage,16,1) WITH NOWAIT
          END
          IF @Error <> 0
          BEGIN
            SET @ReturnCode = @Error
            GOTO NoAction
          END
        END

        -- Select fragmentation group
        IF @CurrentIndexID IS NOT NULL AND @CurrentOnReadOnlyFileGroup = 0 AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          SET @CurrentFragmentationGroup = CASE
          WHEN @CurrentFragmentationLevel >= @FragmentationLevel2 THEN 'High'
          WHEN @CurrentFragmentationLevel >= @FragmentationLevel1 AND @CurrentFragmentationLevel < @FragmentationLevel2 THEN 'Medium'
          WHEN @CurrentFragmentationLevel < @FragmentationLevel1 THEN 'Low'
          END
        END

        -- Which actions are allowed?
        IF @CurrentIndexID IS NOT NULL AND EXISTS(SELECT * FROM @ActionsPreferred)
        BEGIN
          IF @CurrentOnReadOnlyFileGroup = 0 AND @CurrentIndexType IN (1,2,3,4,5) AND (@CurrentIsMemoryOptimized = 0 OR @CurrentIsMemoryOptimized IS NULL) AND (@CurrentAllowPageLocks = 1 OR @CurrentIndexType = 5)
          BEGIN
            INSERT INTO @CurrentActionsAllowed ([Action])
            VALUES ('INDEX_REORGANIZE')
          END
          IF @CurrentOnReadOnlyFileGroup = 0 AND @CurrentIndexType IN (1,2,3,4,5) AND (@CurrentIsMemoryOptimized = 0 OR @CurrentIsMemoryOptimized IS NULL)
          BEGIN
            INSERT INTO @CurrentActionsAllowed ([Action])
            VALUES ('INDEX_REBUILD_OFFLINE')
          END
          IF @CurrentOnReadOnlyFileGroup = 0
          AND (@CurrentIsMemoryOptimized = 0 OR @CurrentIsMemoryOptimized IS NULL)
          AND (@CurrentIsPartition = 0 OR @Version >= 12)
          AND ((@CurrentIndexType = 1 AND @CurrentIsImageText = 0 AND @CurrentIsNewLOB = 0)
          OR (@CurrentIndexType = 2 AND @CurrentIsNewLOB = 0)
          OR (@CurrentIndexType = 1 AND @CurrentIsImageText = 0 AND @CurrentIsFileStream = 0 AND @Version >= 11)
          OR (@CurrentIndexType = 2 AND @Version >= 11))
          AND (@CurrentIsColumnStore = 0 OR @Version < 11)
          AND SERVERPROPERTY('EngineEdition') IN (3,5)
          BEGIN
            INSERT INTO @CurrentActionsAllowed ([Action])
            VALUES ('INDEX_REBUILD_ONLINE')
          END
        END

        -- Decide action
        IF @CurrentIndexID IS NOT NULL
        AND EXISTS(SELECT * FROM @ActionsPreferred)
        AND (@CurrentPageCount >= @PageCountLevel OR @PageCountLevel = 0)
        BEGIN
          IF EXISTS(SELECT [Priority], [Action], COUNT(*) FROM @ActionsPreferred GROUP BY [Priority], [Action] HAVING COUNT(*) <> 3)
          BEGIN
            SELECT @CurrentAction = [Action]
            FROM @ActionsPreferred
            WHERE FragmentationGroup = @CurrentFragmentationGroup
            AND [Priority] = (SELECT MIN([Priority])
                              FROM @ActionsPreferred
                              WHERE FragmentationGroup = @CurrentFragmentationGroup
                              AND [Action] IN (SELECT [Action] FROM @CurrentActionsAllowed))
          END
          ELSE
          BEGIN
            SELECT @CurrentAction = [Action]
            FROM @ActionsPreferred
            WHERE [Priority] = (SELECT MIN([Priority])
                                FROM @ActionsPreferred
                                WHERE [Action] IN (SELECT [Action] FROM @CurrentActionsAllowed))
          END
        END

        -- Workaround for limitation in SQL Server, http://support.microsoft.com/kb/2292737
        IF @CurrentIndexID IS NOT NULL
        BEGIN
          SET @CurrentMaxDOP = @MaxDOP
          IF @CurrentAction = 'INDEX_REBUILD_ONLINE' AND @CurrentAllowPageLocks = 0
          BEGIN
            SET @CurrentMaxDOP = 1
          END
        END

        -- Update statistics?
        IF @CurrentStatisticsID IS NOT NULL
        AND ((@UpdateStatistics = 'ALL' AND (@CurrentIndexType IN (1,2,3,4,7) OR @CurrentIndexID IS NULL)) OR (@UpdateStatistics = 'INDEX' AND @CurrentIndexID IS NOT NULL AND @CurrentIndexType IN (1,2,3,4,7)) OR (@UpdateStatistics = 'COLUMNS' AND @CurrentIndexID IS NULL))
        AND (@CurrentStatisticsModified = 1 OR @OnlyModifiedStatistics = 'N' OR @CurrentIsMemoryOptimized = 1)
        AND ((@CurrentIsPartition = 0 AND (@CurrentAction NOT IN('INDEX_REBUILD_ONLINE','INDEX_REBUILD_OFFLINE') OR @CurrentAction IS NULL)) OR (@CurrentIsPartition = 1 AND @CurrentPartitionNumber = @CurrentPartitionCount))
        BEGIN
          SET @CurrentUpdateStatistics = 'Y'
        END
        ELSE
        BEGIN
          SET @CurrentUpdateStatistics = 'N'
        END

        SET @CurrentStatisticsSample = @StatisticsSample
        SET @CurrentStatisticsResample = @StatisticsResample

        -- Memory-optimized tables only supports FULLSCAN and RESAMPLE in SQL Server 2014
        IF @CurrentIsMemoryOptimized = 1 AND @Version >= 12 AND @Version < 13 AND (@CurrentStatisticsSample <> 100 OR @CurrentStatisticsSample IS NULL)
        BEGIN
          SET @CurrentStatisticsSample = NULL
          SET @CurrentStatisticsResample = 'Y'
        END

        -- Create comment
        IF @CurrentIndexID IS NOT NULL
        BEGIN
          SET @CurrentComment = 'ObjectType: ' + CASE WHEN @CurrentObjectType = 'U' THEN 'Table' WHEN @CurrentObjectType = 'V' THEN 'View' ELSE 'N/A' END + ', '
          SET @CurrentComment = @CurrentComment + 'IndexType: ' + CASE WHEN @CurrentIndexType = 1 THEN 'Clustered' WHEN @CurrentIndexType = 2 THEN 'NonClustered' WHEN @CurrentIndexType = 3 THEN 'XML' WHEN @CurrentIndexType = 4 THEN 'Spatial' WHEN @CurrentIndexType = 5 THEN 'Clustered Columnstore' WHEN @CurrentIndexType = 6 THEN 'NonClustered Columnstore' WHEN @CurrentIndexType = 7 THEN 'NonClustered Hash' ELSE 'N/A' END + ', '
          SET @CurrentComment = @CurrentComment + 'ImageText: ' + CASE WHEN @CurrentIsImageText = 1 THEN 'Yes' WHEN @CurrentIsImageText = 0 THEN 'No' ELSE 'N/A' END + ', '
          SET @CurrentComment = @CurrentComment + 'NewLOB: ' + CASE WHEN @CurrentIsNewLOB = 1 THEN 'Yes' WHEN @CurrentIsNewLOB = 0 THEN 'No' ELSE 'N/A' END + ', '
          SET @CurrentComment = @CurrentComment + 'FileStream: ' + CASE WHEN @CurrentIsFileStream = 1 THEN 'Yes' WHEN @CurrentIsFileStream = 0 THEN 'No' ELSE 'N/A' END + ', '
          IF @Version >= 11 SET @CurrentComment = @CurrentComment + 'ColumnStore: ' + CASE WHEN @CurrentIsColumnStore = 1 THEN 'Yes' WHEN @CurrentIsColumnStore = 0 THEN 'No' ELSE 'N/A' END + ', '
          SET @CurrentComment = @CurrentComment + 'AllowPageLocks: ' + CASE WHEN @CurrentAllowPageLocks = 1 THEN 'Yes' WHEN @CurrentAllowPageLocks = 0 THEN 'No' ELSE 'N/A' END + ', '
          SET @CurrentComment = @CurrentComment + 'PageCount: ' + ISNULL(CAST(@CurrentPageCount AS nvarchar),'N/A') + ', '
          SET @CurrentComment = @CurrentComment + 'Fragmentation: ' + ISNULL(CAST(@CurrentFragmentationLevel AS nvarchar),'N/A')
        END

        IF @CurrentIndexID IS NOT NULL AND (@CurrentPageCount IS NOT NULL OR @CurrentFragmentationLevel IS NOT NULL)
        BEGIN
        SET @CurrentExtendedInfo = (SELECT *
                                    FROM (SELECT CAST(@CurrentPageCount AS nvarchar) AS [PageCount],
                                                 CAST(@CurrentFragmentationLevel AS nvarchar) AS Fragmentation
                                    ) ExtendedInfo FOR XML AUTO, ELEMENTS)
        END

        IF @CurrentIndexID IS NOT NULL AND @CurrentAction IS NOT NULL AND (GETDATE() < DATEADD(ss,@TimeLimit,@StartTime) OR @TimeLimit IS NULL)
        BEGIN
          SET @CurrentCommandType13 = 'ALTER_INDEX'

          SET @CurrentCommand13 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand13 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand13 = @CurrentCommand13 + 'ALTER INDEX ' + QUOTENAME(@CurrentIndexName) + ' ON ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName)

          IF @CurrentAction IN('INDEX_REBUILD_ONLINE','INDEX_REBUILD_OFFLINE')
          BEGIN
            SET @CurrentCommand13 = @CurrentCommand13 + ' REBUILD'
            IF @CurrentIsPartition = 1 SET @CurrentCommand13 = @CurrentCommand13 + ' PARTITION = ' + CAST(@CurrentPartitionNumber AS nvarchar)
            SET @CurrentCommand13 = @CurrentCommand13 + ' WITH ('
            IF @SortInTempdb = 'Y' AND @CurrentIndexType IN(1,2,3,4) SET @CurrentCommand13 = @CurrentCommand13 + 'SORT_IN_TEMPDB = ON'
            IF @SortInTempdb = 'N' AND @CurrentIndexType IN(1,2,3,4) SET @CurrentCommand13 = @CurrentCommand13 + 'SORT_IN_TEMPDB = OFF'
            IF @CurrentIndexType IN(1,2,3,4) AND (@CurrentIsPartition = 0 OR @Version >= 12) SET @CurrentCommand13 = @CurrentCommand13 + ', '
            IF @CurrentAction = 'INDEX_REBUILD_ONLINE' AND (@CurrentIsPartition = 0 OR @Version >= 12) SET @CurrentCommand13 = @CurrentCommand13 + 'ONLINE = ON'
            IF @CurrentAction = 'INDEX_REBUILD_ONLINE' AND @WaitAtLowPriorityMaxDuration IS NOT NULL SET @CurrentCommand13 = @CurrentCommand13 + ' (WAIT_AT_LOW_PRIORITY (MAX_DURATION = ' + CAST(@WaitAtLowPriorityMaxDuration AS nvarchar) + ', ABORT_AFTER_WAIT = ' + UPPER(@WaitAtLowPriorityAbortAfterWait) + '))'
            IF @CurrentAction = 'INDEX_REBUILD_OFFLINE' AND (@CurrentIsPartition = 0 OR @Version >= 12) SET @CurrentCommand13 = @CurrentCommand13 + 'ONLINE = OFF'
            IF @CurrentMaxDOP IS NOT NULL SET @CurrentCommand13 = @CurrentCommand13 + ', MAXDOP = ' + CAST(@CurrentMaxDOP AS nvarchar)
            IF @FillFactor IS NOT NULL AND @CurrentIsPartition = 0 AND @CurrentIndexType IN(1,2,3,4) SET @CurrentCommand13 = @CurrentCommand13 + ', FILLFACTOR = ' + CAST(@FillFactor AS nvarchar)
            IF @PadIndex = 'Y' AND @CurrentIsPartition = 0 AND @CurrentIndexType IN(1,2,3,4) SET @CurrentCommand13 = @CurrentCommand13 + ', PAD_INDEX = ON'
            IF @PadIndex = 'N' AND @CurrentIsPartition = 0 AND @CurrentIndexType IN(1,2,3,4) SET @CurrentCommand13 = @CurrentCommand13 + ', PAD_INDEX = OFF'
            SET @CurrentCommand13 = @CurrentCommand13 + ')'
          END

          IF @CurrentAction IN('INDEX_REORGANIZE')
          BEGIN
            SET @CurrentCommand13 = @CurrentCommand13 + ' REORGANIZE'
            IF @CurrentIsPartition = 1 SET @CurrentCommand13 = @CurrentCommand13 + ' PARTITION = ' + CAST(@CurrentPartitionNumber AS nvarchar)
            SET @CurrentCommand13 = @CurrentCommand13 + ' WITH ('
            IF @LOBCompaction = 'Y' SET @CurrentCommand13 = @CurrentCommand13 + 'LOB_COMPACTION = ON'
            IF @LOBCompaction = 'N' SET @CurrentCommand13 = @CurrentCommand13 + 'LOB_COMPACTION = OFF'
            SET @CurrentCommand13 = @CurrentCommand13 + ')'
          END

          EXECUTE @CurrentCommandOutput13 = [dbo].[CommandExecute] @Command = @CurrentCommand13, @CommandType = @CurrentCommandType13, @Mode = 2, @Comment = @CurrentComment, @DatabaseName = @CurrentDatabaseName, @SchemaName = @CurrentSchemaName, @ObjectName = @CurrentObjectName, @ObjectType = @CurrentObjectType, @IndexName = @CurrentIndexName, @IndexType = @CurrentIndexType, @PartitionNumber = @CurrentPartitionNumber, @ExtendedInfo = @CurrentExtendedInfo, @LogToTable = @LogToTable, @Execute = @Execute
          SET @Error = @@ERROR
          IF @Error <> 0 SET @CurrentCommandOutput13 = @Error
          IF @CurrentCommandOutput13 <> 0 SET @ReturnCode = @CurrentCommandOutput13

          IF @Delay > 0
          BEGIN
            SET @CurrentDelay = DATEADD(ss,@Delay,'1900-01-01')
            WAITFOR DELAY @CurrentDelay
          END
        END

        IF @CurrentStatisticsID IS NOT NULL AND @CurrentUpdateStatistics = 'Y' AND (GETDATE() < DATEADD(ss,@TimeLimit,@StartTime) OR @TimeLimit IS NULL)
        BEGIN
          SET @CurrentCommandType14 = 'UPDATE_STATISTICS'

          SET @CurrentCommand14 = ''
          IF @LockTimeout IS NOT NULL SET @CurrentCommand14 = 'SET LOCK_TIMEOUT ' + CAST(@LockTimeout * 1000 AS nvarchar) + '; '
          SET @CurrentCommand14 = @CurrentCommand14 + 'UPDATE STATISTICS ' + QUOTENAME(@CurrentDatabaseName) + '.' + QUOTENAME(@CurrentSchemaName) + '.' + QUOTENAME(@CurrentObjectName) + ' ' + QUOTENAME(@CurrentStatisticsName)
          IF @CurrentStatisticsSample IS NOT NULL OR @CurrentStatisticsResample = 'Y' OR @CurrentNoRecompute = 1 SET @CurrentCommand14 = @CurrentCommand14 + ' WITH'
          IF @CurrentStatisticsSample = 100 SET @CurrentCommand14 = @CurrentCommand14 + ' FULLSCAN'
          IF @CurrentStatisticsSample IS NOT NULL AND @CurrentStatisticsSample <> 100 SET @CurrentCommand14 = @CurrentCommand14 + ' SAMPLE ' + CAST(@CurrentStatisticsSample AS nvarchar) + ' PERCENT'
          IF @CurrentStatisticsResample = 'Y' SET @CurrentCommand14 = @CurrentCommand14 + ' RESAMPLE'
          IF (@CurrentStatisticsSample IS NOT NULL OR @CurrentStatisticsResample = 'Y') AND @CurrentNoRecompute = 1 SET @CurrentCommand14 = @CurrentCommand14 + ','
          IF @CurrentNoRecompute = 1 SET @CurrentCommand14 = @CurrentCommand14 + ' NORECOMPUTE'

          EXECUTE @CurrentCommandOutput14 = [dbo].[CommandExecute] @Command = @CurrentCommand14, @CommandType = @CurrentCommandType14, @Mode = 2, @DatabaseName = @CurrentDatabaseName, @SchemaName = @CurrentSchemaName, @ObjectName = @CurrentObjectName, @ObjectType = @CurrentObjectType, @IndexName = @CurrentIndexName, @IndexType = @CurrentIndexType, @StatisticsName = @CurrentStatisticsName, @LogToTable = @LogToTable, @Execute = @Execute
          SET @Error = @@ERROR
          IF @Error <> 0 SET @CurrentCommandOutput14 = @Error
          IF @CurrentCommandOutput14 <> 0 SET @ReturnCode = @CurrentCommandOutput14
        END

        NoAction:

        -- Update that the index is completed
        UPDATE @tmpIndexesStatistics
        SET Completed = 1
        WHERE Selected = 1
        AND Completed = 0
        AND ID = @CurrentIxID

        -- Clear variables
        SET @CurrentCommand02 = NULL
        SET @CurrentCommand03 = NULL
        SET @CurrentCommand04 = NULL
        SET @CurrentCommand05 = NULL
        SET @CurrentCommand06 = NULL
        SET @CurrentCommand07 = NULL
        SET @CurrentCommand08 = NULL
        SET @CurrentCommand09 = NULL
        SET @CurrentCommand10 = NULL
        SET @CurrentCommand11 = NULL
        SET @CurrentCommand12 = NULL
        SET @CurrentCommand13 = NULL
        SET @CurrentCommand14 = NULL

        SET @CurrentCommandOutput13 = NULL
        SET @CurrentCommandOutput14 = NULL

        SET @CurrentCommandType13 = NULL
        SET @CurrentCommandType14 = NULL

        SET @CurrentIxID = NULL
        SET @CurrentSchemaID = NULL
        SET @CurrentSchemaName = NULL
        SET @CurrentObjectID = NULL
        SET @CurrentObjectName = NULL
        SET @CurrentObjectType = NULL
        SET @CurrentIsMemoryOptimized = NULL
        SET @CurrentIndexID = NULL
        SET @CurrentIndexName = NULL
        SET @CurrentIndexType = NULL
        SET @CurrentStatisticsID = NULL
        SET @CurrentStatisticsName = NULL
        SET @CurrentPartitionID = NULL
        SET @CurrentPartitionNumber = NULL
        SET @CurrentPartitionCount = NULL
        SET @CurrentIsPartition = NULL
        SET @CurrentIndexExists = NULL
        SET @CurrentStatisticsExists = NULL
        SET @CurrentIsImageText = NULL
        SET @CurrentIsNewLOB = NULL
        SET @CurrentIsFileStream = NULL
        SET @CurrentIsColumnStore = NULL
        SET @CurrentAllowPageLocks = NULL
        SET @CurrentNoRecompute = NULL
        SET @CurrentStatisticsModified = NULL
        SET @CurrentOnReadOnlyFileGroup = NULL
        SET @CurrentFragmentationLevel = NULL
        SET @CurrentPageCount = NULL
        SET @CurrentFragmentationGroup = NULL
        SET @CurrentAction = NULL
        SET @CurrentMaxDOP = NULL
        SET @CurrentUpdateStatistics = NULL
        SET @CurrentStatisticsSample = NULL
        SET @CurrentStatisticsResample = NULL
        SET @CurrentComment = NULL
        SET @CurrentExtendedInfo = NULL

        DELETE FROM @CurrentActionsAllowed

      END

    END

    -- Update that the database is completed
    UPDATE @tmpDatabases
    SET Completed = 1
    WHERE Selected = 1
    AND Completed = 0
    AND ID = @CurrentDBID

    -- Clear variables
    SET @CurrentDBID = NULL
    SET @CurrentDatabaseID = NULL
    SET @CurrentDatabaseName = NULL
    SET @CurrentIsDatabaseAccessible = NULL
    SET @CurrentAvailabilityGroup = NULL
    SET @CurrentAvailabilityGroupRole = NULL
    SET @CurrentDatabaseMirroringRole = NULL
    SET @CurrentIsReadOnly = NULL

    SET @CurrentCommand01 = NULL

    DELETE FROM @tmpIndexesStatistics

  END

  ----------------------------------------------------------------------------------------------------
  --// Log completing information                                                                 //--
  ----------------------------------------------------------------------------------------------------

  Logging:
  SET @EndMessage = 'Date and time: ' + CONVERT(nvarchar,GETDATE(),120)
  SET @EndMessage = REPLACE(@EndMessage,'%','%%')
  RAISERROR(@EndMessage,10,1) WITH NOWAIT

  IF @ReturnCode <> 0
  BEGIN
    RETURN @ReturnCode
  END

  ----------------------------------------------------------------------------------------------------

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@Actions].[Action]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@Databases]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@FragmentationLow]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@FragmentationMedium]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@FragmentationHigh]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@FragmentationLevel1]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@FragmentationLevel2]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@PageCountLevel]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SortInTempdb]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@MaxDOP]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@FillFactor]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@PadIndex]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@LOBCompaction]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@UpdateStatistics]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@OnlyModifiedStatistics]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@StatisticsSample]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@StatisticsResample]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@PartitionLevel]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@MSShippedObjects]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@Indexes]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@TimeLimit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@Delay]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@WaitAtLowPriorityMaxDuration]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@WaitAtLowPriorityAbortAfterWait]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@AvailabilityGroups]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@LockTimeout]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@LogToTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@Execute]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases1].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases2].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[DatabaseItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[Completed]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[DatabaseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[AvailabilityGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups1].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups2].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups3].[AvailabilityGroupItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups4].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups4].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabasesAvailabilityGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabasesAvailabilityGroups].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups].[AvailabilityGroupName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes1].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes1].[IndexItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes2].[IndexItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes2].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes3].[IndexItem]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes3].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[Selected]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE4].[FragmentationLow].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@ActionsPreferred].[FragmentationGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@ActionsPreferred].[Priority]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@ActionsPreferred].[Action]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE4].[FragmentationLow].[StartPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE4].[FragmentationLow].[Action]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE5].[FragmentationMedium].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE5].[FragmentationMedium].[StartPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE5].[FragmentationMedium].[Action]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE6].[FragmentationHigh].[EndPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE6].[FragmentationHigh].[StartPosition]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[CTE6].[FragmentationHigh].[Action]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@ActionsPreferred].[Action]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@ActionsPreferred].[FragmentationGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[IndexName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpDatabases].[ID]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[SchemaID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ObjectID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ObjectType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IsMemoryOptimized]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IndexID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IndexType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[StatisticsID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[StatisticsName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[PartitionID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[PartitionNumber]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[PartitionCount]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[Completed]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[StatisticsName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@SelectedIndexes].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[Selected]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[Completed]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@ActionsPreferred].[Priority]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@CurrentActionsAllowed].[Action]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[IndexOptimize].[@CurrentActionsAllowed].[Action]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Command]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@CommandType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Comment]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ObjectName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ObjectType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@IndexName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@IndexType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@PartitionNumber]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@ExtendedInfo]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@LogToTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@Execute]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[CommandExecute].[@StatisticsName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@tmpDatabases]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabases].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabases].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabases].[DatabaseType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabases].[AvailabilityGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabases].[Selected]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabases].[Completed]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpAvailabilityGroups].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@tmpDatabasesAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabasesAvailabilityGroups].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpDatabasesAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[SchemaID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[SchemaName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ObjectID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ObjectName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[ObjectType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IsMemoryOptimized]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IndexID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IndexName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[IndexType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[StatisticsID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[StatisticsName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[PartitionID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[PartitionNumber]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[PartitionCount]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[Selected]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@tmpIndexesStatistics].[Completed]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@SelectedDatabases]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedDatabases].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedDatabases].[DatabaseType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedDatabases].[AvailabilityGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedDatabases].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups].[AvailabilityGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedAvailabilityGroups].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@SelectedIndexes]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedIndexes].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedIndexes].[SchemaName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedIndexes].[ObjectName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedIndexes].[IndexName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@SelectedIndexes].[Selected]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@Actions]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@Actions].[Action]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@ActionsPreferred]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@ActionsPreferred].[FragmentationGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@ActionsPreferred].[Priority]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@ActionsPreferred].[Action]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[@CurrentActionsAllowed]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[IndexOptimize].[@CurrentActionsAllowed].[Action]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE1].[Databases1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases1].[DatabaseItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE1].[Databases2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases2].[DatabaseItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE1].[Databases3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[DatabaseItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[DatabaseType]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[AvailabilityGroup]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE1].[Databases2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE1].[Databases4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[DatabaseName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[DatabaseType]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[DatabaseType]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[AvailabilityGroup]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[AvailabilityGroup]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE1].[Databases4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE1].[Databases3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups1].[AvailabilityGroupItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups2].[AvailabilityGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups3].[AvailabilityGroupItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups4].[AvailabilityGroupName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE2].[AvailabilityGroups3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE3].[Indexes1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes1].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes1].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes1].[IndexItem]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE3].[Indexes2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes2].[IndexItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes2].[Selected]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE3].[Indexes3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes3].[IndexItem]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes3].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes2].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE3].[Indexes4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[DatabaseName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[SchemaName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[ObjectName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[IndexName]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE3].[Indexes4].[Selected]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[IndexOptimize].[CTE3].[Indexes3].[Selected]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE4].[FragmentationLow]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE4].[FragmentationLow].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE4].[FragmentationLow].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE4].[FragmentationLow].[Action]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE5].[FragmentationMedium]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE5].[FragmentationMedium].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE5].[FragmentationMedium].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE5].[FragmentationMedium].[Action]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[IndexOptimize].[CTE6].[FragmentationHigh]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE6].[FragmentationHigh].[StartPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE6].[FragmentationHigh].[EndPosition]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[IndexOptimize].[CTE6].[FragmentationHigh].[Action]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@Databases]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@FragmentationLow]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@FragmentationMedium]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['INDEX_REORGANIZE,INDEX_REBUILD_ONLINE,INDEX_REBUILD_OFFLINE']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@FragmentationHigh]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['INDEX_REBUILD_ONLINE,INDEX_REBUILD_OFFLINE']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@FragmentationLevel1]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[5]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@FragmentationLevel2]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[30]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@PageCountLevel]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1000]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@SortInTempdb]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@MaxDOP]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@FillFactor]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@PadIndex]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@LOBCompaction]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Y']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@UpdateStatistics]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@OnlyModifiedStatistics]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@StatisticsSample]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@StatisticsResample]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@PartitionLevel]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Y']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@MSShippedObjects]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@Indexes]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@TimeLimit]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@Delay]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@WaitAtLowPriorityMaxDuration]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@WaitAtLowPriorityAbortAfterWait]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@AvailabilityGroups]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@LockTimeout]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@LogToTable]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['N']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[IndexOptimize].[@Execute]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Y']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="98613" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[IndexOptimize]&#xD;&#xA;&#xD;&#xA;@Databases nvarchar(max) = NULL,&#xD;&#xA;@FragmentationLow nvarchar(max) = NULL,&#xD;&#xA;@FragmentationMedium nvarchar(max) = 'INDEX_REORGANIZE,INDEX_REBUILD_ONLINE,INDEX_REBUILD_OFFLINE',&#xD;&#xA;@FragmentationHigh nvarchar(max) = 'INDEX_REBUILD_ONLINE,INDEX_REBUILD_OFFLINE',&#xD;&#xA;@FragmentationLevel1 int = 5,&#xD;&#xA;@FragmentationLevel2 int = 30,&#xD;&#xA;@PageCountLevel int = 1000,&#xD;&#xA;@SortInTempdb nvarchar(max) = 'N',&#xD;&#xA;@MaxDOP int = NULL,&#xD;&#xA;@FillFactor int = NULL,&#xD;&#xA;@PadIndex nvarchar(max) = NULL,&#xD;&#xA;@LOBCompaction nvarchar(max) = 'Y',&#xD;&#xA;@UpdateStatistics nvarchar(max) = NULL,&#xD;&#xA;@OnlyModifiedStatistics nvarchar(max) = 'N',&#xD;&#xA;@StatisticsSample int = NULL,&#xD;&#xA;@StatisticsResample nvarchar(max) = 'N',&#xD;&#xA;@PartitionLevel nvarchar(max) = 'Y',&#xD;&#xA;@MSShippedObjects nvarchar(max) = 'N',&#xD;&#xA;@Indexes nvarchar(max) = NULL,&#xD;&#xA;@TimeLimit int = NULL,&#xD;&#xA;@Delay int = NULL,&#xD;&#xA;@WaitAtLowPriorityMaxDuration int = NULL,&#xD;&#xA;@WaitAtLowPriorityAbortAfterWait nvarchar(max) = NULL,&#xD;&#xA;@AvailabilityGroups nvarchar(max) = NULL,&#xD;&#xA;@LockTimeout int = NULL,&#xD;&#xA;@LogToTable nvarchar(max) = 'N',&#xD;&#xA;@Execute nvarchar(max) = 'Y'&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlQueue" Name="[dbo].[JobProcessingQueue]">
			<Property Name="IsActivationOn" Value="True" />
			<Property Name="MaxQueueReaders" Value="10" />
			<Relationship Name="ActivationProcedure">
				<Entry>
					<References Name="[Schedule].[usp_ProcessingQueueActivation]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[status]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[priority]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[queuing_order]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[conversation_group_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[conversation_handle]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[message_sequence_number]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[service_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="512" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[service_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[service_contract_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[service_contract_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[message_type_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[message_type_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[validation]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="2" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobProcessingQueue].[message_body]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varbinary]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="User">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlQueue" Name="[dbo].[JobRequestQueue]">
			<Property Name="IsActivationOn" Value="True" />
			<Property Name="MaxQueueReaders" Value="10" />
			<Relationship Name="ActivationProcedure">
				<Entry>
					<References Name="[Schedule].[usp_RequestQueueActivation]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[status]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[priority]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[queuing_order]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[conversation_group_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[conversation_handle]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[message_sequence_number]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[service_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="512" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[service_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[service_contract_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[service_contract_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[message_type_name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[message_type_id]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[validation]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="2" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[JobRequestQueue].[message_body]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varbinary]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="User">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[ListObjectDependentSSISPackages]">
			<Property Name="BodyScript">
				<Value><![CDATA[
    IF OBJECT_ID('DTSPackages') IS NOT NULL
        DROP TABLE DTSPackages;
 
    CREATE TABLE DTSPackages ( x XML );
    IF OBJECT_ID('tempdb..#DirectoryTree') IS NOT NULL
        DROP TABLE #DirectoryTree;
 
    CREATE TABLE #DirectoryTree
        (
          id INT IDENTITY(1, 1) ,
          subdirectory NVARCHAR(512) ,
          depth INT ,
          isfile BIT
        );
 
    INSERT  #DirectoryTree
            ( subdirectory ,
              depth ,
              isfile
            )
            EXEC master.sys.xp_dirtree @FolderPath, 1, 1;
 
    DECLARE @Path VARCHAR(100) ,
        @ID INT;
 
 
 
    SELECT TOP 1
            @Path = subdirectory ,
            @ID = id
    FROM    #DirectoryTree
    WHERE   isfile = 1
            AND subdirectory LIKE '%.dtsx'
    ORDER BY id;
 
 
 
 
 
    WHILE @Path IS NOT NULL
        BEGIN
            DECLARE @SQL VARCHAR(MAX) = 'INSERT DTSPackages
SELECT *
FROM OPENROWSET(BULK ''' + @FolderPath + '\' + @Path + ''',
   SINGLE_BLOB) AS x;';
    
            EXEC (@SQL);
            SET @Path = NULL;
            SELECT TOP 1
                    @Path = subdirectory ,
                    @ID = id
            FROM    #DirectoryTree
            WHERE   isfile = 1
                    AND subdirectory LIKE '%.dtsx'
                    AND id > @ID
            ORDER BY id;
        END;
      
    IF @ObjectType = 'Column'
        BEGIN
            WITH XMLNAMESPACES ('www.microsoft.com/SqlServer/Dts' AS DTS)
   SELECT   t.u.value('.','varchar(100)')
   FROM DTSPackages
   CROSS APPLY x.nodes('/DTS:Executable/DTS:Property[@DTS:Name="ObjectName"]')t(u)
   WHERE x.exist('//inputColumn[@name=sql:variable("@ObjectName")]') = 1
   OR x.exist('//externalMetadataColumn[@name=sql:variable("@ObjectName")]') = 1
   OR x.exist('//outputColumn[@name=sql:variable("@ObjectName")]') = 1
   OR x.exist('//DTS:Variable/DTS:VariableValue[contains(.,sql:variable("@ObjectName"))]')=1;
        END;
    
    IF @ObjectType = 'Table'
        BEGIN
            WITH XMLNAMESPACES ('www.microsoft.com/SqlServer/Dts' AS DTS,'www.microsoft.com/sqlserver/dts/tasks/sqltask' AS SQLTask)
   SELECT   t.u.value('.','varchar(100)')
   FROM DTSPackages
   CROSS APPLY x.nodes('/DTS:Executable/DTS:Property[@DTS:Name="ObjectName"]')t(u)
   WHERE
   x.exist('//SQLTask:SqlTaskData[contains(./@SQLTask:SqlStatementSource,sql:variable("@ObjectName"))]')=1
   OR x.exist('//property[@name="SqlCommand" and contains(.,sql:variable("@ObjectName"))]')=1
   OR x.exist('//DTS:Variable[@DTS:Name="Expression" and contains(.,sql:variable("@ObjectName"))]')=1
   OR x.exist('//DTS:Variable/DTS:VariableValue[contains(.,sql:variable("@ObjectName"))]')=1;
    
        END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ListObjectDependentSSISPackages].[@FolderPath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DTSPackages]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DTSPackages]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DTSPackages].[x]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[subdirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[depth]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[isfile]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ListObjectDependentSSISPackages].[@ObjectType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DTSPackages]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DTSPackages].[x]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[DTSPackages].[x]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DTSPackages]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[DTSPackages].[x]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[id]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[subdirectory]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="512" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[depth]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[ListObjectDependentSSISPackages].[#DirectoryTree].[isfile]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ListObjectDependentSSISPackages].[@FolderPath]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ListObjectDependentSSISPackages].[@ObjectName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="100" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ListObjectDependentSSISPackages].[@ObjectType]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2919" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROC ListObjectDependentSSISPackages&#xD;&#xA;    @FolderPath VARCHAR(1000) ,&#xD;&#xA;    @ObjectName VARCHAR(100) ,&#xD;&#xA;    @ObjectType VARCHAR(10)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlInlineTableValuedFunction" Name="[dbo].[make_parallel]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[make_parallel].[CTE1].[a].[x]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[make_parallel].[CTE1].[b].[x]" />
				</Entry>
			</Relationship>
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlComputedColumn" Name="[dbo].[make_parallel].[x]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[make_parallel].[CTE1].[a]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[make_parallel].[CTE1].[a].[x]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[make_parallel].[CTE1].[b]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[make_parallel].[CTE1].[b].[x]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ 
( 
    WITH 
    a(x) AS 
    ( 
        SELECT 
            a0.* 
        FROM 
        ( 
            VALUES 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), 
                (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1), (1) 
        ) AS a0(x) 
    ), 
    b(x) AS 
    ( 
        SELECT TOP(9223372036854775807) 
            1 
        FROM 
            a AS a1, 
            a AS a2, 
            a AS a3, 
            a AS a4 
        WHERE 
            a1.x % 2 = 0
    ) 
    SELECT 
        SUM(b1.x) AS x 
    FROM 
        b AS b1 
    HAVING 
        SUM(b1.x) IS NULL 
)]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="6833" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION dbo.make_parallel() &#xD;&#xA;RETURNS TABLE AS &#xD;&#xA;RETURN" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_CommandLog]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[CommandLog].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[CommandLog]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="4" />
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[PrintMax]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	-- Declare the variables
	DECLARE
			@nvcReversedData    NVARCHAR(MAX) ,
			@intLineBreakIndex  INT ,
			@intSearchLength    INT    = 4000;


	-- Print chunks of up to 4,000 bytes

	WHILE LEN (@inLargeText) > @intSearchLength
	BEGIN
			-- Find the last line break in the current chunk, if such exists

			SET @nvcReversedData       = LEFT (@inLargeText , @intSearchLength);
			SET @nvcReversedData       = REVERSE (@nvcReversedData);
			SET @intLineBreakIndex     = CHARINDEX (CHAR(10) + CHAR(13) , @nvcReversedData);

			-- Print the current chunk up to the last line break (or the whole chunk, if there is no line break)
			PRINT LEFT (@inLargeText , @intSearchLength - (CASE WHEN @intLineBreakIndex = 0 THEN 0 ELSE @intLineBreakIndex + 1 END));

			-- Trim the printed chunk
			SET @inLargeText = RIGHT (@inLargeText , LEN (@inLargeText) - @intSearchLength + (CASE WHEN @intLineBreakIndex = 0 THEN 0 ELSE @intLineBreakIndex - 1 END));

	END;

	-- Print the last chunk
	IF LEN (@inLargeText) > 0
			PRINT @inLargeText;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PrintMax].[@inLargeText]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[PrintMax].[@inLargeText]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="667" />
				<Property Name="Length" Value="1812" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- Script Name:     PrintMax&#xD;&#xA;-- Description:     The stored procedure created by this script prints a text of any size, even if the size is greater than 8,000 bytes,&#xD;&#xA;--                  which is the limit of the regular PRINT statement. It splits the large text into chunks of up to 4,000 bytes,&#xD;&#xA;--                  and then uses the regular PRINT statement. It searches for line breaks in the text,&#xD;&#xA;--                  and prefers the split to occur where there are line breaks, so that the output is more readbale.&#xD;&#xA;-- Author:          Guy Glantser, Madeira&#xD;&#xA;-- Last Updated On: 10/12/2011&#xD;&#xA;-- Fixed By Rimer Sharon On 10/7/12 : add CASE ON @intLineBreakIndex&#xD;&#xA;CREATE PROCEDURE [dbo].[PrintMax] &#xD;&#xA;(&#xD;&#xA;       @inLargeText AS NVARCHAR(MAX)&#xD;&#xA;)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[sp_Blitz]">
			<Property Name="BodyScript">
				<Value><![CDATA[
    SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	SET @VersionDate = '20160626'

	IF @Help = 1 PRINT '
	/*
	sp_Blitz from http://FirstResponderKit.org
	
	This script checks the health of your SQL Server and gives you a prioritized
	to-do list of the most urgent things you should consider fixing.

	To learn more, visit http://FirstResponderKit.org where you can download new
	versions for free, watch training videos on how it works, get more info on
	the findings, contribute your own code, and more.

	Known limitations of this version:
	 - Only Microsoft-supported versions of SQL Server. Sorry, 2005 and 2000.
	 - If a database name has a question mark in it, some tests will fail. Gotta
	   love that unsupported sp_MSforeachdb.
	 - If you have offline databases, sp_Blitz fails the first time you run it,
	   but does work the second time. (Hoo, boy, this will be fun to debug.)
      - @OutputServerName is not functional yet.

	Unknown limitations of this version:
	 - None.  (If we knew them, they would be known. Duh.)

     Changes in v53 - 2016/06/26
	  - BREAKING CHANGE: Standardized input & output parameters to be
         consistent across the entire First Responder Kit. This also means the old
         old output parameter @Version is no more, because we are switching to
         semantic versioning. 	 
	     https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/284
	 - BREAKING CHANGE: The CheckDate field datatype is now DATETIMEOFFSET. This
	   makes it easier to combine results from multiple servers into one table even
	   when servers are in different data centers, different time zones. More info:
	   https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit/issues/288

     Changes in v52 - 2016/06/02
	  - SQL Server 2016 compatibility. 2016 RTM ships with some questionable
	    database-level options like heaps in DWDiagnostics, target recovery
		time changed in the DW* databases, and l_certSignSmDetach as a new
		default sysadmin login, so ignoring those.
	  - If databases have an old compatibility level that does not support CTEs
	    then @CheckUserDatabaseObjects is set to 0 to avoid problems with
		current checks. Get on the current compat level, Grandpa.

     Changes in v51 - 2016/05/18
	  - Thomas Rushton added a check for dangerous third-party modules. (179) 
	    More info: https://support.microsoft.com/en-us/kb/2033238
      - New check for snapshot backups possibly freezing IO. Looking for 50GB+
	    backups that complete in under 60 seconds. (178)
      - If there are 50+ user databases, you have to turn on @BringThePain = 1
	    in order to do @CheckUserDatabaseObjects = 1. (Speeds up sp_Blitz on
		servers with hundreds or thousands of databases.)
      - Reprioritized a bunch of checks, like moving security warnings down to
         priority 230, so that you can use @IgnorePrioritiesAbove = 50 better.
      - Bug fixes.

     Changes in v50 - 2016/04/08
      - Fixed bug in check ID 2 that would fail on a database with multiple log
	    files, that also has not had a backup in two weeks.

    Changes in v49 - 2016/04/06
     - Amazon RDS compatibility, but to do that, we have to skip a bunch of checks.
	   RDS does not allow you to query MSDB, configure TempDB, make
	   server-level sp_configure settings, etc.

	For prior changes, see: http://www.BrentOzar.com/blitz/changelog/


	Parameter explanations:

	@CheckUserDatabaseObjects	1=review user databases for triggers, heaps, etc. Takes more time for more databases and objects.
	@CheckServerInfo			1=show server info like CPUs, memory, virtualization
	@CheckProcedureCache		1=top 20-50 resource-intensive cache plans and analyze them for common performance issues.
	@OutputProcedureCache		1=output the top 20-50 resource-intensive plans even if they did not trigger an alarm
	@CheckProcedureCacheFilter	''CPU'' | ''Reads'' | ''Duration'' | ''ExecCount''
	@OutputType					''TABLE''=table | ''COUNT''=row with number found | ''SCHEMA''=version and field list | ''NONE'' = none
	@IgnorePrioritiesBelow		50=ignore priorities below 50
	@IgnorePrioritiesAbove		50=ignore priorities above 50
	For the rest of the parameters, see http://www.brentozar.com/blitz/documentation for details.

    MIT License

	Copyright (c) 2016 Brent Ozar Unlimited

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.


	*/'
	ELSE IF @OutputType = 'SCHEMA'
	BEGIN
		SELECT FieldList = '[Priority] TINYINT, [FindingsGroup] VARCHAR(50), [Finding] VARCHAR(200), [DatabaseName] NVARCHAR(128), [URL] VARCHAR(200), [Details] NVARCHAR(4000), [QueryPlan] NVARCHAR(MAX), [QueryPlanFiltered] NVARCHAR(MAX), [CheckID] INT'

	END
	ELSE /* IF @OutputType = 'SCHEMA' */
	BEGIN

		/*
		We start by creating #BlitzResults. It's a temp table that will store all of
		the results from our checks. Throughout the rest of this stored procedure,
		we're running a series of checks looking for dangerous things inside the SQL
		Server. When we find a problem, we insert rows into #BlitzResults. At the
		end, we return these results to the end user.

		#BlitzResults has a CheckID field, but there's no Check table. As we do
		checks, we insert data into this table, and we manually put in the CheckID.
		For a list of checks, visit http://FirstResponderKit.org.
		*/
		DECLARE @StringToExecute NVARCHAR(4000)
			,@curr_tracefilename NVARCHAR(500)
			,@base_tracefilename NVARCHAR(500)
			,@indx int
			,@query_result_separator CHAR(1)
			,@EmailSubject NVARCHAR(255)
			,@EmailBody NVARCHAR(MAX)
			,@EmailAttachmentFilename NVARCHAR(255)
			,@ProductVersion NVARCHAR(128)
			,@ProductVersionMajor DECIMAL(10,2)
			,@ProductVersionMinor DECIMAL(10,2)
			,@CurrentName NVARCHAR(128)
			,@CurrentDefaultValue NVARCHAR(200)
			,@CurrentCheckID INT
			,@CurrentPriority INT
			,@CurrentFinding VARCHAR(200)
			,@CurrentURL VARCHAR(200)
			,@CurrentDetails NVARCHAR(4000)
			,@MSSinceStartup DECIMAL(38,0)
			,@CPUMSsinceStartup DECIMAL(38,0);

		IF OBJECT_ID('tempdb..#BlitzResults') IS NOT NULL
			DROP TABLE #BlitzResults;
		CREATE TABLE #BlitzResults
			(
			  ID INT IDENTITY(1, 1) ,
			  CheckID INT ,
			  DatabaseName NVARCHAR(128) ,
			  Priority TINYINT ,
			  FindingsGroup VARCHAR(50) ,
			  Finding VARCHAR(200) ,
			  URL VARCHAR(200) ,
			  Details NVARCHAR(4000) ,
			  QueryPlan [XML] NULL ,
			  QueryPlanFiltered [NVARCHAR](MAX) NULL
			);

		/*
		You can build your own table with a list of checks to skip. For example, you
		might have some databases that you don't care about, or some checks you don't
		want to run. Then, when you run sp_Blitz, you can specify these parameters:
		@SkipChecksDatabase = 'DBAtools',
		@SkipChecksSchema = 'dbo',
		@SkipChecksTable = 'BlitzChecksToSkip'
		Pass in the database, schema, and table that contains the list of checks you
		want to skip. This part of the code checks those parameters, gets the list,
		and then saves those in a temp table. As we run each check, we'll see if we
		need to skip it.

		Really anal-retentive users will note that the @SkipChecksServer parameter is
		not used. YET. We added that parameter in so that we could avoid changing the
		stored proc's surface area (interface) later.
		*/
		IF OBJECT_ID('tempdb..#SkipChecks') IS NOT NULL
			DROP TABLE #SkipChecks;
		CREATE TABLE #SkipChecks
			(
			  DatabaseName NVARCHAR(128) ,
			  CheckID INT ,
			  ServerName NVARCHAR(128)
			);
		CREATE CLUSTERED INDEX IX_CheckID_DatabaseName ON #SkipChecks(CheckID, DatabaseName);

		IF @SkipChecksTable IS NOT NULL
			AND @SkipChecksSchema IS NOT NULL
			AND @SkipChecksDatabase IS NOT NULL
			BEGIN
				SET @StringToExecute = 'INSERT INTO #SkipChecks(DatabaseName, CheckID, ServerName )
				SELECT DISTINCT DatabaseName, CheckID, ServerName
				FROM ' + QUOTENAME(@SkipChecksDatabase) + '.' + QUOTENAME(@SkipChecksSchema) + '.' + QUOTENAME(@SkipChecksTable)
					+ ' WHERE ServerName IS NULL OR ServerName = SERVERPROPERTY(''ServerName'');'
				EXEC(@StringToExecute)
			END

		IF NOT EXISTS ( SELECT  1
							FROM    #SkipChecks
							WHERE   DatabaseName IS NULL AND CheckID = 106 )
							AND (select convert(int,value_in_use) from sys.configurations where name = 'default trace enabled' ) = 1
			BEGIN
					select @curr_tracefilename = [path] from sys.traces where is_default = 1 ;
					set @curr_tracefilename = reverse(@curr_tracefilename);
					select @indx = patindex('%\%', @curr_tracefilename) ;
					set @curr_tracefilename = reverse(@curr_tracefilename) ;
					set @base_tracefilename = left( @curr_tracefilename,len(@curr_tracefilename) - @indx) + '\log.trc' ;
			END

		/* If the server has any databases on Antiques Roadshow, skip the checks that would break due to CTEs. */
		IF @CheckUserDatabaseObjects = 1 AND EXISTS(SELECT * FROM sys.databases WHERE compatibility_level < 90)
		BEGIN
			SET @CheckUserDatabaseObjects = 0;
			PRINT 'Databases with compatibility level < 90 found, so setting @CheckUserDatabaseObjects = 0.';
			PRINT 'The database-level checks rely on CTEs, which are not supported in SQL 2000 compat level databases.';
			PRINT 'Get with the cool kids and switch to a current compatibility level, Grandpa. To find the problems, run:';
			PRINT 'SELECT * FROM sys.databases WHERE compatibility_level < 90;';
		END


			/* If the server is Amazon RDS, skip checks that it doesn't allow */
		IF LEFT(CAST(SERVERPROPERTY('ComputerNamePhysicalNetBIOS') AS VARCHAR(8000)), 8) = 'EC2AMAZ-'
		   AND LEFT(CAST(SERVERPROPERTY('MachineName') AS VARCHAR(8000)), 8) = 'EC2AMAZ-'
		   AND LEFT(CAST(SERVERPROPERTY('ServerName') AS VARCHAR(8000)), 8) = 'EC2AMAZ-'
			BEGIN
						INSERT INTO #SkipChecks (CheckID) VALUES (6);
						INSERT INTO #SkipChecks (CheckID) VALUES (29);
						INSERT INTO #SkipChecks (CheckID) VALUES (30);
						INSERT INTO #SkipChecks (CheckID) VALUES (31);
						INSERT INTO #SkipChecks (CheckID) VALUES (40); /* TempDB only has one data file */
						INSERT INTO #SkipChecks (CheckID) VALUES (57);
						INSERT INTO #SkipChecks (CheckID) VALUES (59);
						INSERT INTO #SkipChecks (CheckID) VALUES (61);
						INSERT INTO #SkipChecks (CheckID) VALUES (62);
						INSERT INTO #SkipChecks (CheckID) VALUES (68);
						INSERT INTO #SkipChecks (CheckID) VALUES (69);
						INSERT INTO #SkipChecks (CheckID) VALUES (73);
						INSERT INTO #SkipChecks (CheckID) VALUES (79);
						INSERT INTO #SkipChecks (CheckID) VALUES (92);
						INSERT INTO #SkipChecks (CheckID) VALUES (94);
						INSERT INTO #SkipChecks (CheckID) VALUES (96);
						INSERT INTO #SkipChecks (CheckID) VALUES (98);
						INSERT INTO #SkipChecks (CheckID) VALUES (100); /* Remote DAC disabled */
						INSERT INTO #SkipChecks (CheckID) VALUES (123);
						INSERT INTO #SkipChecks (CheckID) VALUES (177);
			END /* Amazon RDS skipped checks */



		/*
		That's the end of the SkipChecks stuff.
		The next several tables are used by various checks later.
		*/
		IF OBJECT_ID('tempdb..#ConfigurationDefaults') IS NOT NULL
			DROP TABLE #ConfigurationDefaults;
		CREATE TABLE #ConfigurationDefaults
			(
			  name NVARCHAR(128) ,
			  DefaultValue BIGINT,
			  CheckID INT
			);

        IF OBJECT_ID ('tempdb..#Recompile') IS NOT NULL 
            DROP TABLE #Recompile; 
        CREATE TABLE #Recompile( 
            DBName varchar(200), 
            ProcName varchar(300), 
            RecompileFlag varchar(1),
            SPSchema varchar(50)
        );

		IF OBJECT_ID('tempdb..#DatabaseDefaults') IS NOT NULL
			DROP TABLE #DatabaseDefaults;
		CREATE TABLE #DatabaseDefaults
			(
				name NVARCHAR(128) ,
				DefaultValue NVARCHAR(200),
				CheckID INT,
		        Priority INT,
		        Finding VARCHAR(200),
		        URL VARCHAR(200),
		        Details NVARCHAR(4000)
			);



		IF OBJECT_ID('tempdb..#DBCCs') IS NOT NULL
			DROP TABLE #DBCCs;
		CREATE TABLE #DBCCs
			(
			  ID INT IDENTITY(1, 1)
					 PRIMARY KEY ,
			  ParentObject VARCHAR(255) ,
			  Object VARCHAR(255) ,
			  Field VARCHAR(255) ,
			  Value VARCHAR(255) ,
			  DbName NVARCHAR(128) NULL
			)


		IF OBJECT_ID('tempdb..#LogInfo2012') IS NOT NULL
			DROP TABLE #LogInfo2012;
		CREATE TABLE #LogInfo2012
			(
			  recoveryunitid INT ,
			  FileID SMALLINT ,
			  FileSize BIGINT ,
			  StartOffset BIGINT ,
			  FSeqNo BIGINT ,
			  [Status] TINYINT ,
			  Parity TINYINT ,
			  CreateLSN NUMERIC(38)
			);

		IF OBJECT_ID('tempdb..#LogInfo') IS NOT NULL
			DROP TABLE #LogInfo;
		CREATE TABLE #LogInfo
			(
			  FileID SMALLINT ,
			  FileSize BIGINT ,
			  StartOffset BIGINT ,
			  FSeqNo BIGINT ,
			  [Status] TINYINT ,
			  Parity TINYINT ,
			  CreateLSN NUMERIC(38)
			);

		IF OBJECT_ID('tempdb..#partdb') IS NOT NULL
			DROP TABLE #partdb;
		CREATE TABLE #partdb
			(
			  dbname NVARCHAR(128) ,
			  objectname NVARCHAR(200) ,
			  type_desc NVARCHAR(128)
			)

		IF OBJECT_ID('tempdb..#TraceStatus') IS NOT NULL
			DROP TABLE #TraceStatus;
		CREATE TABLE #TraceStatus
			(
			  TraceFlag VARCHAR(10) ,
			  status BIT ,
			  Global BIT ,
			  Session BIT
			);

		IF OBJECT_ID('tempdb..#driveInfo') IS NOT NULL
			DROP TABLE #driveInfo;
		CREATE TABLE #driveInfo
			(
			  drive NVARCHAR ,
			  SIZE DECIMAL(18, 2)
			)


		IF OBJECT_ID('tempdb..#dm_exec_query_stats') IS NOT NULL
			DROP TABLE #dm_exec_query_stats;
		CREATE TABLE #dm_exec_query_stats
			(
			  [id] [int] NOT NULL
						 IDENTITY(1, 1) ,
			  [sql_handle] [varbinary](64) NOT NULL ,
			  [statement_start_offset] [int] NOT NULL ,
			  [statement_end_offset] [int] NOT NULL ,
			  [plan_generation_num] [bigint] NOT NULL ,
			  [plan_handle] [varbinary](64) NOT NULL ,
			  [creation_time] [datetime] NOT NULL ,
			  [last_execution_time] [datetime] NOT NULL ,
			  [execution_count] [bigint] NOT NULL ,
			  [total_worker_time] [bigint] NOT NULL ,
			  [last_worker_time] [bigint] NOT NULL ,
			  [min_worker_time] [bigint] NOT NULL ,
			  [max_worker_time] [bigint] NOT NULL ,
			  [total_physical_reads] [bigint] NOT NULL ,
			  [last_physical_reads] [bigint] NOT NULL ,
			  [min_physical_reads] [bigint] NOT NULL ,
			  [max_physical_reads] [bigint] NOT NULL ,
			  [total_logical_writes] [bigint] NOT NULL ,
			  [last_logical_writes] [bigint] NOT NULL ,
			  [min_logical_writes] [bigint] NOT NULL ,
			  [max_logical_writes] [bigint] NOT NULL ,
			  [total_logical_reads] [bigint] NOT NULL ,
			  [last_logical_reads] [bigint] NOT NULL ,
			  [min_logical_reads] [bigint] NOT NULL ,
			  [max_logical_reads] [bigint] NOT NULL ,
			  [total_clr_time] [bigint] NOT NULL ,
			  [last_clr_time] [bigint] NOT NULL ,
			  [min_clr_time] [bigint] NOT NULL ,
			  [max_clr_time] [bigint] NOT NULL ,
			  [total_elapsed_time] [bigint] NOT NULL ,
			  [last_elapsed_time] [bigint] NOT NULL ,
			  [min_elapsed_time] [bigint] NOT NULL ,
			  [max_elapsed_time] [bigint] NOT NULL ,
			  [query_hash] [binary](8) NULL ,
			  [query_plan_hash] [binary](8) NULL ,
			  [query_plan] [xml] NULL ,
			  [query_plan_filtered] [nvarchar](MAX) NULL ,
			  [text] [nvarchar](MAX) COLLATE SQL_Latin1_General_CP1_CI_AS
									 NULL ,
			  [text_filtered] [nvarchar](MAX) COLLATE SQL_Latin1_General_CP1_CI_AS
											  NULL
			)

        /* Used for the default trace checks. */
        DECLARE @TracePath NVARCHAR(256);
        SELECT @TracePath=CAST(value as NVARCHAR(256))
            FROM sys.fn_trace_getinfo(1)
            WHERE traceid=1 AND property=2;
        
        SELECT @MSSinceStartup = DATEDIFF(MINUTE, create_date, CURRENT_TIMESTAMP)
            FROM    sys.databases
            WHERE   name='tempdb';

		SET @MSSinceStartup = @MSSinceStartup * 60000;

		SELECT @CPUMSsinceStartup = @MSSinceStartup * cpu_count
			FROM sys.dm_os_sys_info;


		/* If we're outputting CSV, don't bother checking the plan cache because we cannot export plans. */
		IF @OutputType = 'CSV'
			SET @CheckProcedureCache = 0;

		/* Only run CheckUserDatabaseObjects if there are less than 50 databases. */
		IF @BringThePain = 0 AND 50 <= (SELECT COUNT(*) FROM sys.databases) AND @CheckUserDatabaseObjects = 1
			BEGIN
			SET @CheckUserDatabaseObjects = 0;
			PRINT 'Running sp_Blitz @CheckUserDatabaseObjects = 1 on a server with 50+ databases may cause temporary insanity for the server and/or user.';
			PRINT 'If you''re sure you want to do this, run again with the parameter @BringThePain = 1.';
			END

		/* Sanitize our inputs */
		SELECT
			@OutputDatabaseName = QUOTENAME(@OutputDatabaseName),
			@OutputSchemaName = QUOTENAME(@OutputSchemaName),
			@OutputTableName = QUOTENAME(@OutputTableName)

		/* Get the major and minor build numbers */
		SET @ProductVersion = CAST(SERVERPROPERTY('ProductVersion') AS NVARCHAR(128));
		SELECT @ProductVersionMajor = SUBSTRING(@ProductVersion, 1,CHARINDEX('.', @ProductVersion) + 1 ),
			@ProductVersionMinor = PARSENAME(CONVERT(varchar(32), @ProductVersion), 2)


		/*
		Whew! we're finally done with the setup, and we can start doing checks.
		First, let's make sure we're actually supposed to do checks on this server.
		The user could have passed in a SkipChecks table that specified to skip ALL
		checks on this server, so let's check for that:
		*/
		IF ( ( SERVERPROPERTY('ServerName') NOT IN ( SELECT ServerName
													 FROM   #SkipChecks
													 WHERE  DatabaseName IS NULL
															AND CheckID IS NULL ) )
			 OR ( @SkipChecksTable IS NULL )
		   )
			BEGIN

				/*
				Our very first check! We'll put more comments in this one just to
				explain exactly how it works. First, we check to see if we're
				supposed to skip CheckID 1 (that's the check we're working on.)
				*/
				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 1 )
					BEGIN

						/*
						Below, we check master.sys.databases looking for databases
						that haven't had a backup in the last week. If we find any,
						we insert them into #BlitzResults, the temp table that
						tracks our server's problems. Note that if the check does
						NOT find any problems, we don't save that. We're only
						saving the problems, not the successful checks.
						*/
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  1 AS CheckID ,
										d.[name] AS DatabaseName ,
										1 AS Priority ,
										'Backup' AS FindingsGroup ,
										'Backups Not Performed Recently' AS Finding ,
										'http://BrentOzar.com/go/nobak' AS URL ,
										'Database ' + d.name + ' last backed up: '
										+ COALESCE(CAST(MAX(b.backup_finish_date) AS VARCHAR(25)),'never') AS Details
								FROM    master.sys.databases d
										LEFT OUTER JOIN msdb.dbo.backupset b ON d.name COLLATE SQL_Latin1_General_CP1_CI_AS = b.database_name COLLATE SQL_Latin1_General_CP1_CI_AS
																  AND b.type = 'D'
																  AND b.server_name = SERVERPROPERTY('ServerName') /*Backupset ran on current server */
								WHERE   d.database_id <> 2  /* Bonus points if you know what that means */
										AND d.state NOT IN(1, 6, 10) /* Not currently offline or restoring, like log shipping databases */
										AND d.is_in_standby = 0 /* Not a log shipping target database */
										AND d.source_database_id IS NULL /* Excludes database snapshots */
										AND d.name NOT IN ( SELECT DISTINCT
																  DatabaseName
															FROM  #SkipChecks
															WHERE CheckID IS NULL )
										/*
										The above NOT IN filters out the databases we're not supposed to check.
										*/
								GROUP BY d.name
								HAVING  MAX(b.backup_finish_date) <= DATEADD(dd,
																  -7, GETDATE())
                                        OR MAX(b.backup_finish_date) IS NULL;
						/*
						And there you have it. The rest of this stored procedure works the same
						way: it asks:
						- Should I skip this check?
						- If not, do I find problems?
						- Insert the results into #BlitzResults
						*/

					END

				/*
				And that's the end of CheckID #1.

				CheckID #2 is a little simpler because it only involves one query, and it's
				more typical for queries that people contribute. But keep reading, because
				the next check gets more complex again.
				*/

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 2 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
										SELECT DISTINCT
										2 AS CheckID ,
										d.name AS DatabaseName ,
										1 AS Priority ,
										'Backup' AS FindingsGroup ,
										'Full Recovery Mode w/o Log Backups' AS Finding ,
										'http://BrentOzar.com/go/biglogs' AS URL ,
										( 'The ' + CAST(CAST((SELECT ((SUM([mf].[size]) * 8.) / 1024.) FROM sys.[master_files] AS [mf] WHERE [mf].[database_id] = d.[database_id] AND [mf].[type_desc] = 'LOG') AS DECIMAL(18,2)) AS VARCHAR) + 'MB log file has not been backed up in the last week.' ) AS Details
								FROM    master.sys.databases d
								WHERE   d.recovery_model IN ( 1, 2 )
										AND d.database_id NOT IN ( 2, 3 )
										AND d.source_database_id IS NULL
										AND d.state <> 1 /* Not currently restoring, like log shipping databases */
										AND d.is_in_standby = 0 /* Not a log shipping target database */
										AND d.source_database_id IS NULL /* Excludes database snapshots */
										AND d.name NOT IN ( SELECT DISTINCT
																  DatabaseName
															FROM  #SkipChecks
															WHERE CheckID IS NULL )
										AND NOT EXISTS ( SELECT *
														 FROM   msdb.dbo.backupset b
														 WHERE  d.name COLLATE SQL_Latin1_General_CP1_CI_AS = b.database_name COLLATE SQL_Latin1_General_CP1_CI_AS
																AND b.type = 'L'
																AND b.backup_finish_date >= DATEADD(dd,
																  -7, GETDATE()) ); 
					END


				/*
				Next up, we've got CheckID 8. (These don't have to go in order.) This one
				won't work on SQL Server 2005 because it relies on a new DMV that didn't
				exist prior to SQL Server 2008. This means we have to check the SQL Server
				version first, then build a dynamic string with the query we want to run:
				*/

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 8 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
							(CheckID, Priority,
							FindingsGroup,
							Finding, URL,
							Details)
					  SELECT 8 AS CheckID,
					  230 AS Priority,
					  ''Security'' AS FindingsGroup,
					  ''Server Audits Running'' AS Finding,
					  ''http://BrentOzar.com/go/audits'' AS URL,
					  (''SQL Server built-in audit functionality is being used by server audit: '' + [name]) AS Details FROM sys.dm_server_audit_status'
								EXECUTE(@StringToExecute)
							END;
					END

				/*
				But what if you need to run a query in every individual database?
				Hop down to the @CheckUserDatabaseObjects section.
                
				And that's the basic idea! You can read through the rest of the
				checks if you like - some more exciting stuff happens closer to the
				end of the stored proc, where we start doing things like checking
				the plan cache, but those aren't as cleanly commented.

				If you'd like to contribute your own check, use one of the check
				formats shown above and email it to Help@BrentOzar.com. You don't
				have to pick a CheckID or a link - we'll take care of that when we
				test and publish the code. Thanks!
				*/


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 93 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT
										93 AS CheckID ,
										1 AS Priority ,
										'Backup' AS FindingsGroup ,
										'Backing Up to Same Drive Where Databases Reside' AS Finding ,
										'http://BrentOzar.com/go/backup' AS URL ,
										CAST(COUNT(1) AS VARCHAR(50)) + ' backups done on drive '
										+ UPPER(LEFT(bmf.physical_device_name, 3))
										+ ' in the last two weeks, where database files also live. This represents a serious risk if that array fails.' Details
								FROM    msdb.dbo.backupmediafamily AS bmf
										INNER JOIN msdb.dbo.backupset AS bs ON bmf.media_set_id = bs.media_set_id
																  AND bs.backup_start_date >= ( DATEADD(dd,
																  -14, GETDATE()) )
								WHERE   UPPER(LEFT(bmf.physical_device_name COLLATE SQL_Latin1_General_CP1_CI_AS, 3)) IN (
										SELECT DISTINCT
												UPPER(LEFT(mf.physical_name COLLATE SQL_Latin1_General_CP1_CI_AS, 3))
										FROM    sys.master_files AS mf )
								GROUP BY UPPER(LEFT(bmf.physical_device_name, 3))
					END


					IF NOT EXISTS ( SELECT  1
									FROM    #SkipChecks
									WHERE   DatabaseName IS NULL AND CheckID = 119 )
						AND EXISTS ( SELECT *
									 FROM   sys.all_objects o
									 WHERE  o.name = 'dm_database_encryption_keys' )
						BEGIN
							SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, DatabaseName, URL, Details)
								SELECT 119 AS CheckID,
								1 AS Priority,
								''Backup'' AS FindingsGroup,
								''TDE Certificate Not Backed Up Recently'' AS Finding,
								db_name(dek.database_id) AS DatabaseName,
								''http://BrentOzar.com/go/tde'' AS URL,
								''The certificate '' + c.name + '' is used to encrypt database '' + db_name(dek.database_id) + ''. Last backup date: '' + COALESCE(CAST(c.pvt_key_last_backup_date AS VARCHAR(100)), ''Never'') AS Details
								FROM sys.certificates c INNER JOIN sys.dm_database_encryption_keys dek ON c.thumbprint = dek.encryptor_thumbprint
								WHERE pvt_key_last_backup_date IS NULL OR pvt_key_last_backup_date <= DATEADD(dd, -30, GETDATE())';
							EXECUTE(@StringToExecute);
						END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 3 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT TOP 1
										3 AS CheckID ,
										'msdb' ,
										200 AS Priority ,
										'Backup' AS FindingsGroup ,
										'MSDB Backup History Not Purged' AS Finding ,
										'http://BrentOzar.com/go/history' AS URL ,
										( 'Database backup history retained back to '
										  + CAST(bs.backup_start_date AS VARCHAR(20)) ) AS Details
								FROM    msdb.dbo.backupset bs
								WHERE   bs.backup_start_date <= DATEADD(dd, -60,
																  GETDATE())
								ORDER BY backup_set_id ASC;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 178 )
					AND EXISTS (SELECT *
									FROM msdb.dbo.backupset bs
									WHERE bs.type = 'D'
									AND bs.compressed_backup_size >= 50000000000 /* At least 50GB */
									AND DATEDIFF(SECOND, bs.backup_start_date, bs.backup_finish_date) <= 60 /* Backup took less than 60 seconds */
									AND bs.backup_finish_date >= DATEADD(DAY, -14, GETDATE()) /* In the last 2 weeks */)
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT 178 AS CheckID ,
										200 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Snapshot Backups Occurring' AS Finding ,
										'http://BrentOzar.com/go/snaps' AS URL ,
										( CAST(COUNT(*) AS VARCHAR(20)) + ' snapshot-looking backups have occurred in the last two weeks, indicating that IO may be freezing up.') AS Details
								FROM msdb.dbo.backupset bs
								WHERE bs.type = 'D'
								AND bs.compressed_backup_size >= 50000000000 /* At least 50GB */
								AND DATEDIFF(SECOND, bs.backup_start_date, bs.backup_finish_date) <= 60 /* Backup took less than 60 seconds */
								AND bs.backup_finish_date >= DATEADD(DAY, -14, GETDATE()) /* In the last 2 weeks */
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 4 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  4 AS CheckID ,
										230 AS Priority ,
										'Security' AS FindingsGroup ,
										'Sysadmins' AS Finding ,
										'http://BrentOzar.com/go/sa' AS URL ,
										( 'Login [' + l.name
										  + '] is a sysadmin - meaning they can do absolutely anything in SQL Server, including dropping databases or hiding their tracks.' ) AS Details
								FROM    master.sys.syslogins l
								WHERE   l.sysadmin = 1
										AND l.name <> SUSER_SNAME(0x01)
										AND l.denylogin = 0
										AND l.name NOT LIKE 'NT SERVICE\%'
										AND l.name <> 'l_certSignSmDetach'; /* Added in SQL 2016 */
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 5 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  5 AS CheckID ,
										230 AS Priority ,
										'Security' AS FindingsGroup ,
										'Security Admins' AS Finding ,
										'http://BrentOzar.com/go/sa' AS URL ,
										( 'Login [' + l.name
										  + '] is a security admin - meaning they can give themselves permission to do absolutely anything in SQL Server, including dropping databases or hiding their tracks.' ) AS Details
								FROM    master.sys.syslogins l
								WHERE   l.securityadmin = 1
										AND l.name <> SUSER_SNAME(0x01)
										AND l.denylogin = 0;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 104 )
					BEGIN
						INSERT  INTO #BlitzResults
								( [CheckID] ,
								  [Priority] ,
								  [FindingsGroup] ,
								  [Finding] ,
								  [URL] ,
								  [Details]
								)
								SELECT  104 AS [CheckID] ,
										230 AS [Priority] ,
										'Security' AS [FindingsGroup] ,
										'Login Can Control Server' AS [Finding] ,
										'http://BrentOzar.com/go/sa' AS [URL] ,
										'Login [' + pri.[name]
										+ '] has the CONTROL SERVER permission - meaning they can do absolutely anything in SQL Server, including dropping databases or hiding their tracks.' AS [Details]
								FROM    sys.server_principals AS pri
								WHERE   pri.[principal_id] IN (
										SELECT  p.[grantee_principal_id]
										FROM    sys.server_permissions AS p
										WHERE   p.[state] IN ( 'G', 'W' )
												AND p.[class] = 100
												AND p.[type] = 'CL' )
										AND pri.[name] NOT LIKE '##%##'
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 6 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  6 AS CheckID ,
										230 AS Priority ,
										'Security' AS FindingsGroup ,
										'Jobs Owned By Users' AS Finding ,
										'http://BrentOzar.com/go/owners' AS URL ,
										( 'Job [' + j.name + '] is owned by ['
										  + SUSER_SNAME(j.owner_sid)
										  + '] - meaning if their login is disabled or not available due to Active Directory problems, the job will stop working.' ) AS Details
								FROM    msdb.dbo.sysjobs j
								WHERE   j.enabled = 1
										AND SUSER_SNAME(j.owner_sid) <> SUSER_SNAME(0x01);
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 7 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  7 AS CheckID ,
										230 AS Priority ,
										'Security' AS FindingsGroup ,
										'Stored Procedure Runs at Startup' AS Finding ,
										'http://BrentOzar.com/go/startup' AS URL ,
										( 'Stored procedure [master].['
										  + r.SPECIFIC_SCHEMA + '].['
										  + r.SPECIFIC_NAME
										  + '] runs automatically when SQL Server starts up.  Make sure you know exactly what this stored procedure is doing, because it could pose a security risk.' ) AS Details
								FROM    master.INFORMATION_SCHEMA.ROUTINES r
								WHERE   OBJECTPROPERTY(OBJECT_ID(ROUTINE_NAME),
													   'ExecIsStartup') = 1;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 10 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
							(CheckID,
							Priority,
							FindingsGroup,
							Finding,
							URL,
							Details)
					  SELECT 10 AS CheckID,
					  100 AS Priority,
					  ''Performance'' AS FindingsGroup,
					  ''Resource Governor Enabled'' AS Finding,
					  ''http://BrentOzar.com/go/rg'' AS URL,
					  (''Resource Governor is enabled.  Queries may be throttled.  Make sure you understand how the Classifier Function is configured.'') AS Details FROM sys.resource_governor_configuration WHERE is_enabled = 1'
								EXECUTE(@StringToExecute)
							END;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 11 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
							(CheckID,
							Priority,
							FindingsGroup,
							Finding,
							URL,
							Details)
					  SELECT 11 AS CheckID,
					  100 AS Priority,
					  ''Performance'' AS FindingsGroup,
					  ''Server Triggers Enabled'' AS Finding,
					  ''http://BrentOzar.com/go/logontriggers/'' AS URL,
					  (''Server Trigger ['' + [name] ++ ''] is enabled.  Make sure you understand what that trigger is doing - the less work it does, the better.'') AS Details FROM sys.server_triggers WHERE is_disabled = 0 AND is_ms_shipped = 0'
								EXECUTE(@StringToExecute)
							END;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 12 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  12 AS CheckID ,
										[name] AS DatabaseName ,
										10 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Auto-Close Enabled' AS Finding ,
										'http://BrentOzar.com/go/autoclose' AS URL ,
										( 'Database [' + [name]
										  + '] has auto-close enabled.  This setting can dramatically decrease performance.' ) AS Details
								FROM    sys.databases
								WHERE   is_auto_close_on = 1
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL)
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 13 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  13 AS CheckID ,
										[name] AS DatabaseName ,
										10 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Auto-Shrink Enabled' AS Finding ,
										'http://BrentOzar.com/go/autoshrink' AS URL ,
										( 'Database [' + [name]
										  + '] has auto-shrink enabled.  This setting can dramatically decrease performance.' ) AS Details
								FROM    sys.databases
								WHERE   is_auto_shrink_on = 1
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL);
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 14 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
							(CheckID,
							DatabaseName,
							Priority,
							FindingsGroup,
							Finding,
							URL,
							Details)
					  SELECT 14 AS CheckID,
					  [name] as DatabaseName,
					  50 AS Priority,
					  ''Reliability'' AS FindingsGroup,
					  ''Page Verification Not Optimal'' AS Finding,
					  ''http://BrentOzar.com/go/torn'' AS URL,
					  (''Database ['' + [name] + ''] has '' + [page_verify_option_desc] + '' for page verification.  SQL Server may have a harder time recognizing and recovering from storage corruption.  Consider using CHECKSUM instead.'') COLLATE database_default AS Details
					  FROM sys.databases
					  WHERE page_verify_option < 2
					  AND name <> ''tempdb''
					  and name not in (select distinct DatabaseName from #SkipChecks)'
								EXECUTE(@StringToExecute)
							END;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 15 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  15 AS CheckID ,
										[name] AS DatabaseName ,
										110 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Auto-Create Stats Disabled' AS Finding ,
										'http://BrentOzar.com/go/acs' AS URL ,
										( 'Database [' + [name]
										  + '] has auto-create-stats disabled.  SQL Server uses statistics to build better execution plans, and without the ability to automatically create more, performance may suffer.' ) AS Details
								FROM    sys.databases
								WHERE   is_auto_create_stats_on = 0
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL)
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 16 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  16 AS CheckID ,
										[name] AS DatabaseName ,
										110 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Auto-Update Stats Disabled' AS Finding ,
										'http://BrentOzar.com/go/aus' AS URL ,
										( 'Database [' + [name]
										  + '] has auto-update-stats disabled.  SQL Server uses statistics to build better execution plans, and without the ability to automatically update them, performance may suffer.' ) AS Details
								FROM    sys.databases
								WHERE   is_auto_update_stats_on = 0
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL)
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 17 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  17 AS CheckID ,
										[name] AS DatabaseName ,
										150 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Stats Updated Asynchronously' AS Finding ,
										'http://BrentOzar.com/go/asyncstats' AS URL ,
										( 'Database [' + [name]
										  + '] has auto-update-stats-async enabled.  When SQL Server gets a query for a table with out-of-date statistics, it will run the query with the stats it has - while updating stats to make later queries better. The initial run of the query may suffer, though.' ) AS Details
								FROM    sys.databases
								WHERE   is_auto_update_stats_async_on = 1
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL)
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 18 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  18 AS CheckID ,
										[name] AS DatabaseName ,
										150 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Forced Parameterization On' AS Finding ,
										'http://BrentOzar.com/go/forced' AS URL ,
										( 'Database [' + [name]
										  + '] has forced parameterization enabled.  SQL Server will aggressively reuse query execution plans even if the applications do not parameterize their queries.  This can be a performance booster with some programming languages, or it may use universally bad execution plans when better alternatives are available for certain parameters.' ) AS Details
								FROM    sys.databases
								WHERE   is_parameterization_forced = 1
										AND name NOT IN ( SELECT  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL)
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 20 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  20 AS CheckID ,
										[name] AS DatabaseName ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Date Correlation On' AS Finding ,
										'http://BrentOzar.com/go/corr' AS URL ,
										( 'Database [' + [name]
										  + '] has date correlation enabled.  This is not a default setting, and it has some performance overhead.  It tells SQL Server that date fields in two tables are related, and SQL Server maintains statistics showing that relation.' ) AS Details
								FROM    sys.databases
								WHERE   is_date_correlation_on = 1
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL)
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 21 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
							(CheckID,
							DatabaseName,
							Priority,
							FindingsGroup,
							Finding,
							URL,
							Details)
					  SELECT 21 AS CheckID,
					  [name] as DatabaseName,
					  200 AS Priority,
					  ''Informational'' AS FindingsGroup,
					  ''Database Encrypted'' AS Finding,
					  ''http://BrentOzar.com/go/tde'' AS URL,
					  (''Database ['' + [name] + ''] has Transparent Data Encryption enabled.  Make absolutely sure you have backed up the certificate and private key, or else you will not be able to restore this database.'') AS Details
					  FROM sys.databases
					  WHERE is_encrypted = 1
					  and name not in (select distinct DatabaseName from #SkipChecks)'
								EXECUTE(@StringToExecute)
							END;
					END

				/*
				Believe it or not, SQL Server doesn't track the default values
				for sp_configure options! We'll make our own list here.
				*/
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'access check cache bucket count', 0, 1001 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'access check cache quota', 0, 1002 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'Ad Hoc Distributed Queries', 0, 1003 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'affinity I/O mask', 0, 1004 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'affinity mask', 0, 1005 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'affinity64 mask', 0, 1066 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'affinity64 I/O mask', 0, 1067 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'Agent XPs', 0, 1071 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'allow updates', 0, 1007 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'awe enabled', 0, 1008 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'backup checksum default', 0, 1070 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'backup compression default', 0, 1073 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'blocked process threshold', 0, 1009 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'blocked process threshold (s)', 0, 1009 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'c2 audit mode', 0, 1010 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'clr enabled', 0, 1011 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'common criteria compliance enabled', 0, 1074 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'contained database authentication', 0, 1068 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'cost threshold for parallelism', 5, 1012 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'cross db ownership chaining', 0, 1013 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'cursor threshold', -1, 1014 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'Database Mail XPs', 0, 1072 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'default full-text language', 1033, 1016 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'default language', 0, 1017 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'default trace enabled', 1, 1018 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'disallow results from triggers', 0, 1019 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'EKM provider enabled', 0, 1075 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'filestream access level', 0, 1076 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'fill factor (%)', 0, 1020 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'ft crawl bandwidth (max)', 100, 1021 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'ft crawl bandwidth (min)', 0, 1022 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'ft notify bandwidth (max)', 100, 1023 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'ft notify bandwidth (min)', 0, 1024 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'index create memory (KB)', 0, 1025 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'in-doubt xact resolution', 0, 1026 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'lightweight pooling', 0, 1027 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'locks', 0, 1028 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'max degree of parallelism', 0, 1029 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'max full-text crawl range', 4, 1030 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'max server memory (MB)', 2147483647, 1031 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'max text repl size (B)', 65536, 1032 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'max worker threads', 0, 1033 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'media retention', 0, 1034 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'min memory per query (KB)', 1024, 1035 );
				/* Accepting both 0 and 16 below because both have been seen in the wild as defaults. */
				IF EXISTS ( SELECT  *
							FROM    sys.configurations
							WHERE   name = 'min server memory (MB)'
									AND value_in_use IN ( 0, 16 ) )
					INSERT  INTO #ConfigurationDefaults
							SELECT  'min server memory (MB)' ,
									CAST(value_in_use AS BIGINT), 1036
							FROM    sys.configurations
							WHERE   name = 'min server memory (MB)'
				ELSE
					INSERT  INTO #ConfigurationDefaults
					VALUES  ( 'min server memory (MB)', 0, 1036 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'nested triggers', 1, 1037 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'network packet size (B)', 4096, 1038 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'Ole Automation Procedures', 0, 1039 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'open objects', 0, 1040 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'optimize for ad hoc workloads', 0, 1041 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'PH timeout (s)', 60, 1042 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'precompute rank', 0, 1043 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'priority boost', 0, 1044 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'query governor cost limit', 0, 1045 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'query wait (s)', -1, 1046 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'recovery interval (min)', 0, 1047 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'remote access', 1, 1048 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'remote admin connections', 0, 1049 );
				/* SQL Server 2012 changes a configuration default */
				IF @@VERSION LIKE '%Microsoft SQL Server 2005%'
					OR @@VERSION LIKE '%Microsoft SQL Server 2008%'
					BEGIN
						INSERT  INTO #ConfigurationDefaults
						VALUES  ( 'remote login timeout (s)', 20, 1069 );
					END
				ELSE
					BEGIN
						INSERT  INTO #ConfigurationDefaults
						VALUES  ( 'remote login timeout (s)', 10, 1069 );
					END
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'remote proc trans', 0, 1050 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'remote query timeout (s)', 600, 1051 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'Replication XPs', 0, 1052 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'RPC parameter data validation', 0, 1053 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'scan for startup procs', 0, 1054 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'server trigger recursion', 1, 1055 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'set working set size', 0, 1056 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'show advanced options', 0, 1057 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'SMO and DMO XPs', 1, 1058 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'SQL Mail XPs', 0, 1059 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'transform noise words', 0, 1060 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'two digit year cutoff', 2049, 1061 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'user connections', 0, 1062 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'user options', 0, 1063 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'Web Assistant Procedures', 0, 1064 );
				INSERT  INTO #ConfigurationDefaults
				VALUES  ( 'xp_cmdshell', 0, 1065 );


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 22 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  cd.CheckID ,
										200 AS Priority ,
										'Non-Default Server Config' AS FindingsGroup ,
										cr.name AS Finding ,
										'http://BrentOzar.com/go/conf' AS URL ,
										( 'This sp_configure option has been changed.  Its default value is '
										  + COALESCE(CAST(cd.[DefaultValue] AS VARCHAR(100)),
													 '(unknown)')
										  + ' and it has been set to '
										  + CAST(cr.value_in_use AS VARCHAR(100))
										  + '.' ) AS Details
								FROM    sys.configurations cr
										INNER JOIN #ConfigurationDefaults cd ON cd.name = cr.name
										LEFT OUTER JOIN #ConfigurationDefaults cdUsed ON cdUsed.name = cr.name
																  AND cdUsed.DefaultValue = cr.value_in_use
								WHERE   cdUsed.name IS NULL;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 24 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT DISTINCT
										24 AS CheckID ,
										DB_NAME(database_id) AS DatabaseName ,
										170 AS Priority ,
										'File Configuration' AS FindingsGroup ,
										'System Database on C Drive' AS Finding ,
										'http://BrentOzar.com/go/cdrive' AS URL ,
										( 'The ' + DB_NAME(database_id)
										  + ' database has a file on the C drive.  Putting system databases on the C drive runs the risk of crashing the server when it runs out of space.' ) AS Details
								FROM    sys.master_files
								WHERE   UPPER(LEFT(physical_name, 1)) = 'C'
										AND DB_NAME(database_id) IN ( 'master',
																  'model', 'msdb' );
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 25 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT TOP 1
										25 AS CheckID ,
										'tempdb' ,
										170 AS Priority ,
										'File Configuration' AS FindingsGroup ,
										'TempDB on C Drive' AS Finding ,
										'http://BrentOzar.com/go/cdrive' AS URL ,
										CASE WHEN growth > 0
											 THEN ( 'The tempdb database has files on the C drive.  TempDB frequently grows unpredictably, putting your server at risk of running out of C drive space and crashing hard.  C is also often much slower than other drives, so performance may be suffering.' )
											 ELSE ( 'The tempdb database has files on the C drive.  TempDB is not set to Autogrow, hopefully it is big enough.  C is also often much slower than other drives, so performance may be suffering.' )
										END AS Details
								FROM    sys.master_files
								WHERE   UPPER(LEFT(physical_name, 1)) = 'C'
										AND DB_NAME(database_id) = 'tempdb';
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 26 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT DISTINCT
										26 AS CheckID ,
										DB_NAME(database_id) AS DatabaseName ,
										20 AS Priority ,
										'Reliability' AS FindingsGroup ,
										'User Databases on C Drive' AS Finding ,
										'http://BrentOzar.com/go/cdrive' AS URL ,
										( 'The ' + DB_NAME(database_id)
										  + ' database has a file on the C drive.  Putting databases on the C drive runs the risk of crashing the server when it runs out of space.' ) AS Details
								FROM    sys.master_files
								WHERE   UPPER(LEFT(physical_name, 1)) = 'C'
										AND DB_NAME(database_id) NOT IN ( 'master',
																  'model', 'msdb',
																  'tempdb' )
										AND DB_NAME(database_id) NOT IN (
										SELECT DISTINCT
												DatabaseName
										FROM    #SkipChecks )
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 27 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  27 AS CheckID ,
										'master' AS DatabaseName ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Tables in the Master Database' AS Finding ,
										'http://BrentOzar.com/go/mastuser' AS URL ,
										( 'The ' + name
										  + ' table in the master database was created by end users on '
										  + CAST(create_date AS VARCHAR(20))
										  + '. Tables in the master database may not be restored in the event of a disaster.' ) AS Details
								FROM    master.sys.tables
								WHERE   is_ms_shipped = 0;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 28 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  28 AS CheckID ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Tables in the MSDB Database' AS Finding ,
										'http://BrentOzar.com/go/msdbuser' AS URL ,
										( 'The ' + name
										  + ' table in the msdb database was created by end users on '
										  + CAST(create_date AS VARCHAR(20))
										  + '. Tables in the msdb database may not be restored in the event of a disaster.' ) AS Details
								FROM    msdb.sys.tables
								WHERE   is_ms_shipped = 0 AND name NOT LIKE '%DTA_%';
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 29 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  29 AS CheckID ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Tables in the Model Database' AS Finding ,
										'http://BrentOzar.com/go/model' AS URL ,
										( 'The ' + name
										  + ' table in the model database was created by end users on '
										  + CAST(create_date AS VARCHAR(20))
										  + '. Tables in the model database are automatically copied into all new databases.' ) AS Details
								FROM    model.sys.tables
								WHERE   is_ms_shipped = 0;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 30 )
					BEGIN
						IF ( SELECT COUNT(*)
							 FROM   msdb.dbo.sysalerts
							 WHERE  severity BETWEEN 19 AND 25
						   ) < 7
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  30 AS CheckID ,
											200 AS Priority ,
											'Monitoring' AS FindingsGroup ,
											'Not All Alerts Configured' AS Finding ,
											'http://BrentOzar.com/go/alert' AS URL ,
											( 'Not all SQL Server Agent alerts have been configured.  This is a free, easy way to get notified of corruption, job failures, or major outages even before monitoring systems pick it up.' ) AS Details;
					END



				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 59 )
					BEGIN
						IF EXISTS ( SELECT  *
									FROM    msdb.dbo.sysalerts
									WHERE   enabled = 1
											AND COALESCE(has_notification, 0) = 0
											AND (job_id IS NULL OR job_id = 0x))
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  59 AS CheckID ,
											200 AS Priority ,
											'Monitoring' AS FindingsGroup ,
											'Alerts Configured without Follow Up' AS Finding ,
											'http://BrentOzar.com/go/alert' AS URL ,
											( 'SQL Server Agent alerts have been configured but they either do not notify anyone or else they do not take any action.  This is a free, easy way to get notified of corruption, job failures, or major outages even before monitoring systems pick it up.' ) AS Details;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 96 )
					BEGIN
						IF NOT EXISTS ( SELECT  *
										FROM    msdb.dbo.sysalerts
										WHERE   message_id IN ( 823, 824, 825 ) )
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  96 AS CheckID ,
											200 AS Priority ,
											'Monitoring' AS FindingsGroup ,
											'No Alerts for Corruption' AS Finding ,
											'http://BrentOzar.com/go/alert' AS URL ,
											( 'SQL Server Agent alerts do not exist for errors 823, 824, and 825.  These three errors can give you notification about early hardware failure. Enabling them can prevent you a lot of heartbreak.' ) AS Details;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 61 )
					BEGIN
						IF NOT EXISTS ( SELECT  *
										FROM    msdb.dbo.sysalerts
										WHERE   severity BETWEEN 19 AND 25 )
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  61 AS CheckID ,
											200 AS Priority ,
											'Monitoring' AS FindingsGroup ,
											'No Alerts for Sev 19-25' AS Finding ,
											'http://BrentOzar.com/go/alert' AS URL ,
											( 'SQL Server Agent alerts do not exist for severity levels 19 through 25.  These are some very severe SQL Server errors. Knowing that these are happening may let you recover from errors faster.' ) AS Details;
					END

		--check for disabled alerts
				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 98 )
					BEGIN
						IF EXISTS ( SELECT  name
									FROM    msdb.dbo.sysalerts
									WHERE   enabled = 0 )
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  98 AS CheckID ,
											200 AS Priority ,
											'Monitoring' AS FindingsGroup ,
											'Alerts Disabled' AS Finding ,
											'http://www.BrentOzar.com/go/alerts/' AS URL ,
											( 'The following Alert is disabled, please review and enable if desired: '
											  + name ) AS Details
									FROM    msdb.dbo.sysalerts
									WHERE   enabled = 0
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 31 )
					BEGIN
						IF NOT EXISTS ( SELECT  *
										FROM    msdb.dbo.sysoperators
										WHERE   enabled = 1 )
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  31 AS CheckID ,
											200 AS Priority ,
											'Monitoring' AS FindingsGroup ,
											'No Operators Configured/Enabled' AS Finding ,
											'http://BrentOzar.com/go/op' AS URL ,
											( 'No SQL Server Agent operators (emails) have been configured.  This is a free, easy way to get notified of corruption, job failures, or major outages even before monitoring systems pick it up.' ) AS Details;
					END



				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 34 )
					BEGIN
						IF EXISTS ( SELECT  *
									FROM    sys.all_objects
									WHERE   name = 'dm_db_mirroring_auto_page_repair' )
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT DISTINCT
		  34 AS CheckID ,
		  db.name ,
		  1 AS Priority ,
		  ''Corruption'' AS FindingsGroup ,
		  ''Database Corruption Detected'' AS Finding ,
		  ''http://BrentOzar.com/go/repair'' AS URL ,
		  ( ''Database mirroring has automatically repaired at least one corrupt page in the last 30 days. For more information, query the DMV sys.dm_db_mirroring_auto_page_repair.'' ) AS Details
		  FROM (SELECT rp2.database_id, rp2.modification_time 
			FROM sys.dm_db_mirroring_auto_page_repair rp2 
			WHERE rp2.[database_id] not in (
			SELECT db2.[database_id] 
			FROM sys.databases as db2 
			WHERE db2.[state] = 1
			) ) as rp 
		  INNER JOIN master.sys.databases db ON rp.database_id = db.database_id
		  WHERE   rp.modification_time >= DATEADD(dd, -30, GETDATE()) ;'
								EXECUTE(@StringToExecute)
							END;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 89 )
					BEGIN
						IF EXISTS ( SELECT  *
									FROM    sys.all_objects
									WHERE   name = 'dm_hadr_auto_page_repair' )
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT DISTINCT
		  89 AS CheckID ,
		  db.name ,
		  1 AS Priority ,
		  ''Corruption'' AS FindingsGroup ,
		  ''Database Corruption Detected'' AS Finding ,
		  ''http://BrentOzar.com/go/repair'' AS URL ,
		  ( ''AlwaysOn has automatically repaired at least one corrupt page in the last 30 days. For more information, query the DMV sys.dm_hadr_auto_page_repair.'' ) AS Details
		  FROM    sys.dm_hadr_auto_page_repair rp
		  INNER JOIN master.sys.databases db ON rp.database_id = db.database_id
		  WHERE   rp.modification_time >= DATEADD(dd, -30, GETDATE()) ;'
								EXECUTE(@StringToExecute)
							END;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 90 )
					BEGIN
						IF EXISTS ( SELECT  *
									FROM    msdb.sys.all_objects
									WHERE   name = 'suspect_pages' )
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT DISTINCT
		  90 AS CheckID ,
		  db.name ,
		  1 AS Priority ,
		  ''Corruption'' AS FindingsGroup ,
		  ''Database Corruption Detected'' AS Finding ,
		  ''http://BrentOzar.com/go/repair'' AS URL ,
		  ( ''SQL Server has detected at least one corrupt page in the last 30 days. For more information, query the system table msdb.dbo.suspect_pages.'' ) AS Details
		  FROM    msdb.dbo.suspect_pages sp
		  INNER JOIN master.sys.databases db ON sp.database_id = db.database_id
		  WHERE   sp.last_update_date >= DATEADD(dd, -30, GETDATE()) ;'
								EXECUTE(@StringToExecute)
							END;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 36 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT DISTINCT
										36 AS CheckID ,
										150 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Slow Storage Reads on Drive '
										+ UPPER(LEFT(mf.physical_name, 1)) AS Finding ,
										'http://BrentOzar.com/go/slow' AS URL ,
										'Reads are averaging longer than 200ms for at least one database on this drive.  For specific database file speeds, run the query from the information link.' AS Details
								FROM    sys.dm_io_virtual_file_stats(NULL, NULL)
										AS fs
										INNER JOIN sys.master_files AS mf ON fs.database_id = mf.database_id
																  AND fs.[file_id] = mf.[file_id]
								WHERE   ( io_stall_read_ms / ( 1.0 + num_of_reads ) ) > 200
								AND num_of_reads > 100000;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 37 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT DISTINCT
										37 AS CheckID ,
										150 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Slow Storage Writes on Drive '
										+ UPPER(LEFT(mf.physical_name, 1)) AS Finding ,
										'http://BrentOzar.com/go/slow' AS URL ,
										'Writes are averaging longer than 100ms for at least one database on this drive.  For specific database file speeds, run the query from the information link.' AS Details
								FROM    sys.dm_io_virtual_file_stats(NULL, NULL)
										AS fs
										INNER JOIN sys.master_files AS mf ON fs.database_id = mf.database_id
																  AND fs.[file_id] = mf.[file_id]
								WHERE   ( io_stall_write_ms / ( 1.0
																+ num_of_writes ) ) > 100
																AND num_of_writes > 100000;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 40 )
					BEGIN
						IF ( SELECT COUNT(*)
							 FROM   tempdb.sys.database_files
							 WHERE  type_desc = 'ROWS'
						   ) = 1
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  DatabaseName ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details
										)
								VALUES  ( 40 ,
										  'tempdb' ,
										  170 ,
										  'File Configuration' ,
										  'TempDB Only Has 1 Data File' ,
										  'http://BrentOzar.com/go/tempdb' ,
										  'TempDB is only configured with one data file.  More data files are usually required to alleviate SGAM contention.'
										);
							END;
					END


				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 44 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  44 AS CheckID ,
										150 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Queries Forcing Order Hints' AS Finding ,
										'http://BrentOzar.com/go/hints' AS URL ,
										CAST(occurrence AS VARCHAR(10))
										+ ' instances of order hinting have been recorded since restart.  This means queries are bossing the SQL Server optimizer around, and if they don''t know what they''re doing, this can cause more harm than good.  This can also explain why DBA tuning efforts aren''t working.' AS Details
								FROM    sys.dm_exec_query_optimizer_info
								WHERE   counter = 'order hint'
										AND occurrence > 1000
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 45 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  45 AS CheckID ,
										150 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Queries Forcing Join Hints' AS Finding ,
										'http://BrentOzar.com/go/hints' AS URL ,
										CAST(occurrence AS VARCHAR(10))
										+ ' instances of join hinting have been recorded since restart.  This means queries are bossing the SQL Server optimizer around, and if they don''t know what they''re doing, this can cause more harm than good.  This can also explain why DBA tuning efforts aren''t working.' AS Details
								FROM    sys.dm_exec_query_optimizer_info
								WHERE   counter = 'join hint'
										AND occurrence > 1000
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 49 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT DISTINCT
										49 AS CheckID ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Linked Server Configured' AS Finding ,
										'http://BrentOzar.com/go/link' AS URL ,
										+CASE WHEN l.remote_name = 'sa'
											  THEN s.data_source
												   + ' is configured as a linked server. Check its security configuration as it is connecting with sa, because any user who queries it will get admin-level permissions.'
											  ELSE s.data_source
												   + ' is configured as a linked server. Check its security configuration to make sure it isn''t connecting with SA or some other bone-headed administrative login, because any user who queries it might get admin-level permissions.'
										 END AS Details
								FROM    sys.servers s
										INNER JOIN sys.linked_logins l ON s.server_id = l.server_id
								WHERE   s.is_linked = 1
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 50 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
		  SELECT  50 AS CheckID ,
		  100 AS Priority ,
		  ''Performance'' AS FindingsGroup ,
		  ''Max Memory Set Too High'' AS Finding ,
		  ''http://BrentOzar.com/go/max'' AS URL ,
		  ''SQL Server max memory is set to ''
			+ CAST(c.value_in_use AS VARCHAR(20))
			+ '' megabytes, but the server only has ''
			+ CAST(( CAST(m.total_physical_memory_kb AS BIGINT) / 1024 ) AS VARCHAR(20))
			+ '' megabytes.  SQL Server may drain the system dry of memory, and under certain conditions, this can cause Windows to swap to disk.'' AS Details
		  FROM    sys.dm_os_sys_memory m
		  INNER JOIN sys.configurations c ON c.name = ''max server memory (MB)''
		  WHERE   CAST(m.total_physical_memory_kb AS BIGINT) < ( CAST(c.value_in_use AS BIGINT) * 1024 )'
								EXECUTE(@StringToExecute)
							END;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 51 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
		  SELECT  51 AS CheckID ,
		  1 AS Priority ,
		  ''Performance'' AS FindingsGroup ,
		  ''Memory Dangerously Low'' AS Finding ,
		  ''http://BrentOzar.com/go/max'' AS URL ,
		  ''The server has '' + CAST(( CAST(m.total_physical_memory_kb AS BIGINT) / 1024 ) AS VARCHAR(20)) + '' megabytes of physical memory, but only '' + CAST(( CAST(m.available_physical_memory_kb AS BIGINT) / 1024 ) AS VARCHAR(20))
			+ '' megabytes are available.  As the server runs out of memory, there is danger of swapping to disk, which will kill performance.'' AS Details
		  FROM    sys.dm_os_sys_memory m
		  WHERE   CAST(m.available_physical_memory_kb AS BIGINT) < 262144'
								EXECUTE(@StringToExecute)
							END;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 159 )
					BEGIN
						IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
		  SELECT DISTINCT 159 AS CheckID ,
		  1 AS Priority ,
		  ''Performance'' AS FindingsGroup ,
		  ''Memory Dangerously Low in NUMA Nodes'' AS Finding ,
		  ''http://BrentOzar.com/go/max'' AS URL ,
		  ''At least one NUMA node is reporting THREAD_RESOURCES_LOW in sys.dm_os_nodes and can no longer create threads.'' AS Details
		  FROM    sys.dm_os_nodes m
		  WHERE   node_state_desc LIKE ''%THREAD_RESOURCES_LOW%'''
								EXECUTE(@StringToExecute)
							END;
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 53 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT TOP 1
										53 AS CheckID ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Cluster Node' AS Finding ,
										'http://BrentOzar.com/go/node' AS URL ,
										'This is a node in a cluster.' AS Details
								FROM    sys.dm_os_cluster_nodes
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 55 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  55 AS CheckID ,
										[name] AS DatabaseName ,
										230 AS Priority ,
										'Security' AS FindingsGroup ,
										'Database Owner <> SA' AS Finding ,
										'http://BrentOzar.com/go/owndb' AS URL ,
										( 'Database name: ' + [name] + '   '
										  + 'Owner name: ' + SUSER_SNAME(owner_sid) ) AS Details
								FROM    sys.databases
								WHERE   SUSER_SNAME(owner_sid) <> SUSER_SNAME(0x01)
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL);
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 57 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  57 AS CheckID ,
										230 AS Priority ,
										'Security' AS FindingsGroup ,
										'SQL Agent Job Runs at Startup' AS Finding ,
										'http://BrentOzar.com/go/startup' AS URL ,
										( 'Job [' + j.name
										  + '] runs automatically when SQL Server Agent starts up.  Make sure you know exactly what this job is doing, because it could pose a security risk.' ) AS Details
								FROM    msdb.dbo.sysschedules sched
										JOIN msdb.dbo.sysjobschedules jsched ON sched.schedule_id = jsched.schedule_id
										JOIN msdb.dbo.sysjobs j ON jsched.job_id = j.job_id
								WHERE   sched.freq_type = 64
								        AND sched.enabled = 1;
					END



				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 97 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  97 AS CheckID ,
										100 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Unusual SQL Server Edition' AS Finding ,
										'http://BrentOzar.com/go/workgroup' AS URL ,
										( 'This server is using '
										  + CAST(SERVERPROPERTY('edition') AS VARCHAR(100))
										  + ', which is capped at low amounts of CPU and memory.' ) AS Details
								WHERE   CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) NOT LIKE '%Standard%'
										AND CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) NOT LIKE '%Enterprise%'
										AND CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) NOT LIKE '%Data Center%'
										AND CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) NOT LIKE '%Developer%'
										AND CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) NOT LIKE '%Business Intelligence%'
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 154 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  154 AS CheckID ,
										10 AS Priority ,
										'Performance' AS FindingsGroup ,
										'32-bit SQL Server Installed' AS Finding ,
										'http://BrentOzar.com/go/32bit' AS URL ,
										( 'This server uses the 32-bit x86 binaries for SQL Server instead of the 64-bit x64 binaries. The amount of memory available for query workspace and execution plans is heavily limited.' ) AS Details
								WHERE   CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) NOT LIKE '%64%'
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 62 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  62 AS CheckID ,
										[name] AS DatabaseName ,
										200 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Old Compatibility Level' AS Finding ,
										'http://BrentOzar.com/go/compatlevel' AS URL ,
										( 'Database ' + [name]
										  + ' is compatibility level '
										  + CAST(compatibility_level AS VARCHAR(20))
										  + ', which may cause unwanted results when trying to run queries that have newer T-SQL features.' ) AS Details
								FROM    sys.databases
								WHERE   name NOT IN ( SELECT DISTINCT
																DatabaseName
													  FROM      #SkipChecks 
													  WHERE CheckID IS NULL)
										AND compatibility_level <= 90
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 94 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  94 AS CheckID ,
										200 AS [Priority] ,
										'Monitoring' AS FindingsGroup ,
										'Agent Jobs Without Failure Emails' AS Finding ,
										'http://BrentOzar.com/go/alerts' AS URL ,
										'The job ' + [name]
										+ ' has not been set up to notify an operator if it fails.' AS Details
								FROM    msdb.[dbo].[sysjobs] j
										INNER JOIN ( SELECT DISTINCT
															[job_id]
													 FROM   [msdb].[dbo].[sysjobschedules]
													 WHERE  next_run_date > 0
												   ) s ON j.job_id = s.job_id
								WHERE   j.enabled = 1
										AND j.notify_email_operator_id = 0
										AND j.notify_netsend_operator_id = 0
										AND j.notify_page_operator_id = 0
										AND j.category_id <> 100 /* Exclude SSRS category */
					END


				IF EXISTS ( SELECT  1
							FROM    sys.configurations
							WHERE   name = 'remote admin connections'
									AND value_in_use = 0 )
					AND NOT EXISTS ( SELECT 1
									 FROM   #SkipChecks
									 WHERE  DatabaseName IS NULL AND CheckID = 100 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  100 AS CheckID ,
										50 AS Priority ,
										'Reliability' AS FindingGroup ,
										'Remote DAC Disabled' AS Finding ,
										'http://BrentOzar.com/go/dac' AS URL ,
										'Remote access to the Dedicated Admin Connection (DAC) is not enabled. The DAC can make remote troubleshooting much easier when SQL Server is unresponsive.'
					END


				IF EXISTS ( SELECT  *
							FROM    sys.dm_os_schedulers
							WHERE   is_online = 0 )
					AND NOT EXISTS ( SELECT 1
									 FROM   #SkipChecks
									 WHERE  DatabaseName IS NULL AND CheckID = 101 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  101 AS CheckID ,
										50 AS Priority ,
										'Performance' AS FindingGroup ,
										'CPU Schedulers Offline' AS Finding ,
										'http://BrentOzar.com/go/schedulers' AS URL ,
										'Some CPU cores are not accessible to SQL Server due to affinity masking or licensing problems.'
					END


					IF NOT EXISTS ( SELECT  1
									FROM    #SkipChecks
									WHERE   DatabaseName IS NULL AND CheckID = 110 )
								AND EXISTS (SELECT * FROM master.sys.all_objects WHERE name = 'dm_os_memory_nodes')
						BEGIN
							SET @StringToExecute = 'IF EXISTS (SELECT  *
												FROM sys.dm_os_nodes n
												INNER JOIN sys.dm_os_memory_nodes m ON n.memory_node_id = m.memory_node_id
												WHERE n.node_state_desc = ''OFFLINE'')
												INSERT  INTO #BlitzResults
														( CheckID ,
														  Priority ,
														  FindingsGroup ,
														  Finding ,
														  URL ,
														  Details
														)
														SELECT  110 AS CheckID ,
																50 AS Priority ,
																''Performance'' AS FindingGroup ,
																''Memory Nodes Offline'' AS Finding ,
																''http://BrentOzar.com/go/schedulers'' AS URL ,
																''Due to affinity masking or licensing problems, some of the memory may not be available.''';
									EXECUTE(@StringToExecute);
						END


				IF EXISTS ( SELECT  *
							FROM    sys.databases
							WHERE   state > 1 )
					AND NOT EXISTS ( SELECT 1
									 FROM   #SkipChecks
									 WHERE  DatabaseName IS NULL AND CheckID = 102 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  102 AS CheckID ,
										[name] ,
										20 AS Priority ,
										'Reliability' AS FindingGroup ,
										'Unusual Database State: ' + [state_desc] AS Finding ,
										'http://BrentOzar.com/go/repair' AS URL ,
										'This database may not be online.'
								FROM    sys.databases
								WHERE   state > 1
					END

				IF EXISTS ( SELECT  *
							FROM    master.sys.extended_procedures )
					AND NOT EXISTS ( SELECT 1
									 FROM   #SkipChecks
									 WHERE  DatabaseName IS NULL AND CheckID = 105 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  105 AS CheckID ,
										'master' ,
										200 AS Priority ,
										'Reliability' AS FindingGroup ,
										'Extended Stored Procedures in Master' AS Finding ,
										'http://BrentOzar.com/go/clr' AS URL ,
										'The [' + name
										+ '] extended stored procedure is in the master database. CLR may be in use, and the master database now needs to be part of your backup/recovery planning.'
								FROM    master.sys.extended_procedures
					END



					IF NOT EXISTS ( SELECT 1
										 FROM   #SkipChecks
										 WHERE  DatabaseName IS NULL AND CheckID = 107 )
						BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  107 AS CheckID ,
											50 AS Priority ,
											'Performance' AS FindingGroup ,
											'Poison Wait Detected: THREADPOOL'  AS Finding ,
											'http://BrentOzar.com/go/poison' AS URL ,
											CAST(SUM([wait_time_ms]) / 10000 / 1000 / 60 / 60 / 24 AS VARCHAR) + CAST(CONVERT(TIME, DATEADD(ms, SUM([wait_time_ms] / 10000 % 1000), DATEADD(ss, SUM([wait_time_ms] / 10000000), 0))) AS VARCHAR) + ' of this wait have been recorded. This wait often indicates killer performance problems.'
									FROM sys.[dm_os_wait_stats]
									WHERE wait_type = 'THREADPOOL'
									GROUP BY wait_type
								    HAVING SUM([wait_time_ms]) > (SELECT 5000 * datediff(HH,create_date,CURRENT_TIMESTAMP) AS hours_since_startup FROM sys.databases WHERE name='tempdb')
									AND SUM([wait_time_ms]) > 60000
						END

					IF NOT EXISTS ( SELECT 1
										 FROM   #SkipChecks
										 WHERE  DatabaseName IS NULL AND CheckID = 108 )
						BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  108 AS CheckID ,
											50 AS Priority ,
											'Performance' AS FindingGroup ,
											'Poison Wait Detected: RESOURCE_SEMAPHORE'  AS Finding ,
											'http://BrentOzar.com/go/poison' AS URL ,
											CONVERT(VARCHAR(10), (SUM([wait_time_ms]) / 1000) / 86400) + ':' + CONVERT(VARCHAR(20), DATEADD(s, (SUM([wait_time_ms]) / 1000), 0), 108) + ' of this wait have been recorded. This wait often indicates killer performance problems.'
									FROM sys.[dm_os_wait_stats]
									WHERE wait_type = 'RESOURCE_SEMAPHORE'
									GROUP BY wait_type
								    HAVING SUM([wait_time_ms]) > (SELECT 5000 * datediff(HH,create_date,CURRENT_TIMESTAMP) AS hours_since_startup FROM sys.databases WHERE name='tempdb')
									AND SUM([wait_time_ms]) > 60000
						END


					IF NOT EXISTS ( SELECT 1
										 FROM   #SkipChecks
										 WHERE  DatabaseName IS NULL AND CheckID = 109 )
						BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  109 AS CheckID ,
											50 AS Priority ,
											'Performance' AS FindingGroup ,
											'Poison Wait Detected: RESOURCE_SEMAPHORE_QUERY_COMPILE'  AS Finding ,
											'http://BrentOzar.com/go/poison' AS URL ,
											CAST(SUM([wait_time_ms]) / 10000 / 1000 / 60 / 60 / 24 AS VARCHAR) + CAST(CONVERT(TIME, DATEADD(ms, SUM([wait_time_ms] / 10000 % 1000), DATEADD(ss, SUM([wait_time_ms] / 10000000), 0))) AS VARCHAR) + ' of this wait have been recorded. This wait often indicates killer performance problems.'
									FROM sys.[dm_os_wait_stats]
									WHERE wait_type = 'RESOURCE_SEMAPHORE_QUERY_COMPILE'
									GROUP BY wait_type
								    HAVING SUM([wait_time_ms]) > (SELECT 5000 * datediff(HH,create_date,CURRENT_TIMESTAMP) AS hours_since_startup FROM sys.databases WHERE name='tempdb')
									AND SUM([wait_time_ms]) > 60000
						END


					IF NOT EXISTS ( SELECT 1
										 FROM   #SkipChecks
										 WHERE  DatabaseName IS NULL AND CheckID = 121 )
						BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  121 AS CheckID ,
											50 AS Priority ,
											'Performance' AS FindingGroup ,
											'Poison Wait Detected: Serializable Locking'  AS Finding ,
											'http://BrentOzar.com/go/serializable' AS URL ,
											CAST(SUM([wait_time_ms]) / 10000 / 1000 / 60 / 60 / 24 AS VARCHAR) + CAST(CONVERT(TIME, DATEADD(ms, SUM([wait_time_ms] / 10000 % 1000), DATEADD(ss, SUM([wait_time_ms] / 10000000), 0))) AS VARCHAR) + ' of LCK_R% waits have been recorded. This wait often indicates killer performance problems.'
									FROM sys.[dm_os_wait_stats]
									WHERE wait_type LIKE '%LCK%R%'
								    HAVING SUM([wait_time_ms]) > (SELECT 5000 * datediff(HH,create_date,CURRENT_TIMESTAMP) AS hours_since_startup FROM sys.databases WHERE name='tempdb')
									AND SUM([wait_time_ms]) > 60000
						END




					IF @ProductVersionMajor >= 11 AND NOT EXISTS ( SELECT 1
										 FROM   #SkipChecks
										 WHERE  DatabaseName IS NULL AND CheckID = 162 )
						BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  162 AS CheckID ,
											50 AS Priority ,
											'Performance' AS FindingGroup ,
											'Poison Wait Detected: CMEMTHREAD & NUMA'  AS Finding ,
											'http://BrentOzar.com/go/poison' AS URL ,
											CAST(SUM([wait_time_ms]) / 10000 / 1000 / 60 / 60 / 24 AS VARCHAR) + CAST(CONVERT(TIME, DATEADD(ms, SUM([wait_time_ms] / 10000 % 1000), DATEADD(ss, SUM([wait_time_ms] / 10000000), 0))) AS VARCHAR) + ' of this wait have been recorded. In servers with over 8 cores per NUMA node, when CMEMTHREAD waits are a bottleneck, trace flag 8048 may be needed.'
									FROM sys.dm_os_nodes n 
									INNER JOIN sys.[dm_os_wait_stats] w ON w.wait_type = 'CMEMTHREAD'
									WHERE n.node_id = 0 AND n.online_scheduler_count >= 8
									GROUP BY w.wait_type
								    HAVING SUM([wait_time_ms]) > (SELECT 5000 * datediff(HH,create_date,CURRENT_TIMESTAMP) AS hours_since_startup FROM sys.databases WHERE name='tempdb')
									AND SUM([wait_time_ms]) > 60000;
						END




						IF NOT EXISTS ( SELECT 1
										 FROM   #SkipChecks
										 WHERE  DatabaseName IS NULL AND CheckID = 111 )
						BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  DatabaseName ,
									  URL ,
									  Details
									)
									SELECT  111 AS CheckID ,
											50 AS Priority ,
											'Reliability' AS FindingGroup ,
											'Possibly Broken Log Shipping'  AS Finding ,
											d.[name] ,
											'http://BrentOzar.com/go/shipping' AS URL ,
											d.[name] + ' is in a restoring state, but has not had a backup applied in the last two days. This is a possible indication of a broken transaction log shipping setup.'
											FROM [master].sys.databases d
											INNER JOIN [master].sys.database_mirroring dm ON d.database_id = dm.database_id
												AND dm.mirroring_role IS NULL
											WHERE ( d.[state] = 1
											OR (d.[state] = 0 AND d.[is_in_standby] = 1) )
											AND NOT EXISTS(SELECT * FROM msdb.dbo.restorehistory rh
											INNER JOIN msdb.dbo.backupset bs ON rh.backup_set_id = bs.backup_set_id
											WHERE d.[name] COLLATE SQL_Latin1_General_CP1_CI_AS = rh.destination_database_name COLLATE SQL_Latin1_General_CP1_CI_AS
											AND rh.restore_date >= DATEADD(dd, -2, GETDATE()))

						END


						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 112 )
									AND EXISTS (SELECT * FROM master.sys.all_objects WHERE name = 'change_tracking_databases')
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults
									(CheckID,
									Priority,
									FindingsGroup,
									Finding,
									URL,
									Details)
							  SELECT 112 AS CheckID,
							  100 AS Priority,
							  ''Performance'' AS FindingsGroup,
							  ''Change Tracking Enabled'' AS Finding,
							  ''http://BrentOzar.com/go/tracking'' AS URL,
							  ( d.[name] + '' has change tracking enabled. This is not a default setting, and it has some performance overhead. It keeps track of changes to rows in tables that have change tracking turned on.'' ) AS Details FROM sys.change_tracking_databases AS ctd INNER JOIN sys.databases AS d ON ctd.database_id = d.database_id';
										EXECUTE(@StringToExecute);
							END


						IF NOT EXISTS ( SELECT 1
										 FROM   #SkipChecks
										 WHERE  DatabaseName IS NULL AND CheckID = 116 )
									AND EXISTS (SELECT * FROM msdb.sys.all_columns WHERE name = 'compressed_backup_size')
						BEGIN
							SET @StringToExecute = 'INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  116 AS CheckID ,
											200 AS Priority ,
											''Informational'' AS FindingGroup ,
											''Backup Compression Default Off''  AS Finding ,
											''http://BrentOzar.com/go/backup'' AS URL ,
											''Uncompressed full backups have happened recently, and backup compression is not turned on at the server level. Backup compression is included with SQL Server 2008R2 & newer, even in Standard Edition. We recommend turning backup compression on by default so that ad-hoc backups will get compressed.''
											FROM sys.configurations
											WHERE configuration_id = 1579 AND CAST(value_in_use AS INT) = 0
                                            AND EXISTS (SELECT * FROM msdb.dbo.backupset WHERE backup_size = compressed_backup_size AND type = ''D'' AND backup_finish_date >= DATEADD(DD, -14, GETDATE()));'
										EXECUTE(@StringToExecute);
						END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 117 )
									AND EXISTS (SELECT * FROM master.sys.all_objects WHERE name = 'dm_exec_query_resource_semaphores')
							BEGIN
								SET @StringToExecute = 'IF 0 < (SELECT SUM([forced_grant_count]) FROM sys.dm_exec_query_resource_semaphores WHERE [forced_grant_count] IS NOT NULL)
								INSERT INTO #BlitzResults
									(CheckID,
									Priority,
									FindingsGroup,
									Finding,
									URL,
									Details)
							  SELECT 117 AS CheckID,
							  100 AS Priority,
							  ''Performance'' AS FindingsGroup,
							  ''Memory Pressure Affecting Queries'' AS Finding,
							  ''http://BrentOzar.com/go/grants'' AS URL,
							  CAST(SUM(forced_grant_count) AS NVARCHAR(100)) + '' forced grants reported in the DMV sys.dm_exec_query_resource_semaphores, indicating memory pressure has affected query runtimes.''
							  FROM sys.dm_exec_query_resource_semaphores WHERE [forced_grant_count] IS NOT NULL;'
										EXECUTE(@StringToExecute);
							END



						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 124 )
							BEGIN
								INSERT INTO #BlitzResults
									(CheckID,
									Priority,
									FindingsGroup,
									Finding,
									URL,
									Details)
								SELECT 124, 150, 'Performance', 'Deadlocks Happening Daily', 'http://BrentOzar.com/go/deadlocks',
									CAST(p.cntr_value AS NVARCHAR(100)) + ' deadlocks have been recorded since startup.' AS Details
								FROM sys.dm_os_performance_counters p
									INNER JOIN sys.databases d ON d.name = 'tempdb'
								WHERE RTRIM(p.counter_name) = 'Number of Deadlocks/sec'
									AND RTRIM(p.instance_name) = '_Total'
									AND p.cntr_value > 0
									AND (1.0 * p.cntr_value / NULLIF(datediff(DD,create_date,CURRENT_TIMESTAMP),0)) > 10;
							END


						IF DATEADD(mi, -15, GETDATE()) < (SELECT TOP 1 creation_time FROM sys.dm_exec_query_stats ORDER BY creation_time)
						BEGIN
							INSERT INTO #BlitzResults
								(CheckID,
								Priority,
								FindingsGroup,
								Finding,
								URL,
								Details)
							SELECT TOP 1 125, 10, 'Performance', 'Plan Cache Erased Recently', 'http://BrentOzar.com/askbrent/plan-cache-erased-recently/',
								'The oldest query in the plan cache was created at ' + CAST(creation_time AS NVARCHAR(50)) + '. Someone ran DBCC FREEPROCCACHE, restarted SQL Server, or it is under horrific memory pressure.'
							FROM sys.dm_exec_query_stats WITH (NOLOCK)
							ORDER BY creation_time	
						END;

						IF EXISTS (SELECT * FROM sys.configurations WHERE name = 'priority boost' AND (value = 1 OR value_in_use = 1))
						BEGIN
							INSERT INTO #BlitzResults
								(CheckID,
								Priority,
								FindingsGroup,
								Finding,
								URL,
								Details)
							VALUES(126, 5, 'Reliability', 'Priority Boost Enabled', 'http://BrentOzar.com/go/priorityboost/',
								'Priority Boost sounds awesome, but it can actually cause your SQL Server to crash.')
						END;

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 128 )
							BEGIN

							IF (@ProductVersionMajor = 12 AND @ProductVersionMinor < 2000) OR
							   (@ProductVersionMajor = 11 AND @ProductVersionMinor <= 2100) OR
							   (@ProductVersionMajor = 10.5 AND @ProductVersionMinor <= 6000) OR
							   (@ProductVersionMajor = 10 AND @ProductVersionMinor <= 6000) OR
							   (@ProductVersionMajor = 9 /*AND @ProductVersionMinor <= 5000*/)
								BEGIN
								INSERT INTO #BlitzResults(CheckID, Priority, FindingsGroup, Finding, URL, Details)
									VALUES(128, 20, 'Reliability', 'Unsupported Build of SQL Server', 'http://BrentOzar.com/go/unsupported',
										'Version ' + CAST(@ProductVersionMajor AS VARCHAR(100)) + '.' + 
										CASE WHEN @ProductVersionMajor > 9 THEN
										CAST(@ProductVersionMinor AS VARCHAR(100)) + ' is no longer supported by Microsoft. You need to apply a service pack.'
										ELSE ' is no longer support by Microsoft. You should be making plans to upgrade to a modern version of SQL Server.' END);
								END;

							END;
							
						/* Reliability - Dangerous Build of SQL Server (Corruption) */
						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 129 )
							BEGIN
							IF (@ProductVersionMajor = 11 AND @ProductVersionMinor >= 3000 AND @ProductVersionMinor <= 3436) OR
							   (@ProductVersionMajor = 11 AND @ProductVersionMinor = 5058) OR
							   (@ProductVersionMajor = 12 AND @ProductVersionMinor >= 2000 AND @ProductVersionMinor <= 2342)
								BEGIN
								INSERT INTO #BlitzResults(CheckID, Priority, FindingsGroup, Finding, URL, Details)
									VALUES(129, 20, 'Reliability', 'Dangerous Build of SQL Server (Corruption)', 'http://sqlperformance.com/2014/06/sql-indexes/hotfix-sql-2012-rebuilds',
										'There are dangerous known bugs with version ' + CAST(@ProductVersionMajor AS VARCHAR(100)) + '.' + CAST(@ProductVersionMinor AS VARCHAR(100)) + '. Check the URL for details and apply the right service pack or hotfix.');
								END;

							END;

						/* Reliability - Dangerous Build of SQL Server (Security) */
						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 157 )
							BEGIN
							IF (@ProductVersionMajor = 10 AND @ProductVersionMinor >= 5500 AND @ProductVersionMinor <= 5512) OR
							   (@ProductVersionMajor = 10 AND @ProductVersionMinor >= 5750 AND @ProductVersionMinor <= 5867) OR
							   (@ProductVersionMajor = 10.5 AND @ProductVersionMinor >= 4000 AND @ProductVersionMinor <= 4017) OR
							   (@ProductVersionMajor = 10.5 AND @ProductVersionMinor >= 4251 AND @ProductVersionMinor <= 4319) OR
							   (@ProductVersionMajor = 11 AND @ProductVersionMinor >= 3000 AND @ProductVersionMinor <= 3129) OR
							   (@ProductVersionMajor = 11 AND @ProductVersionMinor >= 3300 AND @ProductVersionMinor <= 3447) OR
							   (@ProductVersionMajor = 12 AND @ProductVersionMinor >= 2000 AND @ProductVersionMinor <= 2253) OR
							   (@ProductVersionMajor = 12 AND @ProductVersionMinor >= 2300 AND @ProductVersionMinor <= 2370)
								BEGIN
								INSERT INTO #BlitzResults(CheckID, Priority, FindingsGroup, Finding, URL, Details)
									VALUES(157, 20, 'Reliability', 'Dangerous Build of SQL Server (Security)', 'https://technet.microsoft.com/en-us/library/security/MS14-044',
										'There are dangerous known bugs with version ' + CAST(@ProductVersionMajor AS VARCHAR(100)) + '.' + CAST(@ProductVersionMinor AS VARCHAR(100)) + '. Check the URL for details and apply the right service pack or hotfix.');
								END;

							END;


                        /* Performance - High Memory Use for In-Memory OLTP (Hekaton) */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 145 )
	                        AND EXISTS ( SELECT *
					                        FROM   sys.all_objects o
					                        WHERE  o.name = 'dm_db_xtp_table_memory_stats' )
	                        BEGIN
		                        SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
			                        SELECT 145 AS CheckID,
			                        10 AS Priority,
			                        ''Performance'' AS FindingsGroup,
			                        ''High Memory Use for In-Memory OLTP (Hekaton)'' AS Finding,
			                        ''http://BrentOzar.com/go/hekaton'' AS URL,
			                        CAST(CAST((SUM(mem.pages_kb / 1024.0) / CAST(value_in_use AS INT) * 100) AS INT) AS NVARCHAR(100)) + ''% of your '' + CAST(CAST((CAST(value_in_use AS DECIMAL(38,1)) / 1024) AS MONEY) AS NVARCHAR(100)) + ''GB of your max server memory is being used for in-memory OLTP tables (Hekaton). Microsoft recommends having 2X your Hekaton table space available in memory just for Hekaton, with a max of 250GB of in-memory data regardless of your server memory capacity.'' AS Details
			                        FROM sys.configurations c INNER JOIN sys.dm_os_memory_clerks mem ON mem.type = ''MEMORYCLERK_XTP''
                                    WHERE c.name = ''max server memory (MB)''
                                    GROUP BY c.value_in_use
                                    HAVING CAST(value_in_use AS DECIMAL(38,2)) * .25 < SUM(mem.pages_kb / 1024.0)
                                      OR SUM(mem.pages_kb / 1024.0) > 250000';
		                        EXECUTE(@StringToExecute);
	                        END


                        /* Performance - In-Memory OLTP (Hekaton) In Use */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 146 )
	                        AND EXISTS ( SELECT *
					                        FROM   sys.all_objects o
					                        WHERE  o.name = 'dm_db_xtp_table_memory_stats' )
	                        BEGIN
		                        SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
			                        SELECT 146 AS CheckID,
			                        200 AS Priority,
			                        ''Performance'' AS FindingsGroup,
			                        ''In-Memory OLTP (Hekaton) In Use'' AS Finding,
			                        ''http://BrentOzar.com/go/hekaton'' AS URL,
			                        CAST(CAST((SUM(mem.pages_kb / 1024.0) / CAST(value_in_use AS INT) * 100) AS INT) AS NVARCHAR(100)) + ''% of your '' + CAST(CAST((CAST(value_in_use AS DECIMAL(38,1)) / 1024) AS MONEY) AS NVARCHAR(100)) + ''GB of your max server memory is being used for in-memory OLTP tables (Hekaton).'' AS Details
			                        FROM sys.configurations c INNER JOIN sys.dm_os_memory_clerks mem ON mem.type = ''MEMORYCLERK_XTP''
                                    WHERE c.name = ''max server memory (MB)''
                                    GROUP BY c.value_in_use
                                    HAVING SUM(mem.pages_kb / 1024.0) > 10';
		                        EXECUTE(@StringToExecute);
	                        END

                        /* In-Memory OLTP (Hekaton) - Transaction Errors */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 147 )
	                        AND EXISTS ( SELECT *
					                        FROM   sys.all_objects o
					                        WHERE  o.name = 'dm_xtp_transaction_stats' )
	                        BEGIN
		                        SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
			                        SELECT 147 AS CheckID,
			                        100 AS Priority,
			                        ''In-Memory OLTP (Hekaton)'' AS FindingsGroup,
			                        ''Transaction Errors'' AS Finding,
			                        ''http://BrentOzar.com/go/hekaton'' AS URL,
			                        ''Since restart: '' + CAST(validation_failures AS NVARCHAR(100)) + '' validation failures, '' + CAST(dependencies_failed AS NVARCHAR(100)) + '' dependency failures, '' + CAST(write_conflicts AS NVARCHAR(100)) + '' write conflicts, '' + CAST(unique_constraint_violations AS NVARCHAR(100)) + '' unique constraint violations.'' AS Details
			                        FROM sys.dm_xtp_transaction_stats
                                    WHERE validation_failures <> 0
                                            OR dependencies_failed <> 0
                                            OR write_conflicts <> 0
                                            OR unique_constraint_violations <> 0;'
		                        EXECUTE(@StringToExecute);
	                        END



                        /* Reliability - Database Files on Network File Shares */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 148 )
	                        BEGIN
		                        INSERT  INTO #BlitzResults
				                        ( CheckID ,
					                        DatabaseName ,
					                        Priority ,
					                        FindingsGroup ,
					                        Finding ,
					                        URL ,
					                        Details
				                        )
				                        SELECT DISTINCT 148 AS CheckID ,
						                        d.[name] AS DatabaseName ,
						                        170 AS Priority ,
						                        'Reliability' AS FindingsGroup ,
						                        'Database Files on Network File Shares' AS Finding ,
						                        'http://BrentOzar.com/go/nas' AS URL ,
						                        ( 'Files for this database are on: ' + LEFT(mf.physical_name, 30)) AS Details
				                        FROM    sys.databases d
                                          INNER JOIN sys.master_files mf ON d.database_id = mf.database_id
				                        WHERE mf.physical_name LIKE '\\%'
						                        AND d.name NOT IN ( SELECT DISTINCT
													                        DatabaseName
											                        FROM    #SkipChecks 
																	WHERE CheckID IS NULL)
	                        END

                        /* Reliability - Database Files Stored in Azure */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 149 )
	                        BEGIN
		                        INSERT  INTO #BlitzResults
				                        ( CheckID ,
					                        DatabaseName ,
					                        Priority ,
					                        FindingsGroup ,
					                        Finding ,
					                        URL ,
					                        Details
				                        )
				                        SELECT DISTINCT 149 AS CheckID ,
						                        d.[name] AS DatabaseName ,
						                        170 AS Priority ,
						                        'Reliability' AS FindingsGroup ,
						                        'Database Files Stored in Azure' AS Finding ,
						                        'http://BrentOzar.com/go/azurefiles' AS URL ,
						                        ( 'Files for this database are on: ' + LEFT(mf.physical_name, 30)) AS Details
				                        FROM    sys.databases d
                                          INNER JOIN sys.master_files mf ON d.database_id = mf.database_id
				                        WHERE mf.physical_name LIKE 'http://%'
						                        AND d.name NOT IN ( SELECT DISTINCT
													                        DatabaseName
											                        FROM    #SkipChecks 
																	WHERE CheckID IS NULL)
	                        END


                        /* Reliability - Errors Logged Recently in the Default Trace */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 150 )
                            AND @TracePath IS NOT NULL
	                        BEGIN

		                        INSERT  INTO #BlitzResults
				                        ( CheckID ,
					                        DatabaseName ,
					                        Priority ,
					                        FindingsGroup ,
					                        Finding ,
					                        URL ,
					                        Details
				                        )
				                        SELECT DISTINCT 150 AS CheckID ,
					                            t.DatabaseName,
						                        50 AS Priority ,
						                        'Reliability' AS FindingsGroup ,
						                        'Errors Logged Recently in the Default Trace' AS Finding ,
						                        'http://BrentOzar.com/go/defaulttrace' AS URL ,
						                         CAST(t.TextData AS NVARCHAR(4000)) AS Details
                                        FROM    sys.fn_trace_gettable(@TracePath, DEFAULT) t
                                        WHERE t.EventClass = 22
                                          AND t.Severity >= 17
                                          AND t.StartTime > DATEADD(dd, -30, GETDATE())
	                        END


                        /* Performance - Log File Growths Slow */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 151 )
                            AND @TracePath IS NOT NULL
	                        BEGIN
		                        INSERT  INTO #BlitzResults
				                        ( CheckID ,
					                        DatabaseName ,
					                        Priority ,
					                        FindingsGroup ,
					                        Finding ,
					                        URL ,
					                        Details
				                        )
				                        SELECT DISTINCT 151 AS CheckID ,
					                            t.DatabaseName,
						                        50 AS Priority ,
						                        'Performance' AS FindingsGroup ,
						                        'Log File Growths Slow' AS Finding ,
						                        'http://BrentOzar.com/go/filegrowth' AS URL ,
						                        CAST(COUNT(*) AS NVARCHAR(100)) + ' growths took more than 15 seconds each. Consider setting log file autogrowth to a smaller increment.' AS Details
                                        FROM    sys.fn_trace_gettable(@TracePath, DEFAULT) t
                                        WHERE t.EventClass = 93
                                          AND t.StartTime > DATEADD(dd, -30, GETDATE())
                                          AND t.Duration > 15000000
                                        GROUP BY t.DatabaseName
                                        HAVING COUNT(*) > 1
	                        END


                        /* Performance - Many Plans for One Query */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 160 )
                            AND EXISTS (SELECT * FROM sys.all_columns WHERE name = 'query_hash')
	                        BEGIN
		                        SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
			                        SELECT TOP 1 160 AS CheckID,
			                        100 AS Priority,
			                        ''Performance'' AS FindingsGroup,
			                        ''Many Plans for One Query'' AS Finding,
			                        ''http://BrentOzar.com/go/parameterization'' AS URL,
			                        CAST(COUNT(DISTINCT plan_handle) AS NVARCHAR(50)) + '' plans are present for a single query in the plan cache - meaning we probably have parameterization issues.'' AS Details
			                        FROM sys.dm_exec_query_stats qs
                                    CROSS APPLY sys.dm_exec_plan_attributes(qs.plan_handle) pa
                                    WHERE pa.attribute = ''dbid''
                                    GROUP BY qs.query_hash, pa.value
                                    HAVING COUNT(DISTINCT plan_handle) > 50
									ORDER BY COUNT(DISTINCT plan_handle) DESC;';
		                        EXECUTE(@StringToExecute);
	                        END


                        /* Performance - High Number of Cached Plans */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 161 )
	                        BEGIN
		                        SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
			                        SELECT TOP 1 161 AS CheckID,
			                        100 AS Priority,
			                        ''Performance'' AS FindingsGroup,
			                        ''High Number of Cached Plans'' AS Finding,
			                        ''http://BrentOzar.com/go/planlimits'' AS URL,
			                        ''Your server configuration is limited to '' + CAST(ht.buckets_count * 4 AS VARCHAR(20)) + '' '' + ht.name + '', and you are currently caching '' + CAST(cc.entries_count AS VARCHAR(20)) + ''.'' AS Details
			                        FROM sys.dm_os_memory_cache_hash_tables ht
			                        INNER JOIN sys.dm_os_memory_cache_counters cc ON ht.name = cc.name AND ht.type = cc.type
			                        where ht.name IN ( ''SQL Plans'' , ''Object Plans'' , ''Bound Trees'' )
			                        AND cc.entries_count >= (3 * ht.buckets_count)';
		                        EXECUTE(@StringToExecute);
	                        END


						/* Performance - Too Much Free Memory */
						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 165 )
							BEGIN
								INSERT INTO #BlitzResults
									(CheckID,
									Priority,
									FindingsGroup,
									Finding,
									URL,
									Details)
								SELECT 165, 50, 'Performance', 'Too Much Free Memory', 'http://BrentOzar.com/go/freememory',
									CAST((CAST(cFree.cntr_value AS BIGINT) / 1024 / 1024 ) AS NVARCHAR(100)) + N'GB of free memory inside SQL Server''s buffer pool, which is ' + CAST((CAST(cTotal.cntr_value AS BIGINT) / 1024 / 1024) AS NVARCHAR(100)) + N'GB. You would think lots of free memory would be good, but check out the URL for more information.' AS Details
								FROM sys.dm_os_performance_counters cFree
								INNER JOIN sys.dm_os_performance_counters cTotal ON cTotal.object_name LIKE N'%Memory Manager%'
									AND cTotal.counter_name = N'Total Server Memory (KB)                                                                                                        '
								WHERE cFree.object_name LIKE N'%Memory Manager%'
									AND cFree.counter_name = N'Free Memory (KB)                                                                                                                '
									AND CAST(cTotal.cntr_value AS BIGINT) * .3 <= CAST(cFree.cntr_value AS BIGINT)
                                    AND CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) NOT LIKE '%Standard%'

							END


                        /* Outdated sp_Blitz - sp_Blitz is Over 6 Months Old */
                        IF NOT EXISTS ( SELECT  1
				                        FROM    #SkipChecks
				                        WHERE   DatabaseName IS NULL AND CheckID = 155 )
				           AND DATEDIFF(MM, @VersionDate, GETDATE()) > 6
	                        BEGIN
		                        INSERT  INTO #BlitzResults
				                        ( CheckID ,
					                        Priority ,
					                        FindingsGroup ,
					                        Finding ,
					                        URL ,
					                        Details
				                        )
				                        SELECT 155 AS CheckID ,
						                        0 AS Priority ,
						                        'Outdated sp_Blitz' AS FindingsGroup ,
						                        'sp_Blitz is Over 6 Months Old' AS Finding ,
						                        'http://www.BrentOzar.com/blitz/' AS URL ,
						                        'Some things get better with age, like fine wine and your T-SQL. However, sp_Blitz is not one of those things - time to go download the current one.' AS Details
	                        END


						/* Populate a list of database defaults. I'm doing this kind of oddly -
						    it reads like a lot of work, but this way it compiles & runs on all
						    versions of SQL Server.
						*/
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_supplemental_logging_enabled', 0, 131, 210, 'Supplemental Logging Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_supplemental_logging_enabled' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'snapshot_isolation_state', 0, 132, 210, 'Snapshot Isolation Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'snapshot_isolation_state' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_read_committed_snapshot_on', 0, 133, 210, 'Read Committed Snapshot Isolation Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_read_committed_snapshot_on' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_auto_create_stats_incremental_on', 0, 134, 210, 'Auto Create Stats Incremental Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_auto_create_stats_incremental_on' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_ansi_null_default_on', 0, 135, 210, 'ANSI NULL Default Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_ansi_null_default_on' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_recursive_triggers_on', 0, 136, 210, 'Recursive Triggers Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_recursive_triggers_on' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_trustworthy_on', 0, 137, 210, 'Trustworthy Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_trustworthy_on' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_parameterization_forced', 0, 138, 210, 'Forced Parameterization Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_parameterization_forced' AND object_id = OBJECT_ID('sys.databases');
						/* Not alerting for this since we actually want it and we have a separate check for it:
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_query_store_on', 0, 139, 210, 'Query Store Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_query_store_on' AND object_id = OBJECT_ID('sys.databases');
						*/
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_cdc_enabled', 0, 140, 210, 'Change Data Capture Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_cdc_enabled' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'containment', 0, 141, 210, 'Containment Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'containment' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'target_recovery_time_in_seconds', 0, 142, 210, 'Target Recovery Time Changed', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'target_recovery_time_in_seconds' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'delayed_durability', 0, 143, 210, 'Delayed Durability Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'delayed_durability' AND object_id = OBJECT_ID('sys.databases');
						INSERT INTO #DatabaseDefaults
						  SELECT 'is_memory_optimized_elevate_to_snapshot_on', 0, 144, 210, 'Memory Optimized Enabled', 'http://BrentOzar.com/go/dbdefaults', NULL
						  FROM sys.all_columns 
						  WHERE name = 'is_memory_optimized_elevate_to_snapshot_on' AND object_id = OBJECT_ID('sys.databases');

						DECLARE DatabaseDefaultsLoop CURSOR FOR
						  SELECT name, DefaultValue, CheckID, Priority, Finding, URL, Details
						  FROM #DatabaseDefaults

						OPEN DatabaseDefaultsLoop
						FETCH NEXT FROM DatabaseDefaultsLoop into @CurrentName, @CurrentDefaultValue, @CurrentCheckID, @CurrentPriority, @CurrentFinding, @CurrentURL, @CurrentDetails
						WHILE @@FETCH_STATUS = 0
						BEGIN 

							/* DW* databases ship with Target Recovery Time (142) set to a non-default number */
						    IF @CurrentCheckID = 142
								SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details)
								   SELECT ' + CAST(@CurrentCheckID AS NVARCHAR(200)) + ', d.[name], ' + CAST(@CurrentPriority AS NVARCHAR(200)) + ', ''Non-Default Database Config'', ''' + @CurrentFinding + ''',''' + @CurrentURL + ''',''' + COALESCE(@CurrentDetails, 'This database setting is not the default.') + '''
									FROM sys.databases d
									WHERE d.database_id > 4 AND d.[name] NOT IN (''DWConfiguration'', ''DWDiagnostics'', ''DWQueue'') AND (d.[' + @CurrentName + '] <> ' + @CurrentDefaultValue + ' OR d.[' + @CurrentName + '] IS NULL);';
							ELSE
								SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details)
								   SELECT ' + CAST(@CurrentCheckID AS NVARCHAR(200)) + ', d.[name], ' + CAST(@CurrentPriority AS NVARCHAR(200)) + ', ''Non-Default Database Config'', ''' + @CurrentFinding + ''',''' + @CurrentURL + ''',''' + COALESCE(@CurrentDetails, 'This database setting is not the default.') + '''
									FROM sys.databases d
									WHERE d.database_id > 4 AND (d.[' + @CurrentName + '] <> ' + @CurrentDefaultValue + ' OR d.[' + @CurrentName + '] IS NULL);';
						    EXEC (@StringToExecute);

						FETCH NEXT FROM DatabaseDefaultsLoop into @CurrentName, @CurrentDefaultValue, @CurrentCheckID, @CurrentPriority, @CurrentFinding, @CurrentURL, @CurrentDetails 
						END

						CLOSE DatabaseDefaultsLoop
						DEALLOCATE DatabaseDefaultsLoop;
							

/*This checks to see if Agent is Offline*/
IF @ProductVersionMajor >= 10 AND @ProductVersionMinor >= 50 
			   AND NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 167 )
					BEGIN
					IF EXISTS ( SELECT  1
											FROM    sys.all_objects
											WHERE   name = 'dm_server_services' )
									BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							167 AS [CheckID] ,
							250 AS [Priority] ,
							'Server Info' AS [FindingsGroup] ,
							'Agent is Currently Offline' AS [Finding] ,
							'' AS [URL] ,
							( 'Oops! It looks like the ' + [servicename] + ' service is ' + [status_desc] + '. The startup type is ' + [startup_type_desc] + '.'
							   ) AS [Details]
						  FROM
							[sys].[dm_server_services]
						  WHERE [status_desc] <> 'Running'
						  AND [servicename] LIKE 'SQL Server Agent%'

					END; 
				END;

/*This checks to see if the Full Text thingy is offline*/
IF @ProductVersionMajor >= 10 AND @ProductVersionMinor >= 50 
			   AND NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 168 )
					BEGIN
					IF EXISTS ( SELECT  1
											FROM    sys.all_objects
											WHERE   name = 'dm_server_services' )
					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							168 AS [CheckID] ,
							250 AS [Priority] ,
							'Server Info' AS [FindingsGroup] ,
							'Full-text Filter Daemon Launcher is Currently Offline' AS [Finding] ,
							'' AS [URL] ,
							( 'Oops! It looks like the ' + [servicename] + ' service is ' + [status_desc] + '. The startup type is ' + [startup_type_desc] + '.'
							   ) AS [Details]
						  FROM
							[sys].[dm_server_services]
						  WHERE [status_desc] <> 'Running'
						  AND [servicename] LIKE 'SQL Full-text Filter Daemon Launcher%'

					END;
					END; 

/*This checks which service account SQL Server is running as.*/
IF @ProductVersionMajor >= 10 AND @ProductVersionMinor >= 50 
			   AND NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 169 )

					BEGIN
					IF EXISTS ( SELECT  1
											FROM    sys.all_objects
											WHERE   name = 'dm_server_services' )
					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							169 AS [CheckID] ,
							250 AS [Priority] ,
							'Informational' AS [FindingsGroup] ,
							'SQL Server is running under an NT Service account' AS [Finding] ,
							'http://BrentOzar.com/go/setup' AS [URL] ,
							( 'I''m running as ' + [service_account] + '. I wish I had an Active Directory service account instead.'
							   ) AS [Details]
						  FROM
							[sys].[dm_server_services]
						  WHERE [service_account] LIKE 'NT Service%'
						  AND [servicename] LIKE 'SQL Server%'
						  AND [servicename] NOT LIKE 'SQL Server Agent%'

					END;
					END;

/*This checks which service account SQL Agent is running as.*/
IF @ProductVersionMajor >= 10 AND @ProductVersionMinor >= 50 
			   AND NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 170 )

					BEGIN
					IF EXISTS ( SELECT  1
											FROM    sys.all_objects
											WHERE   name = 'dm_server_services' )
					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							170 AS [CheckID] ,
							250 AS [Priority] ,
							'Informational' AS [FindingsGroup] ,
							'SQL Server Agent is running under an NT Service account' AS [Finding] ,
							'http://BrentOzar.com/go/setup' AS [URL] ,
							( 'I''m running as ' + [service_account] + '. I wish I had an Active Directory service account instead.'
							   ) AS [Details]
						  FROM
							[sys].[dm_server_services]
						  WHERE [service_account] LIKE 'NT Service%'
						  AND [servicename] LIKE 'SQL Server Agent%'

					END; 
					END;

/*This counts memory dumps and gives min and max date of in view*/
IF @ProductVersionMajor >= 10 AND @ProductVersionMinor >= 50 
			   AND NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 171 )
					BEGIN
					IF EXISTS ( SELECT  1
											FROM    sys.all_objects
											WHERE   name = 'dm_server_memory_dumps' )
					BEGIN
						IF 5 <= (SELECT COUNT(*) FROM [sys].[dm_server_memory_dumps] WHERE [creation_time] >= DATEADD(year, -1, GETDATE()))
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							171 AS [CheckID] ,
							20 AS [Priority] ,
							'Reliability' AS [FindingsGroup] ,
							'Memory Dumps Have Occurred' AS [Finding] ,
							'http://BrentOzar.com/go/dump' AS [URL] ,
							( 'That ain''t good. I''ve had ' + 
								CAST(COUNT(*) AS VARCHAR(100)) + ' memory dumps between ' + 
								CAST(CAST(MIN([creation_time]) AS DATETIME) AS VARCHAR(100)) +
								' and ' +
								CAST(CAST(MAX([creation_time]) AS DATETIME) AS VARCHAR(100)) +
								'!'
							   ) AS [Details]
						  FROM
							[sys].[dm_server_memory_dumps]
						  WHERE [creation_time] >= DATEADD(year, -1, GETDATE());

					END; 
					END;

/*Checks to see if you're on Developer or Evaluation*/
					IF	NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 173 )
					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							173 AS [CheckID] ,
							200 AS [Priority] ,
							'Licensing' AS [FindingsGroup] ,
							'Non-Production License' AS [Finding] ,
							'http://BrentOzar.com/go/licensing' AS [URL] ,
							( 'We''re not the licensing police, but if this is supposed to be a production server, and you''re running ' + 
							CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) +
							' the good folks at Microsoft might get upset with you. Better start counting those cores.'
							   ) AS [Details]
							WHERE CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) LIKE '%Developer%'
							OR CAST(SERVERPROPERTY('edition') AS VARCHAR(100)) LIKE '%Evaluation%'

					END

/*Checks to see if Buffer Pool Extensions are in use*/
			IF @ProductVersionMajor >= 12  
			   AND NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 174 )
					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							174 AS [CheckID] ,
							200 AS [Priority] ,
							'Performance' AS [FindingsGroup] ,
							'Buffer Pool Extensions Enabled' AS [Finding] ,
							'http://BrentOzar.com/go/bpe' AS [URL] ,
							( 'You have Buffer Pool Extensions enabled, and one lives here: ' + 
								[path] +
								'. It''s currently ' +
								CASE WHEN [current_size_in_kb] / 1024. / 1024. > 0
																	 THEN CAST([current_size_in_kb] / 1024. / 1024. AS VARCHAR(100))
																		  + ' GB'
																	 ELSE CAST([current_size_in_kb] / 1024. AS VARCHAR(100))
																		  + ' MB'
								END +
								'. Did you know that BPEs only provide single threaded access 8 bytes at a time?'	
							   ) AS [Details]
							 FROM sys.dm_os_buffer_pool_extension_configuration
							 WHERE [state_description] <> 'BUFFER POOL EXTENSION DISABLED'

					END

/*Check for too many tempdb files*/
			IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 175 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
										SELECT DISTINCT
										175 AS CheckID ,
										'TempDB' AS DatabaseName ,
										170 AS Priority ,
										'File Configuration' AS FindingsGroup ,
										'TempDB Has >16 Data Files' AS Finding ,
										'http://BrentOzar.com/go/tempdb' AS URL ,
										'Woah, Nelly! TempDB has ' + CAST(COUNT_BIG(*) AS VARCHAR) + '. Did you forget to terminate a loop somewhere?' AS Details
								  FROM sys.[master_files] AS [mf] 
								  WHERE [mf].[database_id] = 2 AND [mf].[type] = 0
								  HAVING COUNT_BIG(*) > 16; 
					END	

			IF NOT EXISTS ( SELECT  1
											FROM    #SkipChecks
											WHERE   DatabaseName IS NULL AND CheckID = 176 )
			IF EXISTS ( SELECT  1
														FROM    sys.all_objects
														WHERE   name = 'dm_xe_sessions' )
								BEGIN
								BEGIN
									INSERT  INTO #BlitzResults
											( CheckID ,
											  DatabaseName ,
											  Priority ,
											  FindingsGroup ,
											  Finding ,
											  URL ,
											  Details
											)
													SELECT DISTINCT
													176 AS CheckID ,
													'' AS DatabaseName ,
													200 AS Priority ,
													'Monitoring' AS FindingsGroup ,
													'Extended Events Hyperextension' AS Finding ,
													'http://BrentOzar.com/go/xe' AS URL ,
													'Hey big spender, you have ' + CAST(COUNT_BIG(*) AS VARCHAR) + ' Extended Events sessions running. You sure you meant to do that?' AS Details
											    FROM sys.dm_xe_sessions
												WHERE [name] NOT IN
												('system_health', 'sp_server_diagnostics session', 'hkenginexesession'
												)
											  HAVING COUNT_BIG(*) >= 2; 
								END	
								END
			
			/*Harmful startup parameter*/
			IF NOT EXISTS ( SELECT  1
											FROM    #SkipChecks
											WHERE   DatabaseName IS NULL AND CheckID = 177 )
								BEGIN
								IF EXISTS ( SELECT  1
														FROM    sys.all_objects
														WHERE   name = 'dm_server_registry' )
			
								BEGIN
									INSERT  INTO #BlitzResults
											( CheckID ,
											  DatabaseName ,
											  Priority ,
											  FindingsGroup ,
											  Finding ,
											  URL ,
											  Details
											)
													SELECT DISTINCT
													177 AS CheckID ,
													'' AS DatabaseName ,
													5 AS Priority ,
													'Monitoring' AS FindingsGroup ,
													'Disabled Internal Monitoring Features' AS Finding ,
													'https://msdn.microsoft.com/en-us/library/ms190737.aspx' AS URL ,
													'You have -x as a startup parameter. You should head to the URL and read more about what it does to your system.' AS Details
													FROM
													[sys].[dm_server_registry] AS [dsr]
													WHERE
													[dsr].[registry_key] LIKE N'%MSSQLServer\Parameters'
													AND [dsr].[value_data] = '-x';; 
								END		
								END
			
			
			/* Reliability - Dangerous Third Party Modules - 179 */
			IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 179 )
					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							179 AS [CheckID] ,
							5 AS [Priority] ,
							'Reliability' AS [FindingsGroup] ,
							'Dangerous Third Party Modules' AS [Finding] ,
							'https://support.microsoft.com/en-us/kb/2033238' AS [URL] ,
							( COALESCE(company, '') + ' - ' + COALESCE(description, '') + ' - ' + COALESCE(name, '') + ' - suspected dangerous third party module is installed.') AS [Details]
							FROM sys.dm_os_loaded_modules 
							WHERE UPPER(name) LIKE UPPER('%\ENTAPI.DLL') /* McAfee VirusScan Enterprise */
							OR UPPER(name) LIKE UPPER('%\HIPI.DLL') OR UPPER(name) LIKE UPPER('%\HcSQL.dll') OR UPPER(name) LIKE UPPER('%\HcApi.dll') OR UPPER(name) LIKE UPPER('%\HcThe.dll') /* McAfee Host Intrusion */
							OR UPPER(name) LIKE UPPER('%\SOPHOS_DETOURED.DLL') OR UPPER(name) LIKE UPPER('%\SOPHOS_DETOURED_x64.DLL') OR UPPER(name) LIKE UPPER('%\SWI_IFSLSP_64.dll') /* Sophos AV */
							OR UPPER(name) LIKE UPPER('%\PIOLEDB.DLL') OR UPPER(name) LIKE UPPER('%\PISDK.DLL') /* OSISoft PI data access */

					END

			/*Find shrink database tasks*/

			IF NOT EXISTS ( SELECT  1
											FROM    #SkipChecks
											WHERE   DatabaseName IS NULL AND CheckID = 180 )
					BEGIN
						;
						WITH XMLNAMESPACES ('www.microsoft.com/SqlServer/Dts' AS [dts])
						,[maintenance_plan_steps] AS (
							SELECT [name]
								, CAST(CAST([packagedata] AS VARBINARY(MAX)) AS XML) AS [maintenance_plan_xml]
							FROM [msdb].[dbo].[sysssispackages]
							WHERE [packagetype] = 6
						   )
							INSERT    INTO [#BlitzResults]
									( [CheckID] ,
										[Priority] ,
										[FindingsGroup] ,
										[Finding] ,
										[URL] ,
										[Details] )									  
						SELECT
						180 AS [CheckID] ,
						100 AS [Priority] ,
						'Performance' AS [FindingsGroup] ,
						'Shrink Database Step In Maintenance Plan' AS [Finding] ,
						'http://BrentOzar.com/go/autoshrink' AS [URL] ,									  
						'The maintenance plan ' + [mps].[name] + ' has a step to shrink databases in it. Shrinking databases is as outdated as maintenance plans.' AS [Details] 
						FROM [maintenance_plan_steps] [mps]
							CROSS APPLY [maintenance_plan_xml].[nodes]('//dts:Executables/dts:Executable') [t]([c])
						WHERE [c].[value]('(@dts:ObjectName)', 'VARCHAR(128)') = 'Shrink Database Task'

						END


		/*Find repetitive maintenance tasks*/
		IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 181 )
				BEGIN
						;
						WITH XMLNAMESPACES ('www.microsoft.com/SqlServer/Dts' AS [dts])
						,[maintenance_plan_steps] AS (
							SELECT [name]
								, CAST(CAST([packagedata] AS VARBINARY(MAX)) AS XML) AS [maintenance_plan_xml]
							FROM [msdb].[dbo].[sysssispackages]
							WHERE [packagetype] = 6
							), [maintenance_plan_table] AS (
						SELECT [mps].[name]
							,[c].[value]('(@dts:ObjectName)', 'NVARCHAR(128)') AS [step_name]
						FROM [maintenance_plan_steps] [mps]
							CROSS APPLY [maintenance_plan_xml].[nodes]('//dts:Executables/dts:Executable') [t]([c])
						), [mp_steps_pretty] AS (SELECT DISTINCT [m1].[name] ,
								STUFF((SELECT N', ' + [m2].[step_name]  FROM [maintenance_plan_table] AS [m2] WHERE [m1].[name] = [m2].[name] 
								FOR XML PATH(N'')), 1, 2, N'') AS [maintenance_plan_steps]
						FROM [maintenance_plan_table] AS [m1])
						
							INSERT    INTO [#BlitzResults]
									( [CheckID] ,
										[Priority] ,
										[FindingsGroup] ,
										[Finding] ,
										[URL] ,
										[Details] )						
						
						SELECT
						181 AS [CheckID] ,
						100 AS [Priority] ,
						'Performance' AS [FindingsGroup] ,
						'Repetitive Steps In Maintenance Plans' AS [Finding] ,
						'https://ola.hallengren.com/' AS [URL] , 
						'The maintenance plan ' + [m].[name] + ' is doing repetitive work on indexes and statistics. Perhaps it''s time to try something more modern?' AS [Details]
						FROM [mp_steps_pretty] m
						WHERE m.[maintenance_plan_steps] LIKE '%Rebuild%Reorganize%'
						OR m.[maintenance_plan_steps] LIKE '%Rebuild%Update%'

						END
			

				IF @CheckUserDatabaseObjects = 1
					BEGIN

                        /*
                        But what if you need to run a query in every individual database?
				        Check out CheckID 99 below. Yes, it uses sp_MSforeachdb, and no,
				        we're not happy about that. sp_MSforeachdb is known to have a lot
				        of issues, like skipping databases sometimes. However, this is the
				        only built-in option that we have. If you're writing your own code
				        for database maintenance, consider Aaron Bertrand's alternative:
				        http://www.mssqltips.com/sqlservertip/2201/making-a-more-reliable-and-flexible-spmsforeachdb/
				        We don't include that as part of sp_Blitz, of course, because
				        copying and distributing copyrighted code from others without their
				        written permission isn't a good idea.
				        */
				        IF NOT EXISTS ( SELECT  1
								        FROM    #SkipChecks
								        WHERE   DatabaseName IS NULL AND CheckID = 99 )
					        BEGIN
						        EXEC dbo.sp_MSforeachdb 'USE [?];  IF EXISTS (SELECT * FROM  sys.tables WITH (NOLOCK) WHERE name = ''sysmergepublications'' ) IF EXISTS ( SELECT * FROM sysmergepublications WITH (NOLOCK) WHERE retention = 0)   INSERT INTO #BlitzResults (CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details) SELECT DISTINCT 99, DB_NAME(), 110, ''Performance'', ''Infinite merge replication metadata retention period'', ''http://BrentOzar.com/go/merge'', (''The ['' + DB_NAME() + ''] database has merge replication metadata retention period set to infinite - this can be the case of significant performance issues.'')';
					        END
				        /*
				        Note that by using sp_MSforeachdb, we're running the query in all
				        databases. We're not checking #SkipChecks here for each database to
				        see if we should run the check in this database. That means we may
				        still run a skipped check if it involves sp_MSforeachdb. We just
				        don't output those results in the last step.
                        */


						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 163 )
                            AND EXISTS(SELECT * FROM sys.all_objects WHERE name = 'database_query_store_options')
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
			                            INSERT INTO #BlitzResults
			                            (CheckID,
			                            DatabaseName,
			                            Priority,
			                            FindingsGroup,
			                            Finding,
			                            URL,
			                            Details)
		                              SELECT TOP 1 163,
		                              ''?'',
		                              10,
		                              ''Performance'',
		                              ''Query Store Disabled'',
		                              ''http://BrentOzar.com/go/querystore'',
		                              (''The new SQL Server 2016 Query Store feature has not been enabled on this database.'')
		                              FROM [?].sys.database_query_store_options WHERE desired_state = 0 AND ''?'' NOT IN (''master'', ''model'', ''msdb'', ''tempdb'', ''DWConfiguration'', ''DWDiagnostics'', ''DWQueue'', ''ReportServer'', ''ReportServerTempDB'')';
							END


				        IF NOT EXISTS ( SELECT  1
								        FROM    #SkipChecks
								        WHERE   DatabaseName IS NULL AND CheckID = 41 )
					        BEGIN
						        EXEC dbo.sp_MSforeachdb 'use [?];
		                              INSERT INTO #BlitzResults
		                              (CheckID,
		                              DatabaseName,
		                              Priority,
		                              FindingsGroup,
		                              Finding,
		                              URL,
		                              Details)
		                              SELECT 41,
		                              ''?'',
		                              170,
		                              ''File Configuration'',
		                              ''Multiple Log Files on One Drive'',
		                              ''http://BrentOzar.com/go/manylogs'',
		                              (''The ['' + DB_NAME() + ''] database has multiple log files on the '' + LEFT(physical_name, 1) + '' drive. This is not a performance booster because log file access is sequential, not parallel.'')
		                              FROM [?].sys.database_files WHERE type_desc = ''LOG''
			                            AND ''?'' <> ''[tempdb]''
		                              GROUP BY LEFT(physical_name, 1)
		                              HAVING COUNT(*) > 1';
					        END

				        IF NOT EXISTS ( SELECT  1
								        FROM    #SkipChecks
								        WHERE   DatabaseName IS NULL AND CheckID = 42 )
					        BEGIN
						        EXEC dbo.sp_MSforeachdb 'use [?];
			                            INSERT INTO #BlitzResults
			                            (CheckID,
			                            DatabaseName,
			                            Priority,
			                            FindingsGroup,
			                            Finding,
			                            URL,
			                            Details)
			                            SELECT DISTINCT 42,
			                            ''?'',
			                            170,
			                            ''File Configuration'',
			                            ''Uneven File Growth Settings in One Filegroup'',
			                            ''http://BrentOzar.com/go/grow'',
			                            (''The ['' + DB_NAME() + ''] database has multiple data files in one filegroup, but they are not all set up to grow in identical amounts.  This can lead to uneven file activity inside the filegroup.'')
			                            FROM [?].sys.database_files
			                            WHERE type_desc = ''ROWS''
			                            GROUP BY data_space_id
			                            HAVING COUNT(DISTINCT growth) > 1 OR COUNT(DISTINCT is_percent_growth) > 1';
					        END


				            IF NOT EXISTS ( SELECT  1
								            FROM    #SkipChecks
								            WHERE   DatabaseName IS NULL AND CheckID = 82 )
					            BEGIN
						            EXEC sp_MSforeachdb 'use [?];
		                                INSERT INTO #BlitzResults
		                                (CheckID,
		                                DatabaseName,
		                                Priority,
		                                FindingsGroup,
		                                Finding,
		                                URL, Details)
		                                SELECT  DISTINCT 82 AS CheckID,
		                                ''?'' as DatabaseName,
		                                170 AS Priority,
		                                ''File Configuration'' AS FindingsGroup,
		                                ''File growth set to percent'',
		                                ''http://brentozar.com/go/percentgrowth'' AS URL,
		                                ''The ['' + DB_NAME() + ''] database file '' + f.physical_name + '' has grown to '' + CAST((f.size * 8 / 1000000) AS NVARCHAR(10)) + '' GB, and is using percent filegrowth settings. This can lead to slow performance during growths if Instant File Initialization is not enabled.''
		                                FROM    [?].sys.database_files f
		                                WHERE   is_percent_growth = 1 and size > 128000 ';
					            END



                            /* addition by Henrik Staun Poulsen, Stovi Software */
				            IF NOT EXISTS ( SELECT  1
								            FROM    #SkipChecks
								            WHERE   DatabaseName IS NULL AND CheckID = 158 )
					            BEGIN
						            EXEC sp_MSforeachdb 'use [?];
		                                INSERT INTO #BlitzResults
		                                (CheckID,
		                                DatabaseName,
		                                Priority,
		                                FindingsGroup,
		                                Finding,
		                                URL, Details)
		                                SELECT  DISTINCT 158 AS CheckID,
		                                ''?'' as DatabaseName,
		                                170 AS Priority,
		                                ''File Configuration'' AS FindingsGroup,
		                                ''File growth set to 1MB'',
		                                ''http://brentozar.com/go/percentgrowth'' AS URL,
		                                ''The ['' + DB_NAME() + ''] database file '' + f.physical_name + '' is using 1MB filegrowth settings, but it has grown to '' + CAST((f.size * 8 / 1000000) AS NVARCHAR(10)) + '' GB. Time to up the growth amount.''
		                                FROM    [?].sys.database_files f
                                        WHERE is_percent_growth = 0 and growth=128 and size > 128000 ';
					            END



				        IF NOT EXISTS ( SELECT  1
								        FROM    #SkipChecks
								        WHERE   DatabaseName IS NULL AND CheckID = 33 )
					        BEGIN
						        IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
							        AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
							        BEGIN
								        EXEC dbo.sp_MSforeachdb 'USE [?]; INSERT INTO #BlitzResults
					                                (CheckID,
					                                DatabaseName,
					                                Priority,
					                                FindingsGroup,
					                                Finding,
					                                URL,
					                                Details)
		                                  SELECT DISTINCT 33,
		                                  db_name(),
		                                  200,
		                                  ''Licensing'',
		                                  ''Enterprise Edition Features In Use'',
		                                  ''http://BrentOzar.com/go/ee'',
		                                  (''The ['' + DB_NAME() + ''] database is using '' + feature_name + ''.  If this database is restored onto a Standard Edition server, the restore will fail.'')
		                                  FROM [?].sys.dm_db_persisted_sku_features';
							        END;
					        END


				        IF NOT EXISTS ( SELECT  1
								        FROM    #SkipChecks
								        WHERE   DatabaseName IS NULL AND CheckID = 19 )
					        BEGIN
						        /* Method 1: Check sys.databases parameters */
						        INSERT  INTO #BlitzResults
								        ( CheckID ,
								          DatabaseName ,
								          Priority ,
								          FindingsGroup ,
								          Finding ,
								          URL ,
								          Details
								        )

								        SELECT  19 AS CheckID ,
										        [name] AS DatabaseName ,
										        200 AS Priority ,
										        'Informational' AS FindingsGroup ,
										        'Replication In Use' AS Finding ,
										        'http://BrentOzar.com/go/repl' AS URL ,
										        ( 'Database [' + [name]
										          + '] is a replication publisher, subscriber, or distributor.' ) AS Details
								        FROM    sys.databases
								        WHERE   name NOT IN ( SELECT DISTINCT
																        DatabaseName
													          FROM      #SkipChecks 
													          WHERE CheckID IS NULL)
										        AND is_published = 1
										        OR is_subscribed = 1
										        OR is_merge_published = 1
										        OR is_distributor = 1;

						        /* Method B: check subscribers for MSreplication_objects tables */
						        EXEC dbo.sp_MSforeachdb 'USE [?]; INSERT INTO #BlitzResults
										        (CheckID,
										        DatabaseName,
										        Priority,
										        FindingsGroup,
										        Finding,
										        URL,
										        Details)
							          SELECT DISTINCT 19,
							          db_name(),
							          200,
							          ''Informational'',
							          ''Replication In Use'',
							          ''http://BrentOzar.com/go/repl'',
							          (''['' + DB_NAME() + ''] has MSreplication_objects tables in it, indicating it is a replication subscriber.'')
							          FROM [?].sys.tables
							          WHERE name = ''dbo.MSreplication_objects'' AND ''?'' <> ''master''';

					        END



						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 32 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
			INSERT INTO #BlitzResults
			(CheckID,
			DatabaseName,
			Priority,
			FindingsGroup,
			Finding,
			URL,
			Details)
			SELECT 32,
			''?'',
			150,
			''Performance'',
			''Triggers on Tables'',
			''http://BrentOzar.com/go/trig'',
			(''The ['' + DB_NAME() + ''] database has '' + CAST(SUM(1) AS NVARCHAR(50)) + '' triggers.'')
			FROM [?].sys.triggers t INNER JOIN [?].sys.objects o ON t.parent_id = o.object_id
			INNER JOIN [?].sys.schemas s ON o.schema_id = s.schema_id WHERE t.is_ms_shipped = 0 AND DB_NAME() != ''ReportServer''
			HAVING SUM(1) > 0';
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 38 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
			INSERT INTO #BlitzResults
			(CheckID,
			DatabaseName,
			Priority,
			FindingsGroup,
			Finding,
			URL,
			Details)
		  SELECT DISTINCT 38,
		  ''?'',
		  110,
		  ''Performance'',
		  ''Active Tables Without Clustered Indexes'',
		  ''http://BrentOzar.com/go/heaps'',
		  (''The ['' + DB_NAME() + ''] database has heaps - tables without a clustered index - that are being actively queried.'')
		  FROM [?].sys.indexes i INNER JOIN [?].sys.objects o ON i.object_id = o.object_id
		  INNER JOIN [?].sys.partitions p ON i.object_id = p.object_id AND i.index_id = p.index_id
		  INNER JOIN sys.databases sd ON sd.name = ''?''
		  LEFT OUTER JOIN [?].sys.dm_db_index_usage_stats ius ON i.object_id = ius.object_id AND i.index_id = ius.index_id AND ius.database_id = sd.database_id
		  WHERE i.type_desc = ''HEAP'' AND COALESCE(ius.user_seeks, ius.user_scans, ius.user_lookups, ius.user_updates) IS NOT NULL
		  AND sd.name <> ''tempdb'' AND sd.name <> ''DWDiagnostics'' AND o.is_ms_shipped = 0 AND o.type <> ''S''';
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 164 )
                            AND EXISTS(SELECT * FROM sys.all_objects WHERE name = 'fn_validate_plan_guide')
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
			INSERT INTO #BlitzResults
			(CheckID,
			DatabaseName,
			Priority,
			FindingsGroup,
			Finding,
			URL,
			Details)
		  SELECT DISTINCT 164,
		  ''?'',
		  20,
		  ''Reliability'',
		  ''Plan Guides Failing'',
		  ''http://BrentOzar.com/go/misguided'',
		  (''The ['' + DB_NAME() + ''] database has plan guides that are no longer valid, so the queries involved may be failing silently.'')
		  FROM [?].sys.plan_guides g CROSS APPLY fn_validate_plan_guide(g.plan_guide_id)';
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 39 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
			INSERT INTO #BlitzResults
			(CheckID,
			DatabaseName,
			Priority,
			FindingsGroup,
			Finding,
			URL,
			Details)
		  SELECT DISTINCT 39,
		  ''?'',
		  150,
		  ''Performance'',
		  ''Inactive Tables Without Clustered Indexes'',
		  ''http://BrentOzar.com/go/heaps'',
		  (''The ['' + DB_NAME() + ''] database has heaps - tables without a clustered index - that have not been queried since the last restart.  These may be backup tables carelessly left behind.'')
		  FROM [?].sys.indexes i INNER JOIN [?].sys.objects o ON i.object_id = o.object_id
		  INNER JOIN [?].sys.partitions p ON i.object_id = p.object_id AND i.index_id = p.index_id
		  INNER JOIN sys.databases sd ON sd.name = ''?''
		  LEFT OUTER JOIN [?].sys.dm_db_index_usage_stats ius ON i.object_id = ius.object_id AND i.index_id = ius.index_id AND ius.database_id = sd.database_id
		  WHERE i.type_desc = ''HEAP'' AND COALESCE(ius.user_seeks, ius.user_scans, ius.user_lookups, ius.user_updates) IS NULL
		  AND sd.name <> ''tempdb'' AND sd.name <> ''DWDiagnostics'' AND o.is_ms_shipped = 0 AND o.type <> ''S''';
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 46 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
		  INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT 46,
		  ''?'',
		  150,
		  ''Performance'',
		  ''Leftover Fake Indexes From Wizards'',
		  ''http://BrentOzar.com/go/hypo'',
		  (''The index ['' + DB_NAME() + ''].['' + s.name + ''].['' + o.name + ''].['' + i.name + ''] is a leftover hypothetical index from the Index Tuning Wizard or Database Tuning Advisor.  This index is not actually helping performance and should be removed.'')
		  from [?].sys.indexes i INNER JOIN [?].sys.objects o ON i.object_id = o.object_id INNER JOIN [?].sys.schemas s ON o.schema_id = s.schema_id
		  WHERE i.is_hypothetical = 1';
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 47 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
		  INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT 47,
		  ''?'',
		  100,
		  ''Performance'',
		  ''Indexes Disabled'',
		  ''http://BrentOzar.com/go/ixoff'',
		  (''The index ['' + DB_NAME() + ''].['' + s.name + ''].['' + o.name + ''].['' + i.name + ''] is disabled.  This index is not actually helping performance and should either be enabled or removed.'')
		  from [?].sys.indexes i INNER JOIN [?].sys.objects o ON i.object_id = o.object_id INNER JOIN [?].sys.schemas s ON o.schema_id = s.schema_id
		  WHERE i.is_disabled = 1';
							END


						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 48 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
		  INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT DISTINCT 48,
		  ''?'',
		  150,
		  ''Performance'',
		  ''Foreign Keys Not Trusted'',
		  ''http://BrentOzar.com/go/trust'',
		  (''The ['' + DB_NAME() + ''] database has foreign keys that were probably disabled, data was changed, and then the key was enabled again.  Simply enabling the key is not enough for the optimizer to use this key - we have to alter the table using the WITH CHECK CHECK CONSTRAINT parameter.'')
		  from [?].sys.foreign_keys i INNER JOIN [?].sys.objects o ON i.parent_object_id = o.object_id INNER JOIN [?].sys.schemas s ON o.schema_id = s.schema_id
		  WHERE i.is_not_trusted = 1 AND i.is_not_for_replication = 0 AND i.is_disabled = 0 AND ''?'' NOT IN (''master'', ''model'', ''msdb'', ''ReportServer'', ''ReportServerTempDB'')';
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 56 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
		  INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT 56,
		  ''?'',
		  150,
		  ''Performance'',
		  ''Check Constraint Not Trusted'',
		  ''http://BrentOzar.com/go/trust'',
		  (''The check constraint ['' + DB_NAME() + ''].['' + s.name + ''].['' + o.name + ''].['' + i.name + ''] is not trusted - meaning, it was disabled, data was changed, and then the constraint was enabled again.  Simply enabling the constraint is not enough for the optimizer to use this constraint - we have to alter the table using the WITH CHECK CHECK CONSTRAINT parameter.'')
		  from [?].sys.check_constraints i INNER JOIN [?].sys.objects o ON i.parent_object_id = o.object_id
		  INNER JOIN [?].sys.schemas s ON o.schema_id = s.schema_id
		  WHERE i.is_not_trusted = 1 AND i.is_not_for_replication = 0 AND i.is_disabled = 0';
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 95 )
							BEGIN
								IF @@VERSION NOT LIKE '%Microsoft SQL Server 2000%'
									AND @@VERSION NOT LIKE '%Microsoft SQL Server 2005%'
									BEGIN
										EXEC dbo.sp_MSforeachdb 'USE [?];
			INSERT INTO #BlitzResults
				  (CheckID,
				  DatabaseName,
				  Priority,
				  FindingsGroup,
				  Finding,
				  URL,
				  Details)
			SELECT TOP 1 95 AS CheckID,
			''?'' as DatabaseName,
			110 AS Priority,
			''Performance'' AS FindingsGroup,
			''Plan Guides Enabled'' AS Finding,
			''http://BrentOzar.com/go/guides'' AS URL,
			(''Database ['' + DB_NAME() + ''] has query plan guides so a query will always get a specific execution plan. If you are having trouble getting query performance to improve, it might be due to a frozen plan. Review the DMV sys.plan_guides to learn more about the plan guides in place on this server.'') AS Details
			FROM [?].sys.plan_guides WHERE is_disabled = 0'
									END;
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 60 )
							BEGIN
								EXEC sp_MSforeachdb 'USE [?];
		  INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT  DISTINCT 60 AS CheckID,
		  ''?'' as DatabaseName,
		  100 AS Priority,
		  ''Performance'' AS FindingsGroup,
		  ''Fill Factor Changed'',
		  ''http://brentozar.com/go/fillfactor'' AS URL,
		  ''The ['' + DB_NAME() + ''] database has objects with fill factor < 80%. This can cause memory and storage performance problems, but may also prevent page splits.''
		  FROM    [?].sys.indexes
		  WHERE   fill_factor <> 0 AND fill_factor < 80 AND is_disabled = 0 AND is_hypothetical = 0';
							END



						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 78 )
							BEGIN
                                EXECUTE master.sys.sp_MSforeachdb 'USE [?]; 
                                    INSERT INTO #Recompile 
                                    SELECT DBName = DB_Name(), SPName = SO.name, SM.is_recompiled, ISR.SPECIFIC_SCHEMA 
                                    FROM sys.sql_modules AS SM 
                                    LEFT OUTER JOIN master.sys.databases AS sDB ON SM.object_id = DB_id() 
                                    LEFT OUTER JOIN dbo.sysobjects AS SO ON SM.object_id = SO.id and type = ''P'' 
                                    LEFT OUTER JOIN INFORMATION_SCHEMA.ROUTINES AS ISR on ISR.Routine_Name = SO.name AND ISR.SPECIFIC_CATALOG = DB_Name()
                                    WHERE SM.is_recompiled=1 
                                    ' 
                                INSERT INTO #BlitzResults
													(Priority,
													FindingsGroup,
                                                    Finding,
                                                    DatabaseName,
                                                    URL,
                                                    Details,
                                                    CheckID)
                                SELECT [Priority] = '100', 
                                    FindingsGroup = 'Performance', 
                                    Finding = 'Stored Procedure WITH RECOMPILE',
                                    DatabaseName = DBName,
                                    URL = 'http://BrentOzar.com/go/recompile',
                                    Details = '[' + DBName + '].[' + SPSchema + '].[' + ProcName + '] has WITH RECOMPILE in the stored procedure code, which may cause increased CPU usage due to constant recompiles of the code.',
                                    CheckID = '78'
                                FROM #Recompile AS TR WHERE ProcName NOT LIKE 'sp_AskBrent%' AND ProcName NOT LIKE 'sp_Blitz%' 
                                DROP TABLE #Recompile;
                            END



						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 86 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?]; INSERT INTO #BlitzResults (CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details) SELECT DISTINCT 86, DB_NAME(), 230, ''Security'', ''Elevated Permissions on a Database'', ''http://BrentOzar.com/go/elevated'', (''In ['' + DB_NAME() + ''], user ['' + u.name + '']  has the role ['' + g.name + ''].  This user can perform tasks beyond just reading and writing data.'') FROM [?].dbo.sysmembers m inner join [?].dbo.sysusers u on m.memberuid = u.uid inner join sysusers g on m.groupuid = g.uid where u.name <> ''dbo'' and g.name in (''db_owner'' , ''db_accessAdmin'' , ''db_securityadmin'' , ''db_ddladmin'')';
							END


							/*Check for non-aligned indexes in partioned databases*/

										IF NOT EXISTS ( SELECT  1
														FROM    #SkipChecks
														WHERE   DatabaseName IS NULL AND CheckID = 72 )
											BEGIN
												EXEC dbo.sp_MSforeachdb 'USE [?];
								insert into #partdb(dbname, objectname, type_desc)
								SELECT distinct db_name(DB_ID()) as DBName,o.name Object_Name,ds.type_desc
								FROM sys.objects AS o JOIN sys.indexes AS i ON o.object_id = i.object_id
								JOIN sys.data_spaces ds on ds.data_space_id = i.data_space_id
								LEFT OUTER JOIN sys.dm_db_index_usage_stats AS s ON i.object_id = s.object_id AND i.index_id = s.index_id AND s.database_id = DB_ID()
								WHERE  o.type = ''u''
								 -- Clustered and Non-Clustered indexes
								AND i.type IN (1, 2)
								AND o.object_id in
								  (
									SELECT a.object_id from
									  (SELECT ob.object_id, ds.type_desc from sys.objects ob JOIN sys.indexes ind on ind.object_id = ob.object_id join sys.data_spaces ds on ds.data_space_id = ind.data_space_id
									  GROUP BY ob.object_id, ds.type_desc ) a group by a.object_id having COUNT (*) > 1
								  )'
												INSERT  INTO #BlitzResults
														( CheckID ,
														  DatabaseName ,
														  Priority ,
														  FindingsGroup ,
														  Finding ,
														  URL ,
														  Details
														)
														SELECT DISTINCT
																72 AS CheckID ,
																dbname AS DatabaseName ,
																100 AS Priority ,
																'Performance' AS FindingsGroup ,
																'The partitioned database ' + dbname
																+ ' may have non-aligned indexes' AS Finding ,
																'http://BrentOzar.com/go/aligned' AS URL ,
																'Having non-aligned indexes on partitioned tables may cause inefficient query plans and CPU pressure' AS Details
														FROM    #partdb
														WHERE   dbname IS NOT NULL
																AND dbname NOT IN ( SELECT DISTINCT
																						  DatabaseName
																					FROM  #SkipChecks 
																					WHERE CheckID IS NULL)
												DROP TABLE #partdb
											END


					IF NOT EXISTS ( SELECT  1
									FROM    #SkipChecks
									WHERE   DatabaseName IS NULL AND CheckID = 113 )
									BEGIN
							  EXEC dbo.sp_MSforeachdb 'USE [?];
							  INSERT INTO #BlitzResults
									(CheckID,
									DatabaseName,
									Priority,
									FindingsGroup,
									Finding,
									URL,
									Details)
							  SELECT DISTINCT 113,
							  ''?'',
							  50,
							  ''Reliability'',
							  ''Full Text Indexes Not Updating'',
							  ''http://BrentOzar.com/go/fulltext'',
							  (''At least one full text index in this database has not been crawled in the last week.'')
							  from [?].sys.fulltext_indexes i WHERE change_tracking_state_desc <> ''AUTO'' AND i.is_enabled = 1 AND i.crawl_end_date < DATEADD(dd, -7, GETDATE())';
												END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 115 )
							BEGIN
								EXEC dbo.sp_MSforeachdb 'USE [?];
		  INSERT INTO #BlitzResults
				(CheckID,
				DatabaseName,
				Priority,
				FindingsGroup,
				Finding,
				URL,
				Details)
		  SELECT 115,
		  ''?'',
		  110,
		  ''Performance'',
		  ''Parallelism Rocket Surgery'',
		  ''http://BrentOzar.com/go/makeparallel'',
		  (''['' + DB_NAME() + ''] has a make_parallel function, indicating that an advanced developer may be manhandling SQL Server into forcing queries to go parallel.'')
		  from [?].INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = ''make_parallel'' AND ROUTINE_TYPE = ''FUNCTION''';
							END


						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 122 )
							BEGIN
								/* SQL Server 2012 and newer uses temporary stats for AlwaysOn Availability Groups, and those show up as user-created */
								IF EXISTS (SELECT *
									  FROM sys.all_columns c
									  INNER JOIN sys.all_objects o ON c.object_id = o.object_id
									  WHERE c.name = 'is_temporary' AND o.name = 'stats')

										EXEC dbo.sp_MSforeachdb 'USE [?];
												INSERT INTO #BlitzResults
													(CheckID,
													DatabaseName,
													Priority,
													FindingsGroup,
													Finding,
													URL,
													Details)
												SELECT TOP 1 122,
												''?'',
												200,
												''Performance'',
												''User-Created Statistics In Place'',
												''http://BrentOzar.com/go/userstats'',
												(''['' + DB_NAME() + ''] has '' + CAST(SUM(1) AS NVARCHAR(10)) + '' user-created statistics. This indicates that someone is being a rocket scientist with the stats, and might actually be slowing things down, especially during stats updates.'')
												from [?].sys.stats WHERE user_created = 1 AND is_temporary = 0
                                                HAVING SUM(1) > 0;';

									ELSE
										EXEC dbo.sp_MSforeachdb 'USE [?];
												INSERT INTO #BlitzResults
													(CheckID,
													DatabaseName,
													Priority,
													FindingsGroup,
													Finding,
													URL,
													Details)
												SELECT 122,
												''?'',
												200,
												''Performance'',
												''User-Created Statistics In Place'',
												''http://BrentOzar.com/go/userstats'',
												(''['' + DB_NAME() + ''] has '' + CAST(SUM(1) AS NVARCHAR(10)) + '' user-created statistics. This indicates that someone is being a rocket scientist with the stats, and might actually be slowing things down, especially during stats updates.'')
												from [?].sys.stats WHERE user_created = 1
                                                HAVING SUM(1) > 0;';


							END /* IF NOT EXISTS ( SELECT  1 */


		        /*Check for high VLF count: this will omit any database snapshots*/

				        IF NOT EXISTS ( SELECT  1
								        FROM    #SkipChecks
								        WHERE   DatabaseName IS NULL AND CheckID = 69 )
					        BEGIN
						        IF @ProductVersionMajor >= 11

							        BEGIN
								        EXEC sp_MSforeachdb N'USE [?];
		                                      INSERT INTO #LogInfo2012
		                                      EXEC sp_executesql N''DBCC LogInfo() WITH NO_INFOMSGS'';
		                                      IF    @@ROWCOUNT > 999
		                                      BEGIN
			                                    INSERT  INTO #BlitzResults
			                                    ( CheckID
			                                    ,DatabaseName
			                                    ,Priority
			                                    ,FindingsGroup
			                                    ,Finding
			                                    ,URL
			                                    ,Details)
			                                    SELECT      69
			                                    ,DB_NAME()
			                                    ,170
			                                    ,''File Configuration''
			                                    ,''High VLF Count''
			                                    ,''http://BrentOzar.com/go/vlf''
			                                    ,''The ['' + DB_NAME() + ''] database has '' +  CAST(COUNT(*) as VARCHAR(20)) + '' virtual log files (VLFs). This may be slowing down startup, restores, and even inserts/updates/deletes.''
			                                    FROM #LogInfo2012
			                                    WHERE EXISTS (SELECT name FROM master.sys.databases
					                                    WHERE source_database_id is null) ;
		                                      END
		                                    TRUNCATE TABLE #LogInfo2012;'
								        DROP TABLE #LogInfo2012;
							        END
						        ELSE
							        BEGIN
								        EXEC sp_MSforeachdb N'USE [?];
		                                      INSERT INTO #LogInfo
		                                      EXEC sp_executesql N''DBCC LogInfo() WITH NO_INFOMSGS'';
		                                      IF    @@ROWCOUNT > 999
		                                      BEGIN
			                                    INSERT  INTO #BlitzResults
			                                    ( CheckID
			                                    ,DatabaseName
			                                    ,Priority
			                                    ,FindingsGroup
			                                    ,Finding
			                                    ,URL
			                                    ,Details)
			                                    SELECT      69
			                                    ,DB_NAME()
			                                    ,170
			                                    ,''File Configuration''
			                                    ,''High VLF Count''
			                                    ,''http://BrentOzar.com/go/vlf''
			                                    ,''The ['' + DB_NAME() + ''] database has '' +  CAST(COUNT(*) as VARCHAR(20)) + '' virtual log files (VLFs). This may be slowing down startup, restores, and even inserts/updates/deletes.''
			                                    FROM #LogInfo
			                                    WHERE EXISTS (SELECT name FROM master.sys.databases
			                                    WHERE source_database_id is null);
		                                      END
		                                      TRUNCATE TABLE #LogInfo;'
								        DROP TABLE #LogInfo;
							        END
					        END


				        IF NOT EXISTS ( SELECT  1
								        FROM    #SkipChecks
								        WHERE   DatabaseName IS NULL AND CheckID = 80 )
					        BEGIN
						        EXEC dbo.sp_MSforeachdb 'USE [?]; INSERT INTO #BlitzResults (CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details) SELECT DISTINCT 80, DB_NAME(), 170, ''Reliability'', ''Max File Size Set'', ''http://BrentOzar.com/go/maxsize'', (''The ['' + DB_NAME() + ''] database file '' + name + '' has a max file size set to '' + CAST(CAST(max_size AS BIGINT) * 8 / 1024 AS VARCHAR(100)) + ''MB. If it runs out of space, the database will stop working even though there may be drive space available.'') FROM sys.database_files WHERE max_size <> 268435456 AND max_size <> -1 AND type <> 2 AND name <> ''DWDiagnostics'' ';
					        END

					END /* IF @CheckUserDatabaseObjects = 1 */

				IF @CheckProcedureCache = 1
					BEGIN

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 35 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details
										)
										SELECT  35 AS CheckID ,
												100 AS Priority ,
												'Performance' AS FindingsGroup ,
												'Single-Use Plans in Procedure Cache' AS Finding ,
												'http://BrentOzar.com/go/single' AS URL ,
												( CAST(COUNT(*) AS VARCHAR(10))
												  + ' query plans are taking up memory in the procedure cache. This may be wasted memory if we cache plans for queries that never get called again. This may be a good use case for SQL Server 2008''s Optimize for Ad Hoc or for Forced Parameterization.' ) AS Details
										FROM    sys.dm_exec_cached_plans AS cp
										WHERE   cp.usecounts = 1
												AND cp.objtype = 'Adhoc'
												AND EXISTS ( SELECT
																  1
															 FROM sys.configurations
															 WHERE
																  name = 'optimize for ad hoc workloads'
																  AND value_in_use = 0 )
										HAVING  COUNT(*) > 1;
							END


		  /* Set up the cache tables. Different on 2005 since it doesn't support query_hash, query_plan_hash. */
						IF @@VERSION LIKE '%Microsoft SQL Server 2005%'
							BEGIN
								IF @CheckProcedureCacheFilter = 'CPU'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
			  AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
			  FROM sys.dm_exec_query_stats qs
			  ORDER BY qs.total_worker_time DESC)
			  INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
			  SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
			  FROM queries qs
			  LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
			  WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

								IF @CheckProcedureCacheFilter = 'Reads'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
		  AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
		  FROM sys.dm_exec_query_stats qs
		  ORDER BY qs.total_logical_reads DESC)
		  INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
		  SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
		  FROM queries qs
		  LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
		  WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

								IF @CheckProcedureCacheFilter = 'ExecCount'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
		  AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
		  FROM sys.dm_exec_query_stats qs
		  ORDER BY qs.execution_count DESC)
		  INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
		  SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
		  FROM queries qs
		  LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
		  WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

								IF @CheckProcedureCacheFilter = 'Duration'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
			AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
			FROM sys.dm_exec_query_stats qs
			ORDER BY qs.total_elapsed_time DESC)
			INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time])
			SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time]
			FROM queries qs
			LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
			WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

							END;
						IF @ProductVersionMajor >= 10
							BEGIN
								IF @CheckProcedureCacheFilter = 'CPU'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM sys.dm_exec_query_stats qs
		  ORDER BY qs.total_worker_time DESC)
		  INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM queries qs
		  LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
		  WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

								IF @CheckProcedureCacheFilter = 'Reads'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM sys.dm_exec_query_stats qs
		  ORDER BY qs.total_logical_reads DESC)
		  INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM queries qs
		  LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
		  WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

								IF @CheckProcedureCacheFilter = 'ExecCount'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM sys.dm_exec_query_stats qs
		  ORDER BY qs.execution_count DESC)
		  INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM queries qs
		  LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
		  WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

								IF @CheckProcedureCacheFilter = 'Duration'
									OR @CheckProcedureCacheFilter IS NULL
									BEGIN
										SET @StringToExecute = 'WITH queries ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  AS (SELECT TOP 20 qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM sys.dm_exec_query_stats qs
		  ORDER BY qs.total_elapsed_time DESC)
		  INSERT INTO #dm_exec_query_stats ([sql_handle],[statement_start_offset],[statement_end_offset],[plan_generation_num],[plan_handle],[creation_time],[last_execution_time],[execution_count],[total_worker_time],[last_worker_time],[min_worker_time],[max_worker_time],[total_physical_reads],[last_physical_reads],[min_physical_reads],[max_physical_reads],[total_logical_writes],[last_logical_writes],[min_logical_writes],[max_logical_writes],[total_logical_reads],[last_logical_reads],[min_logical_reads],[max_logical_reads],[total_clr_time],[last_clr_time],[min_clr_time],[max_clr_time],[total_elapsed_time],[last_elapsed_time],[min_elapsed_time],[max_elapsed_time],[query_hash],[query_plan_hash])
		  SELECT qs.[sql_handle],qs.[statement_start_offset],qs.[statement_end_offset],qs.[plan_generation_num],qs.[plan_handle],qs.[creation_time],qs.[last_execution_time],qs.[execution_count],qs.[total_worker_time],qs.[last_worker_time],qs.[min_worker_time],qs.[max_worker_time],qs.[total_physical_reads],qs.[last_physical_reads],qs.[min_physical_reads],qs.[max_physical_reads],qs.[total_logical_writes],qs.[last_logical_writes],qs.[min_logical_writes],qs.[max_logical_writes],qs.[total_logical_reads],qs.[last_logical_reads],qs.[min_logical_reads],qs.[max_logical_reads],qs.[total_clr_time],qs.[last_clr_time],qs.[min_clr_time],qs.[max_clr_time],qs.[total_elapsed_time],qs.[last_elapsed_time],qs.[min_elapsed_time],qs.[max_elapsed_time],qs.[query_hash],qs.[query_plan_hash]
		  FROM queries qs
		  LEFT OUTER JOIN #dm_exec_query_stats qsCaught ON qs.sql_handle = qsCaught.sql_handle AND qs.plan_handle = qsCaught.plan_handle AND qs.statement_start_offset = qsCaught.statement_start_offset
		  WHERE qsCaught.sql_handle IS NULL;'
										EXECUTE(@StringToExecute)
									END

		/* Populate the query_plan_filtered field. Only works in 2005SP2+, but we're just doing it in 2008 to be safe. */
								UPDATE  #dm_exec_query_stats
								SET     query_plan_filtered = qp.query_plan
								FROM    #dm_exec_query_stats qs
										CROSS APPLY sys.dm_exec_text_query_plan(qs.plan_handle,
																  qs.statement_start_offset,
																  qs.statement_end_offset)
										AS qp

							END;

		/* Populate the additional query_plan, text, and text_filtered fields */
						UPDATE  #dm_exec_query_stats
						SET     query_plan = qp.query_plan ,
								[text] = st.[text] ,
								text_filtered = SUBSTRING(st.text,
														  ( qs.statement_start_offset
															/ 2 ) + 1,
														  ( ( CASE qs.statement_end_offset
																WHEN -1
																THEN DATALENGTH(st.text)
																ELSE qs.statement_end_offset
															  END
															  - qs.statement_start_offset )
															/ 2 ) + 1)
						FROM    #dm_exec_query_stats qs
								CROSS APPLY sys.dm_exec_sql_text(qs.sql_handle) AS st
								CROSS APPLY sys.dm_exec_query_plan(qs.plan_handle)
								AS qp

		/* Dump instances of our own script. We're not trying to tune ourselves. */
						DELETE  #dm_exec_query_stats
						WHERE   text LIKE '%sp_Blitz%'
								OR text LIKE '%#BlitzResults%'

		/* Look for implicit conversions */

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 63 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details ,
										  QueryPlan ,
										  QueryPlanFiltered
										)
										SELECT  63 AS CheckID ,
												120 AS Priority ,
												'Query Plans' AS FindingsGroup ,
												'Implicit Conversion' AS Finding ,
												'http://BrentOzar.com/go/implicit' AS URL ,
												( 'One of the top resource-intensive queries is comparing two fields that are not the same datatype.' ) AS Details ,
												qs.query_plan ,
												qs.query_plan_filtered
										FROM    #dm_exec_query_stats qs
										WHERE   COALESCE(qs.query_plan_filtered,
														 CAST(qs.query_plan AS NVARCHAR(MAX))) LIKE '%CONVERT_IMPLICIT%'
												AND COALESCE(qs.query_plan_filtered,
															 CAST(qs.query_plan AS NVARCHAR(MAX))) LIKE '%PhysicalOp="Index Scan"%'
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 64 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details ,
										  QueryPlan ,
										  QueryPlanFiltered
										)
										SELECT  64 AS CheckID ,
												120 AS Priority ,
												'Query Plans' AS FindingsGroup ,
												'Implicit Conversion Affecting Cardinality' AS Finding ,
												'http://BrentOzar.com/go/implicit' AS URL ,
												( 'One of the top resource-intensive queries has an implicit conversion that is affecting cardinality estimation.' ) AS Details ,
												qs.query_plan ,
												qs.query_plan_filtered
										FROM    #dm_exec_query_stats qs
										WHERE   COALESCE(qs.query_plan_filtered,
														 CAST(qs.query_plan AS NVARCHAR(MAX))) LIKE '%<PlanAffectingConvert ConvertIssue="Cardinality Estimate" Expression="CONVERT_IMPLICIT%'
							END

							/* @cms4j, 29.11.2013: Look for RID or Key Lookups */
							IF NOT EXISTS ( SELECT  1
											FROM    #SkipChecks
											WHERE   DatabaseName IS NULL AND CheckID = 118 )
								BEGIN
									INSERT  INTO #BlitzResults
											( CheckID ,
											  Priority ,
											  FindingsGroup ,
											  Finding ,
											  URL ,
											  Details ,
											  QueryPlan ,
											  QueryPlanFiltered
											)
											SELECT  118 AS CheckID ,
													120 AS Priority ,
													'Query Plans' AS FindingsGroup ,
													'RID or Key Lookups' AS Finding ,
													'http://BrentOzar.com/go/lookup' AS URL ,
													'One of the top resource-intensive queries contains RID or Key Lookups. Try to avoid them by creating covering indexes.' AS Details ,
													qs.query_plan ,
													qs.query_plan_filtered
											FROM    #dm_exec_query_stats qs
											WHERE   COALESCE(qs.query_plan_filtered,
															 CAST(qs.query_plan AS NVARCHAR(MAX))) LIKE '%Lookup="1"%'
								END /* @cms4j, 29.11.2013: Look for RID or Key Lookups */


						/* Look for missing indexes */
						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 65 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details ,
										  QueryPlan ,
										  QueryPlanFiltered
										)
										SELECT  65 AS CheckID ,
												120 AS Priority ,
												'Query Plans' AS FindingsGroup ,
												'Missing Index' AS Finding ,
												'http://BrentOzar.com/go/missingindex' AS URL ,
												( 'One of the top resource-intensive queries may be dramatically improved by adding an index.' ) AS Details ,
												qs.query_plan ,
												qs.query_plan_filtered
										FROM    #dm_exec_query_stats qs
										WHERE   COALESCE(qs.query_plan_filtered,
														 CAST(qs.query_plan AS NVARCHAR(MAX))) LIKE '%MissingIndexGroup%'
							END

						/* Look for cursors */
						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 66 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details ,
										  QueryPlan ,
										  QueryPlanFiltered
										)
										SELECT  66 AS CheckID ,
												120 AS Priority ,
												'Query Plans' AS FindingsGroup ,
												'Cursor' AS Finding ,
												'http://BrentOzar.com/go/cursor' AS URL ,
												( 'One of the top resource-intensive queries is using a cursor.' ) AS Details ,
												qs.query_plan ,
												qs.query_plan_filtered
										FROM    #dm_exec_query_stats qs
										WHERE   COALESCE(qs.query_plan_filtered,
														 CAST(qs.query_plan AS NVARCHAR(MAX))) LIKE '%<StmtCursor%'
							END

		/* Look for scalar user-defined functions */

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 67 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details ,
										  QueryPlan ,
										  QueryPlanFiltered
										)
										SELECT  67 AS CheckID ,
												120 AS Priority ,
												'Query Plans' AS FindingsGroup ,
												'Scalar UDFs' AS Finding ,
												'http://BrentOzar.com/go/functions' AS URL ,
												( 'One of the top resource-intensive queries is using a user-defined scalar function that may inhibit parallelism.' ) AS Details ,
												qs.query_plan ,
												qs.query_plan_filtered
										FROM    #dm_exec_query_stats qs
										WHERE   COALESCE(qs.query_plan_filtered,
														 CAST(qs.query_plan AS NVARCHAR(MAX))) LIKE '%<UserDefinedFunction%'
							END

					END /* IF @CheckProcedureCache = 1 */

		/*Check for the last good DBCC CHECKDB date */
				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 68 )
					BEGIN
						EXEC sp_MSforeachdb N'USE [?];
						INSERT #DBCCs
							(ParentObject,
							Object,
							Field,
							Value)
						EXEC (''DBCC DBInfo() With TableResults, NO_INFOMSGS'');
						UPDATE #DBCCs SET DbName = N''?'' WHERE DbName IS NULL;';

						WITH    DB2
								  AS ( SELECT DISTINCT
												Field ,
												Value ,
												DbName
									   FROM     #DBCCs
									   WHERE    Field = 'dbi_dbccLastKnownGood'
									 )
							INSERT  INTO #BlitzResults
									( CheckID ,
									  DatabaseName ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  68 AS CheckID ,
											DB2.DbName AS DatabaseName ,
											1 AS PRIORITY ,
											'Reliability' AS FindingsGroup ,
											'Last good DBCC CHECKDB over 2 weeks old' AS Finding ,
											'http://BrentOzar.com/go/checkdb' AS URL ,
											'Database [' + DB2.DbName + ']'
											+ CASE DB2.Value
												WHEN '1900-01-01 00:00:00.000'
												THEN ' never had a successful DBCC CHECKDB.'
												ELSE ' last had a successful DBCC CHECKDB run on '
													 + DB2.Value + '.'
											  END
											+ ' This check should be run regularly to catch any database corruption as soon as possible.'
											+ ' Note: you can restore a backup of a busy production database to a test server and run DBCC CHECKDB '
											+ ' against that to minimize impact. If you do that, you can ignore this warning.' AS Details
									FROM    DB2
									WHERE   DB2.DbName <> 'tempdb'
											AND DB2.DbName NOT IN ( SELECT DISTINCT
																  DatabaseName
																FROM
																  #SkipChecks 
																WHERE CheckID IS NULL)
											AND CONVERT(DATETIME, DB2.Value, 121) < DATEADD(DD,
																  -14,
																  CURRENT_TIMESTAMP)
					END




	/*Verify that the servername is set */
			IF NOT EXISTS ( SELECT  1
							FROM    #SkipChecks
							WHERE   DatabaseName IS NULL AND CheckID = 70 )
				BEGIN
					IF @@SERVERNAME IS NULL
						BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  70 AS CheckID ,
											200 AS Priority ,
											'Informational' AS FindingsGroup ,
											'@@Servername Not Set' AS Finding ,
											'http://BrentOzar.com/go/servername' AS URL ,
											'@@Servername variable is null. You can fix it by executing: "sp_addserver ''<LocalServerName>'', local"' AS Details
						END;

					IF  /* @@SERVERNAME IS set */
						(@@SERVERNAME IS NOT NULL
						AND
						/* not a named instance */
						CHARINDEX('\',CAST(SERVERPROPERTY('ServerName') AS NVARCHAR)) = 0
						AND
						/* not clustered, when computername may be different than the servername */
						SERVERPROPERTY('IsClustered') = 0
						AND
						/* @@SERVERNAME is different than the computer name */
						@@SERVERNAME <> CAST(ISNULL(SERVERPROPERTY('ComputerNamePhysicalNetBIOS'),@@SERVERNAME) AS NVARCHAR) )
						 BEGIN
							INSERT  INTO #BlitzResults
									( CheckID ,
									  Priority ,
									  FindingsGroup ,
									  Finding ,
									  URL ,
									  Details
									)
									SELECT  70 AS CheckID ,
											200 AS Priority ,
											'Configuration' AS FindingsGroup ,
											'@@Servername Not Correct' AS Finding ,
											'http://BrentOzar.com/go/servername' AS URL ,
											'The @@Servername is different than the computer name, which may trigger certificate errors.' AS Details
						END;

				END
		/*Check to see if a failsafe operator has been configured*/
				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 73 )
					BEGIN

						DECLARE @AlertInfo TABLE
							(
							  FailSafeOperator NVARCHAR(255) ,
							  NotificationMethod INT ,
							  ForwardingServer NVARCHAR(255) ,
							  ForwardingSeverity INT ,
							  PagerToTemplate NVARCHAR(255) ,
							  PagerCCTemplate NVARCHAR(255) ,
							  PagerSubjectTemplate NVARCHAR(255) ,
							  PagerSendSubjectOnly NVARCHAR(255) ,
							  ForwardAlways INT
							)
						INSERT  INTO @AlertInfo
								EXEC [master].[dbo].[sp_MSgetalertinfo] @includeaddresses = 0
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  73 AS CheckID ,
										200 AS Priority ,
										'Monitoring' AS FindingsGroup ,
										'No failsafe operator configured' AS Finding ,
										'http://BrentOzar.com/go/failsafe' AS URL ,
										( 'No failsafe operator is configured on this server.  This is a good idea just in-case there are issues with the [msdb] database that prevents alerting.' ) AS Details
								FROM    @AlertInfo
								WHERE   FailSafeOperator IS NULL;
					END

/*Identify globally enabled trace flags*/
				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 74 )
					BEGIN
						INSERT  INTO #TraceStatus
								EXEC ( ' DBCC TRACESTATUS(-1) WITH NO_INFOMSGS'
									)
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  74 AS CheckID ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'TraceFlag On' AS Finding ,
										'http://www.BrentOzar.com/go/traceflags/' AS URL ,
										'Trace flag ' + 
										CASE WHEN [T].[TraceFlag] = '2330' THEN ' 2330 enabled globally. Using this trace Flag disables missing index requests'
											 WHEN [T].[TraceFlag] = '1211' THEN ' 1211 enabled globally. Using this Trace Flag disables lock escalation when you least expect it. No Bueno!'
											 WHEN [T].[TraceFlag] = '1224' THEN ' 1224 enabled globally. Using this Trace Flag disables lock escalation based on the number of locks being taken. You shouldn''t have done that, Dave.'
											 WHEN [T].[TraceFlag] = '652'  THEN ' 652 enabled globally. Using this Trace Flag disables pre-fetching during index scans. If you hate slow queries, you should turn that off.'
											 WHEN [T].[TraceFlag] = '661'  THEN ' 661 enabled globally. Using this Trace Flag disables ghost record removal. Who you gonna call? No one, turn that thing off.'
											 WHEN [T].[TraceFlag] = '1806'  THEN ' 1806 enabled globally. Using this Trace Flag disables instant file initialization. I question your sanity.'
											 WHEN [T].[TraceFlag] = '3505'  THEN ' 3505 enabled globally. Using this Trace Flag disables Checkpoints. Probably not the wisest idea.'
											 WHEN [T].[TraceFlag] = '8649'  THEN ' 8649 enabled globally. Using this Trace Flag drops cost thresholf for parallelism down to 0. I hope this is a dev server.'
										     ELSE [T].[TraceFlag] + ' is enabled globally.' END 
										AS Details
								FROM    #TraceStatus T
					END

		/*Check for transaction log file larger than data file */
				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 75 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  75 AS CheckID ,
										DB_NAME(a.database_id) ,
										50 AS Priority ,
										'Reliability' AS FindingsGroup ,
										'Transaction Log Larger than Data File' AS Finding ,
										'http://BrentOzar.com/go/biglog' AS URL ,
										'The database [' + DB_NAME(a.database_id)
										+ '] has a ' + CAST((CAST(a.size AS BIGINT) * 8 / 1000000) AS NVARCHAR(20)) + ' GB transaction log file, larger than the total data file sizes. This may indicate that transaction log backups are not being performed or not performed often enough.' AS Details
								FROM    sys.master_files a
								WHERE   a.type = 1
										AND DB_NAME(a.database_id) NOT IN (
										SELECT DISTINCT
												DatabaseName
										FROM    #SkipChecks )
										AND a.size > 125000 /* Size is measured in pages here, so this gets us log files over 1GB. */
										AND a.size > ( SELECT   SUM(CAST(b.size AS BIGINT))
													   FROM     sys.master_files b
													   WHERE    a.database_id = b.database_id
																AND b.type = 0
													 )
										AND a.database_id IN (
										SELECT  database_id
										FROM    sys.databases
										WHERE   source_database_id IS NULL )
					END

		/*Check for collation conflicts between user databases and tempdb */
				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 76 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  76 AS CheckID ,
										name AS DatabaseName ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Collation is ' + collation_name AS Finding ,
										'http://BrentOzar.com/go/collate' AS URL ,
										'Collation differences between user databases and tempdb can cause conflicts especially when comparing string values' AS Details
								FROM    sys.databases
							WHERE   name NOT IN ( 'master', 'model', 'msdb')
										AND name NOT LIKE 'ReportServer%'
										AND name NOT IN ( SELECT DISTINCT
																  DatabaseName
														  FROM    #SkipChecks 
														  WHERE CheckID IS NULL)
										AND collation_name <> ( SELECT
																  collation_name
																FROM
																  sys.databases
																WHERE
																  name = 'tempdb'
															  )
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 77 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  DatabaseName ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  77 AS CheckID ,
										dSnap.[name] AS DatabaseName ,
										50 AS Priority ,
										'Reliability' AS FindingsGroup ,
										'Database Snapshot Online' AS Finding ,
										'http://BrentOzar.com/go/snapshot' AS URL ,
										'Database [' + dSnap.[name]
										+ '] is a snapshot of ['
										+ dOriginal.[name]
										+ ']. Make sure you have enough drive space to maintain the snapshot as the original database grows.' AS Details
								FROM    sys.databases dSnap
										INNER JOIN sys.databases dOriginal ON dSnap.source_database_id = dOriginal.database_id
																  AND dSnap.name NOT IN (
																  SELECT DISTINCT
																  DatabaseName
																  FROM
																  #SkipChecks )
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 79 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  79 AS CheckID ,
										100 AS Priority ,
										'Performance' AS FindingsGroup ,
										'Shrink Database Job' AS Finding ,
										'http://BrentOzar.com/go/autoshrink' AS URL ,
										'In the [' + j.[name] + '] job, step ['
										+ step.[step_name]
										+ '] has SHRINKDATABASE or SHRINKFILE, which may be causing database fragmentation.' AS Details
								FROM    msdb.dbo.sysjobs j
										INNER JOIN msdb.dbo.sysjobsteps step ON j.job_id = step.job_id
								WHERE   step.command LIKE N'%SHRINKDATABASE%'
										OR step.command LIKE N'%SHRINKFILE%'
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 81 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT  81 AS CheckID ,
										200 AS Priority ,
										'Non-Active Server Config' AS FindingsGroup ,
										cr.name AS Finding ,
										'http://www.BrentOzar.com/blitz/sp_configure/' AS URL ,
										( 'This sp_configure option isn''t running under its set value.  Its set value is '
										  + CAST(cr.[value] AS VARCHAR(100))
										  + ' and its running value is '
										  + CAST(cr.value_in_use AS VARCHAR(100))
										  + '. When someone does a RECONFIGURE or restarts the instance, this setting will start taking effect.' ) AS Details
								FROM    sys.configurations cr
								WHERE   cr.value <> cr.value_in_use
                                 AND NOT (cr.name = 'min server memory (MB)' AND cr.value IN (0,16) AND cr.value_in_use IN (0,16));
					END

				IF NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 123 )
					BEGIN
						INSERT  INTO #BlitzResults
								( CheckID ,
								  Priority ,
								  FindingsGroup ,
								  Finding ,
								  URL ,
								  Details
								)
								SELECT TOP 1 123 AS CheckID ,
										200 AS Priority ,
										'Informational' AS FindingsGroup ,
										'Agent Jobs Starting Simultaneously' AS Finding ,
										'http://BrentOzar.com/go/busyagent/' AS URL ,
										( 'Multiple SQL Server Agent jobs are configured to start simultaneously. For detailed schedule listings, see the query in the URL.' ) AS Details
								FROM    msdb.dbo.sysjobactivity
								WHERE start_execution_date > DATEADD(dd, -14, GETDATE())
								GROUP BY start_execution_date HAVING COUNT(*) > 1;
					END


				IF @CheckServerInfo = 1
					BEGIN

/*This checks Windows version. It would be better if Microsoft gave everything a separate build number, but whatever.*/
IF @ProductVersionMajor >= 10 AND @ProductVersionMinor >= 50 
			   AND NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 172 )
					BEGIN
					IF EXISTS ( SELECT  1
											FROM    sys.all_objects
											WHERE   name = 'dm_os_windows_info' )

					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )

							SELECT
							172 AS [CheckID] ,
							250 AS [Priority] ,
							'Server Info' AS [FindingsGroup] ,
							'Windows Version' AS [Finding] ,
							'http://BrentOzar.com/go/' AS [URL] ,
							( CASE 
								WHEN [owi].[windows_release] = '5' THEN 'You''re running a really old version: Windows 2000, version ' + CAST([owi].[windows_release] AS VARCHAR(5))
								WHEN [owi].[windows_release] > '5' AND [owi].[windows_release] < '6' THEN 'You''re running a really old version: Windows Server 2003/2003R2 era, version ' + CAST([owi].[windows_release] AS VARCHAR(5))
								WHEN [owi].[windows_release] >= '6' AND [owi].[windows_release] <= '6.1' THEN 'You''re running a pretty old version: Windows: Server 2008/2008R2 era, version ' + CAST([owi].[windows_release] AS VARCHAR(5))
								WHEN [owi].[windows_release] = '6.2' THEN 'You''re running a rather modern version of Windows: Server 2012 era, version ' + CAST([owi].[windows_release] AS VARCHAR(5))
								WHEN [owi].[windows_release] = '6.3' THEN 'You''re running a pretty modern version of Windows: Server 2012R2 era, version ' + CAST([owi].[windows_release] AS VARCHAR(5))
								WHEN [owi].[windows_release] > '6.3' THEN 'Hot dog! You''re living in the future! You''re running version ' + CAST([owi].[windows_release] AS VARCHAR(5))
								ELSE 'I have no idea which version of Windows you''re on. Sorry.'
								END
							   ) AS [Details]
							 FROM [sys].[dm_os_windows_info] [owi]

					END;
					END;

/*
This check hits the dm_os_process_memory system view
to see if locked_page_allocations_kb is > 0,
which could indicate that locked pages in memory is enabled.
*/
IF @ProductVersionMajor >= 10 AND  NOT EXISTS ( SELECT  1
								FROM    #SkipChecks
								WHERE   DatabaseName IS NULL AND CheckID = 166 )
					BEGIN
						  INSERT    INTO [#BlitzResults]
									( [CheckID] ,
									  [Priority] ,
									  [FindingsGroup] ,
									  [Finding] ,
									  [URL] ,
									  [Details] )
							SELECT
							166 AS [CheckID] ,
							250 AS [Priority] ,
							'Server Info' AS [FindingsGroup] ,
							'Locked Pages In Memory Enabled' AS [Finding] ,
							'http://BrentOzar.com/go/lpim' AS [URL] ,
							( 'You currently have '
							  + CASE WHEN [dopm].[locked_page_allocations_kb] / 1024. / 1024. > 0
									 THEN CAST([dopm].[locked_page_allocations_kb] / 1024. / 1024. AS VARCHAR(100))
										  + ' GB'
									 ELSE CAST([dopm].[locked_page_allocations_kb] / 1024. AS VARCHAR(100))
										  + ' MB'
								END + ' of pages locked in memory.' ) AS [Details]
						  FROM
							[sys].[dm_os_process_memory] AS [dopm]
						  WHERE
							[dopm].[locked_page_allocations_kb] > 0;
					END; 


					IF NOT EXISTS ( SELECT  1
									FROM    #SkipChecks
									WHERE   DatabaseName IS NULL AND CheckID = 130 )
						BEGIN
									INSERT  INTO #BlitzResults
											( CheckID ,
											  Priority ,
											  FindingsGroup ,
											  Finding ,
											  URL ,
											  Details
											)
											SELECT  130 AS CheckID ,
													250 AS Priority ,
													'Server Info' AS FindingsGroup ,
													'Server Name' AS Finding ,
													'http://BrentOzar.com/go/servername' AS URL ,
													@@SERVERNAME AS Details
												WHERE @@SERVERNAME IS NOT NULL;
								END;



						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 83 )
							BEGIN
								IF EXISTS ( SELECT  *
											FROM    sys.all_objects
											WHERE   name = 'dm_server_services' )
									BEGIN
										SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
				SELECT  83 AS CheckID ,
				250 AS Priority ,
				''Server Info'' AS FindingsGroup ,
				''Services'' AS Finding ,
				'''' AS URL ,
				N''Service: '' + servicename + N'' runs under service account '' + service_account + N''. Last startup time: '' + COALESCE(CAST(CAST(last_startup_time AS DATETIME) AS VARCHAR(50)), ''not shown.'') + ''. Startup type: '' + startup_type_desc + N'', currently '' + status_desc + ''.''
				FROM sys.dm_server_services;'
										EXECUTE(@StringToExecute);
									END
							END

			/* Check 84 - SQL Server 2012 */
						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 84 )
							BEGIN
								IF EXISTS ( SELECT  *
											FROM    sys.all_objects o
													INNER JOIN sys.all_columns c ON o.object_id = c.object_id
											WHERE   o.name = 'dm_os_sys_info'
													AND c.name = 'physical_memory_kb' )
									BEGIN
										SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
			SELECT  84 AS CheckID ,
			250 AS Priority ,
			''Server Info'' AS FindingsGroup ,
			''Hardware'' AS Finding ,
			'''' AS URL ,
			''Logical processors: '' + CAST(cpu_count AS VARCHAR(50)) + ''. Physical memory: '' + CAST( CAST(ROUND((physical_memory_kb / 1024.0 / 1024), 1) AS INT) AS VARCHAR(50)) + ''GB.''
			FROM sys.dm_os_sys_info';
										EXECUTE(@StringToExecute);
									END

			/* Check 84 - SQL Server 2008 */
								IF EXISTS ( SELECT  *
											FROM    sys.all_objects o
													INNER JOIN sys.all_columns c ON o.object_id = c.object_id
											WHERE   o.name = 'dm_os_sys_info'
													AND c.name = 'physical_memory_in_bytes' )
									BEGIN
										SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
			SELECT  84 AS CheckID ,
			250 AS Priority ,
			''Server Info'' AS FindingsGroup ,
			''Hardware'' AS Finding ,
			'''' AS URL ,
			''Logical processors: '' + CAST(cpu_count AS VARCHAR(50)) + ''. Physical memory: '' + CAST( CAST(ROUND((physical_memory_in_bytes / 1024.0 / 1024 / 1024), 1) AS INT) AS VARCHAR(50)) + ''GB.''
			FROM sys.dm_os_sys_info';
										EXECUTE(@StringToExecute);
									END
							END


						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 85 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details
										)
										SELECT  85 AS CheckID ,
												250 AS Priority ,
												'Server Info' AS FindingsGroup ,
												'SQL Server Service' AS Finding ,
												'' AS URL ,
												N'Version: '
												+ CAST(SERVERPROPERTY('productversion') AS NVARCHAR(100))
												+ N'. Patch Level: '
												+ CAST(SERVERPROPERTY('productlevel') AS NVARCHAR(100))
												+ N'. Edition: '
												+ CAST(SERVERPROPERTY('edition') AS VARCHAR(100))
												+ N'. AlwaysOn Enabled: '
												+ CAST(COALESCE(SERVERPROPERTY('IsHadrEnabled'),
																0) AS VARCHAR(100))
												+ N'. AlwaysOn Mgr Status: '
												+ CAST(COALESCE(SERVERPROPERTY('HadrManagerStatus'),
																0) AS VARCHAR(100))
							END


						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 88 )
							BEGIN
								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details
										)
										SELECT  88 AS CheckID ,
												250 AS Priority ,
												'Server Info' AS FindingsGroup ,
												'SQL Server Last Restart' AS Finding ,
												'' AS URL ,
												CAST(create_date AS VARCHAR(100))
										FROM    sys.databases
										WHERE   database_id = 2
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 92 )
							BEGIN
								INSERT  INTO #driveInfo
										( drive, SIZE )
										EXEC master..xp_fixeddrives

								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details
										)
										SELECT  92 AS CheckID ,
												250 AS Priority ,
												'Server Info' AS FindingsGroup ,
												'Drive ' + i.drive + ' Space' AS Finding ,
												'' AS URL ,
												CAST(i.SIZE AS VARCHAR)
												+ 'MB free on ' + i.drive
												+ ' drive' AS Details
										FROM    #driveInfo AS i
								DROP TABLE #driveInfo
							END


						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 103 )
							AND EXISTS ( SELECT *
										 FROM   sys.all_objects o
												INNER JOIN sys.all_columns c ON o.object_id = c.object_id
										 WHERE  o.name = 'dm_os_sys_info'
												AND c.name = 'virtual_machine_type_desc' )
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
									SELECT 103 AS CheckID,
									250 AS Priority,
									''Server Info'' AS FindingsGroup,
									''Virtual Server'' AS Finding,
									''http://BrentOzar.com/go/virtual'' AS URL,
									''Type: ('' + virtual_machine_type_desc + '')'' AS Details
									FROM sys.dm_os_sys_info
									WHERE virtual_machine_type <> 0';
								EXECUTE(@StringToExecute);
							END

						IF NOT EXISTS ( SELECT  1
										FROM    #SkipChecks
										WHERE   DatabaseName IS NULL AND CheckID = 114 )
							AND EXISTS ( SELECT *
										 FROM   sys.all_objects o
										 WHERE  o.name = 'dm_os_memory_nodes' )
							AND EXISTS ( SELECT *
										 FROM   sys.all_objects o
										 INNER JOIN sys.all_columns c ON o.object_id = c.object_id
										 WHERE  o.name = 'dm_os_nodes'
                                	 		AND c.name = 'processor_group' )
							BEGIN
								SET @StringToExecute = 'INSERT INTO #BlitzResults (CheckID, Priority, FindingsGroup, Finding, URL, Details)
										SELECT  114 AS CheckID ,
												250 AS Priority ,
												''Server Info'' AS FindingsGroup ,
												''Hardware - NUMA Config'' AS Finding ,
												'''' AS URL ,
												''Node: '' + CAST(n.node_id AS NVARCHAR(10)) + '' State: '' + node_state_desc
												+ '' Online schedulers: '' + CAST(n.online_scheduler_count AS NVARCHAR(10)) + '' Processor Group: '' + CAST(n.processor_group AS NVARCHAR(10))
												+ '' Memory node: '' + CAST(n.memory_node_id AS NVARCHAR(10)) + '' Memory VAS Reserved GB: '' + CAST(CAST((m.virtual_address_space_reserved_kb / 1024.0 / 1024) AS INT) AS NVARCHAR(100))
										FROM sys.dm_os_nodes n
										INNER JOIN sys.dm_os_memory_nodes m ON n.memory_node_id = m.memory_node_id
										WHERE n.node_state_desc NOT LIKE ''%DAC%''
										ORDER BY n.node_id'
								EXECUTE(@StringToExecute);
							END


							IF NOT EXISTS ( SELECT  1
											FROM    #SkipChecks
											WHERE   DatabaseName IS NULL AND CheckID = 106 )
											AND (select convert(int,value_in_use) from sys.configurations where name = 'default trace enabled' ) = 1
                                AND DATALENGTH( COALESCE( @base_tracefilename, '' ) ) > DATALENGTH('.TRC')
							BEGIN

								INSERT  INTO #BlitzResults
										( CheckID ,
										  Priority ,
										  FindingsGroup ,
										  Finding ,
										  URL ,
										  Details
										)
										SELECT
												 106 AS CheckID
												,250 AS Priority
												,'Server Info' AS FindingsGroup
												,'Default Trace Contents' AS Finding
												,'http://BrentOzar.com/go/trace' AS URL
												,'The default trace holds '+cast(DATEDIFF(hour,MIN(StartTime),GETDATE())as varchar)+' hours of data'
												+' between '+cast(Min(StartTime) as varchar)+' and '+cast(GETDATE()as varchar)
												+('. The default trace files are located in: '+left( @curr_tracefilename,len(@curr_tracefilename) - @indx)
												) as Details
										FROM    ::fn_trace_gettable( @base_tracefilename, default )
										WHERE EventClass BETWEEN 65500 and 65600
							END /* CheckID 106 */


							IF NOT EXISTS ( SELECT  1
											FROM    #SkipChecks
											WHERE   DatabaseName IS NULL AND CheckID = 152 )
							BEGIN
								IF EXISTS (SELECT * FROM sys.dm_os_wait_stats WHERE wait_time_ms > .1 * @CPUMSsinceStartup AND waiting_tasks_count > 0 
											AND wait_type NOT IN ('REQUEST_FOR_DEADLOCK_SEARCH',
												'SQLTRACE_INCREMENTAL_FLUSH_SLEEP',
												'SQLTRACE_BUFFER_FLUSH',
												'LAZYWRITER_SLEEP',
												'XE_TIMER_EVENT',
												'XE_DISPATCHER_WAIT',
												'FT_IFTS_SCHEDULER_IDLE_WAIT',
												'LOGMGR_QUEUE',
												'CHECKPOINT_QUEUE',
												'BROKER_TO_FLUSH',
												'BROKER_TASK_STOP',
												'BROKER_EVENTHANDLER',
												'SLEEP_TASK',
												'WAITFOR',
												'DBMIRROR_DBM_MUTEX',
												'DBMIRROR_EVENTS_QUEUE',
												'DBMIRRORING_CMD',
												'DISPATCHER_QUEUE_SEMAPHORE',
												'BROKER_RECEIVE_WAITFOR',
												'CLR_AUTO_EVENT',
												'DIRTY_PAGE_POLL',
												'HADR_FILESTREAM_IOMGR_IOCOMPLETION',
												'ONDEMAND_TASK_QUEUE',
												'FT_IFTSHC_MUTEX',
												'CLR_MANUAL_EVENT',
												'CLR_SEMAPHORE',
												'DBMIRROR_WORKER_QUEUE',
												'DBMIRROR_DBM_EVENT',
												'SP_SERVER_DIAGNOSTICS_SLEEP',
												'HADR_CLUSAPI_CALL',
												'HADR_LOGCAPTURE_WAIT',
												'HADR_NOTIFICATION_DEQUEUE',
												'HADR_TIMER_TASK',
												'HADR_WORK_QUEUE',
												'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP',
												'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',
												'REDO_THREAD_PENDING_WORK',
												'UCS_SESSION_REGISTRATION',
												'BROKER_TRANSMITTER',
												'QDS_ASYNC_QUEUE'))
									BEGIN
									/* Check for waits that have had more than 10% of the server's wait time */
									WITH os(wait_type, waiting_tasks_count, wait_time_ms, max_wait_time_ms, signal_wait_time_ms)
									AS
									(SELECT wait_type, waiting_tasks_count, wait_time_ms, max_wait_time_ms, signal_wait_time_ms
										FROM sys.dm_os_wait_stats
											WHERE   wait_type NOT IN ('REQUEST_FOR_DEADLOCK_SEARCH',
												'SQLTRACE_INCREMENTAL_FLUSH_SLEEP',
												'SQLTRACE_BUFFER_FLUSH',
												'LAZYWRITER_SLEEP',
												'XE_TIMER_EVENT',
												'XE_DISPATCHER_WAIT',
												'FT_IFTS_SCHEDULER_IDLE_WAIT',
												'LOGMGR_QUEUE',
												'CHECKPOINT_QUEUE',
												'BROKER_TO_FLUSH',
												'BROKER_TASK_STOP',
												'BROKER_EVENTHANDLER',
												'SLEEP_TASK',
												'WAITFOR',
												'DBMIRROR_DBM_MUTEX',
												'DBMIRROR_EVENTS_QUEUE',
												'DBMIRRORING_CMD',
												'DISPATCHER_QUEUE_SEMAPHORE',
												'BROKER_RECEIVE_WAITFOR',
												'CLR_AUTO_EVENT',
												'DIRTY_PAGE_POLL',
												'HADR_FILESTREAM_IOMGR_IOCOMPLETION',
												'ONDEMAND_TASK_QUEUE',
												'FT_IFTSHC_MUTEX',
												'CLR_MANUAL_EVENT',
												'CLR_SEMAPHORE',
												'DBMIRROR_WORKER_QUEUE',
												'DBMIRROR_DBM_EVENT',
												'SP_SERVER_DIAGNOSTICS_SLEEP',
												'HADR_CLUSAPI_CALL',
												'HADR_LOGCAPTURE_WAIT',
												'HADR_NOTIFICATION_DEQUEUE',
												'HADR_TIMER_TASK',
												'HADR_WORK_QUEUE',
												'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP',
												'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',
												'REDO_THREAD_PENDING_WORK',
												'UCS_SESSION_REGISTRATION',
												'BROKER_TRANSMITTER',
                                                'PREEMPTIVE_SP_SERVER_DIAGNOSTICS',
                                                'PREEMPTIVE_HADR_LEASE_MECHANISM',
												'SLEEP_SYSTEMTASK',
												'QDS_SHUTDOWN_QUEUE',
												'XE_LIVE_TARGET_TVF')
												AND wait_time_ms > .1 * @CPUMSsinceStartup
												AND waiting_tasks_count > 0)
									INSERT  INTO #BlitzResults
											( CheckID ,
											  Priority ,
											  FindingsGroup ,
											  Finding ,
											  URL ,
											  Details
											)
											SELECT TOP 9
													 152 AS CheckID
													,240 AS Priority
													,'Wait Stats' AS FindingsGroup
													, CAST(ROW_NUMBER() OVER(ORDER BY os.wait_time_ms DESC) AS NVARCHAR(10)) + N' - ' + os.wait_type AS Finding
													,'http://BrentOzar.com/go/waits' AS URL
													, Details = CAST(CAST(SUM(os.wait_time_ms / 1000.0 / 60 / 60) OVER (PARTITION BY os.wait_type) AS NUMERIC(18,1)) AS NVARCHAR(20)) + N' hours of waits, ' +
													CAST(CAST((SUM(60.0 * os.wait_time_ms) OVER (PARTITION BY os.wait_type) ) / @MSSinceStartup  AS NUMERIC(18,1)) AS NVARCHAR(20)) + N' minutes average wait time per hour, ' + 
													CAST(CAST(
														100.* SUM(os.wait_time_ms) OVER (PARTITION BY os.wait_type) 
														/ (1. * SUM(os.wait_time_ms) OVER () )
														AS NUMERIC(18,1)) AS NVARCHAR(40)) + N'% of waits, ' + 
													CAST(CAST(
														100. * SUM(os.signal_wait_time_ms) OVER (PARTITION BY os.wait_type) 
														/ (1. * SUM(os.wait_time_ms) OVER ())
														AS NUMERIC(18,1)) AS NVARCHAR(40)) + N'% signal wait, ' + 
													CAST(SUM(os.waiting_tasks_count) OVER (PARTITION BY os.wait_type) AS NVARCHAR(40)) + N' waiting tasks, ' +
													CAST(CASE WHEN  SUM(os.waiting_tasks_count) OVER (PARTITION BY os.wait_type) > 0
													THEN
														CAST(
															SUM(os.wait_time_ms) OVER (PARTITION BY os.wait_type)
																/ (1. * SUM(os.waiting_tasks_count) OVER (PARTITION BY os.wait_type)) 
															AS NUMERIC(18,1))
													ELSE 0 END AS NVARCHAR(40)) + N' ms average wait time.'
											FROM    os
											ORDER BY SUM(os.wait_time_ms / 1000.0 / 60 / 60) OVER (PARTITION BY os.wait_type) DESC;
									END /* IF EXISTS (SELECT * FROM sys.dm_os_wait_stats WHERE wait_time_ms > 0 AND waiting_tasks_count > 0) */

								/* If no waits were found, add a note about that */
								IF NOT EXISTS (SELECT * FROM #BlitzResults WHERE CheckID IN (107, 108, 109, 121, 152, 162))
								BEGIN
									INSERT  INTO #BlitzResults
											( CheckID ,
											  Priority ,
											  FindingsGroup ,
											  Finding ,
											  URL ,
											  Details
											)
										VALUES (153, 240, 'Wait Stats', 'No Significant Waits Detected', 'http://BrentOzar.com/go/waits', 'This server might be just sitting around idle, or someone may have cleared wait stats recently.');
								END
							END /* CheckID 152 */    

					END /* IF @CheckServerInfo = 1 */
			END /* IF ( ( SERVERPROPERTY('ServerName') NOT IN ( SELECT ServerName */


				/* Delete priorites they wanted to skip. */
				IF @IgnorePrioritiesAbove IS NOT NULL
					DELETE  #BlitzResults
					WHERE   [Priority] > @IgnorePrioritiesAbove AND CheckID <> -1;

				IF @IgnorePrioritiesBelow IS NOT NULL
					DELETE  #BlitzResults
					WHERE   [Priority] < @IgnorePrioritiesBelow AND CheckID <> -1;

				/* Delete checks they wanted to skip. */
				IF @SkipChecksTable IS NOT NULL
					BEGIN
						DELETE  FROM #BlitzResults
						WHERE   DatabaseName IN ( SELECT    DatabaseName
												  FROM      #SkipChecks
												  WHERE CheckID IS NULL
												  AND (ServerName IS NULL OR ServerName = SERVERPROPERTY('ServerName')));
						DELETE  FROM #BlitzResults
						WHERE   CheckID IN ( SELECT    CheckID
												  FROM      #SkipChecks
												  WHERE DatabaseName IS NULL
												  AND (ServerName IS NULL OR ServerName = SERVERPROPERTY('ServerName')));
						DELETE r FROM #BlitzResults r
							INNER JOIN #SkipChecks c ON r.DatabaseName = c.DatabaseName and r.CheckID = c.CheckID
												  AND (ServerName IS NULL OR ServerName = SERVERPROPERTY('ServerName'));
					END

				/* Add summary mode */
				IF @SummaryMode > 0
					BEGIN
					UPDATE #BlitzResults
					  SET Finding = br.Finding + ' (' + CAST(brTotals.recs AS NVARCHAR(20)) + ')'
					  FROM #BlitzResults br
						INNER JOIN (SELECT FindingsGroup, Finding, Priority, COUNT(*) AS recs FROM #BlitzResults GROUP BY FindingsGroup, Finding, Priority) brTotals ON br.FindingsGroup = brTotals.FindingsGroup AND br.Finding = brTotals.Finding AND br.Priority = brTotals.Priority
						WHERE brTotals.recs > 1;

					DELETE br
					  FROM #BlitzResults br
					  WHERE EXISTS (SELECT * FROM #BlitzResults brLower WHERE br.FindingsGroup = brLower.FindingsGroup AND br.Finding = brLower.Finding AND br.Priority = brLower.Priority AND br.ID > brLower.ID);

					END

				/* Add credits for the nice folks who put so much time into building and maintaining this for free: */
				INSERT  INTO #BlitzResults
						( CheckID ,
						  Priority ,
						  FindingsGroup ,
						  Finding ,
						  URL ,
						  Details
						)
				VALUES  ( -1 ,
						  255 ,
						  'Thanks!' ,
						  'From Your Community Volunteers' ,
						  'http://FirstResponderKit.org' ,
						  'We hope you found this tool useful.'
						);

				INSERT  INTO #BlitzResults
						( CheckID ,
						  Priority ,
						  FindingsGroup ,
						  Finding ,
						  URL ,
						  Details

						)
				VALUES  ( -1 ,
						  0 ,
						  'sp_Blitz ' + CAST(CONVERT(DATETIME, @VersionDate, 102) AS VARCHAR(100)),
						  'SQL Server First Responder Kit' ,
						  'http://FirstResponderKit.org/' ,
						  'To get help or add your own contributions, join us at http://FirstResponderKit.org.'

						);

				INSERT  INTO #BlitzResults
						( CheckID ,
						  Priority ,
						  FindingsGroup ,
						  Finding ,
						  URL ,
						  Details

						)
				SELECT 156 ,
						  254 ,
						  'Rundate' ,
						  GETDATE() ,
						  'http://FirstResponderKit.org/' ,
						  'Captain''s log: stardate something and something...';
						  
				IF @EmailRecipients IS NOT NULL
					BEGIN
					/* Database mail won't work off a local temp table. I'm not happy about this hacky workaround either. */
					IF (OBJECT_ID('tempdb..##BlitzResults', 'U') IS NOT NULL) DROP TABLE ##BlitzResults;
					SELECT * INTO ##BlitzResults FROM #BlitzResults;
					SET @query_result_separator = char(9);
					SET @StringToExecute = 'SET NOCOUNT ON;SELECT [Priority] , [FindingsGroup] , [Finding] , [DatabaseName] , [URL] ,  [Details] , CheckID FROM ##BlitzResults ORDER BY Priority , FindingsGroup, Finding, Details; SET NOCOUNT OFF;';
					SET @EmailSubject = 'sp_Blitz Results for ' + @@SERVERNAME;
					SET @EmailBody = 'sp_Blitz ' + CAST(CONVERT(DATETIME, @VersionDate, 102) AS VARCHAR(100)) + '. http://FirstResponderKit.org';
					IF @EmailProfile IS NULL
						EXEC msdb.dbo.sp_send_dbmail
							@recipients = @EmailRecipients,
							@subject = @EmailSubject,
							@body = @EmailBody,
							@query_attachment_filename = 'sp_Blitz-Results.csv',
							@attach_query_result_as_file = 1,
							@query_result_header = 1,
							@query_result_width = 32767,
							@append_query_error = 1,
							@query_result_no_padding = 1,
							@query_result_separator = @query_result_separator,
							@query = @StringToExecute;
					ELSE
						EXEC msdb.dbo.sp_send_dbmail
							@profile_name = @EmailProfile,
							@recipients = @EmailRecipients,
							@subject = @EmailSubject,
							@body = @EmailBody,
							@query_attachment_filename = 'sp_Blitz-Results.csv',
							@attach_query_result_as_file = 1,
							@query_result_header = 1,
							@query_result_width = 32767,
							@append_query_error = 1,
							@query_result_no_padding = 1,
							@query_result_separator = @query_result_separator,
							@query = @StringToExecute;
					IF (OBJECT_ID('tempdb..##BlitzResults', 'U') IS NOT NULL) DROP TABLE ##BlitzResults;
				END


				/* @OutputTableName lets us export the results to a permanent table */
				IF @OutputDatabaseName IS NOT NULL
					AND @OutputSchemaName IS NOT NULL
					AND @OutputTableName IS NOT NULL
					AND EXISTS ( SELECT *
								 FROM   sys.databases
								 WHERE  QUOTENAME([name]) = @OutputDatabaseName)
					BEGIN
						SET @StringToExecute = 'USE '
							+ @OutputDatabaseName
							+ '; IF EXISTS(SELECT * FROM '
							+ @OutputDatabaseName
							+ '.INFORMATION_SCHEMA.SCHEMATA WHERE QUOTENAME(SCHEMA_NAME) = '''
							+ @OutputSchemaName
							+ ''') AND NOT EXISTS (SELECT * FROM '
							+ @OutputDatabaseName
							+ '.INFORMATION_SCHEMA.TABLES WHERE QUOTENAME(TABLE_SCHEMA) = '''
							+ @OutputSchemaName + ''' AND QUOTENAME(TABLE_NAME) = '''
							+ @OutputTableName + ''') CREATE TABLE '
							+ @OutputSchemaName + '.'
							+ @OutputTableName
							+ ' (ID INT IDENTITY(1,1) NOT NULL,
								ServerName NVARCHAR(128),
								CheckDate DATETIMEOFFSET,
								Priority TINYINT ,
								FindingsGroup VARCHAR(50) ,
								Finding VARCHAR(200) ,
								DatabaseName NVARCHAR(128),
								URL VARCHAR(200) ,
								Details NVARCHAR(4000) ,
								QueryPlan [XML] NULL ,
								QueryPlanFiltered [NVARCHAR](MAX) NULL,
								CheckID INT ,
								CONSTRAINT [PK_' + CAST(NEWID() AS CHAR(36)) + '] PRIMARY KEY CLUSTERED (ID ASC));'
						EXEC(@StringToExecute);
						SET @StringToExecute = N' IF EXISTS(SELECT * FROM '
							+ @OutputDatabaseName
							+ '.INFORMATION_SCHEMA.SCHEMATA WHERE QUOTENAME(SCHEMA_NAME) = '''
							+ @OutputSchemaName + ''') INSERT '
							+ @OutputDatabaseName + '.'
							+ @OutputSchemaName + '.'
							+ @OutputTableName
							+ ' (ServerName, CheckDate, CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details, QueryPlan, QueryPlanFiltered) SELECT '''
							+ CAST(SERVERPROPERTY('ServerName') AS NVARCHAR(128))
							+ ''', SYSDATETIMEOFFSET(), CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details, QueryPlan, QueryPlanFiltered FROM #BlitzResults ORDER BY Priority , FindingsGroup , Finding , Details';
						EXEC(@StringToExecute);
					END
				ELSE IF (SUBSTRING(@OutputTableName, 2, 2) = '##')
					BEGIN
						SET @StringToExecute = N' IF (OBJECT_ID(''tempdb..'
							+ @OutputTableName
							+ ''') IS NOT NULL) DROP TABLE ' + @OutputTableName + ';'
							+ 'CREATE TABLE '
							+ @OutputTableName
							+ ' (ID INT IDENTITY(1,1) NOT NULL,
								ServerName NVARCHAR(128),
								CheckDate DATETIMEOFFSET,
								Priority TINYINT ,
								FindingsGroup VARCHAR(50) ,
								Finding VARCHAR(200) ,
								DatabaseName NVARCHAR(128),
								URL VARCHAR(200) ,
								Details NVARCHAR(4000) ,
								QueryPlan [XML] NULL ,
								QueryPlanFiltered [NVARCHAR](MAX) NULL,
								CheckID INT ,
								CONSTRAINT [PK_' + CAST(NEWID() AS CHAR(36)) + '] PRIMARY KEY CLUSTERED (ID ASC));'
							+ ' INSERT '
							+ @OutputTableName
							+ ' (ServerName, CheckDate, CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details, QueryPlan, QueryPlanFiltered) SELECT '''
							+ CAST(SERVERPROPERTY('ServerName') AS NVARCHAR(128))
							+ ''', SYSDATETIMEOFFSET(), CheckID, DatabaseName, Priority, FindingsGroup, Finding, URL, Details, QueryPlan, QueryPlanFiltered FROM #BlitzResults ORDER BY Priority , FindingsGroup , Finding , Details';
						EXEC(@StringToExecute);
					END
				ELSE IF (SUBSTRING(@OutputTableName, 2, 1) = '#')
					BEGIN
						RAISERROR('Due to the nature of Dymamic SQL, only global (i.e. double pound (##)) temp tables are supported for @OutputTableName', 16, 0)
					END


				DECLARE @separator AS VARCHAR(1);
				IF @OutputType = 'RSV'
					SET @separator = CHAR(31);
				ELSE
					SET @separator = ',';

				IF @OutputType = 'COUNT'
					BEGIN
						SELECT  COUNT(*) AS Warnings
						FROM    #BlitzResults
					END
				ELSE
					IF @OutputType IN ( 'CSV', 'RSV' )
						BEGIN

							SELECT  Result = CAST([Priority] AS NVARCHAR(100))
									+ @separator + CAST(CheckID AS NVARCHAR(100))
									+ @separator + COALESCE([FindingsGroup],
															'(N/A)') + @separator
									+ COALESCE([Finding], '(N/A)') + @separator
									+ COALESCE(DatabaseName, '(N/A)') + @separator
									+ COALESCE([URL], '(N/A)') + @separator
									+ COALESCE([Details], '(N/A)')
							FROM    #BlitzResults
							ORDER BY Priority ,
									FindingsGroup ,
									Finding ,
									Details;
						END
					ELSE IF @OutputXMLasNVARCHAR = 1 AND @OutputType <> 'NONE'
						BEGIN
							SELECT  [Priority] ,
									[FindingsGroup] ,
									[Finding] ,
									[DatabaseName] ,
									[URL] ,
									[Details] ,
									CAST([QueryPlan] AS NVARCHAR(MAX)) AS QueryPlan,
									[QueryPlanFiltered] ,
									CheckID
							FROM    #BlitzResults
							ORDER BY Priority ,
									FindingsGroup ,
									Finding ,
									Details;
						END
					ELSE IF @OutputType <> 'NONE'
						BEGIN
							SELECT  [Priority] ,
									[FindingsGroup] ,
									[Finding] ,
									[DatabaseName] ,
									[URL] ,
									[Details] ,
									[QueryPlan] ,
									[QueryPlanFiltered] ,
									CheckID
							FROM    #BlitzResults
							ORDER BY Priority ,
									FindingsGroup ,
									Finding ,
									Details;
						END

				DROP TABLE #BlitzResults;

				IF @OutputProcedureCache = 1
					AND @CheckProcedureCache = 1
					SELECT TOP 20
							total_worker_time / execution_count AS AvgCPU ,
							total_worker_time AS TotalCPU ,
							CAST(ROUND(100.00 * total_worker_time
									   / ( SELECT   SUM(total_worker_time)
										   FROM     sys.dm_exec_query_stats
										 ), 2) AS MONEY) AS PercentCPU ,
							total_elapsed_time / execution_count AS AvgDuration ,
							total_elapsed_time AS TotalDuration ,
							CAST(ROUND(100.00 * total_elapsed_time
									   / ( SELECT   SUM(total_elapsed_time)
										   FROM     sys.dm_exec_query_stats
										 ), 2) AS MONEY) AS PercentDuration ,
							total_logical_reads / execution_count AS AvgReads ,
							total_logical_reads AS TotalReads ,
							CAST(ROUND(100.00 * total_logical_reads
									   / ( SELECT   SUM(total_logical_reads)
										   FROM     sys.dm_exec_query_stats
										 ), 2) AS MONEY) AS PercentReads ,
							execution_count ,
							CAST(ROUND(100.00 * execution_count
									   / ( SELECT   SUM(execution_count)
										   FROM     sys.dm_exec_query_stats
										 ), 2) AS MONEY) AS PercentExecutions ,
							CASE WHEN DATEDIFF(mi, creation_time,
											   qs.last_execution_time) = 0 THEN 0
								 ELSE CAST(( 1.00 * execution_count / DATEDIFF(mi,
																  creation_time,
																  qs.last_execution_time) ) AS MONEY)
							END AS executions_per_minute ,
							qs.creation_time AS plan_creation_time ,
							qs.last_execution_time ,
							text ,
							text_filtered ,
							query_plan ,
							query_plan_filtered ,
							sql_handle ,
							query_hash ,
							plan_handle ,
							query_plan_hash
					FROM    #dm_exec_query_stats qs
					ORDER BY CASE UPPER(@CheckProcedureCacheFilter)
							   WHEN 'CPU' THEN total_worker_time
							   WHEN 'READS' THEN total_logical_reads
							   WHEN 'EXECCOUNT' THEN execution_count
							   WHEN 'DURATION' THEN total_elapsed_time
							   ELSE total_worker_time
							 END DESC

	END /* ELSE -- IF @OutputType = 'SCHEMA' */

    SET NOCOUNT OFF;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[decimal]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[decimal]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[decimal]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[decimal]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@VersionDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@Help]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@OutputType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@SkipChecksTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@SkipChecksSchema]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@SkipChecksDatabase]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@CheckUserDatabaseObjects]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#ConfigurationDefaults]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#Recompile]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DBCCs]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#LogInfo2012]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#LogInfo]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#partdb]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#TraceStatus]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#driveInfo]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@CheckProcedureCache]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@BringThePain]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@OutputDatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@OutputSchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@OutputTableName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[ServerName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[CheckID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[URL]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Details]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[decimal]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[DefaultValue]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[CheckID]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[DefaultValue]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[DefaultValue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[CheckID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[Priority]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[Finding]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[URL]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[Details]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varbinary]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varbinary]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#Recompile].[DBName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#Recompile].[SPSchema]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#Recompile].[ProcName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#partdb].[dbname]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@CheckProcedureCacheFilter]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[plan_handle]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[statement_start_offset]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[statement_end_offset]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan_filtered]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[sql_handle]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[plan_handle]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[text]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[text_filtered]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[statement_start_offset]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[statement_end_offset]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[QueryPlan]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[QueryPlanFiltered]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan_filtered]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DBCCs].[Field]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DBCCs].[Value]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#DBCCs].[DbName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@AlertInfo].[FailSafeOperator]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#TraceStatus].[TraceFlag]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@CheckServerInfo]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#driveInfo].[drive]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#driveInfo].[SIZE]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#driveInfo].[drive]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#driveInfo].[SIZE]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[CTE4].[os].[wait_time_ms]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[CTE4].[os].[wait_type]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[CTE4].[os].[signal_wait_time_ms]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[CTE4].[os].[waiting_tasks_count]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[CheckID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@IgnorePrioritiesAbove]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@IgnorePrioritiesBelow]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[ServerName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[CheckID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#SkipChecks].[ServerName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@SummaryMode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#BlitzResults].[ID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@EmailRecipients]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[##BlitzResults]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@EmailProfile]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@OutputXMLasNVARCHAR]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[@OutputProcedureCache]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_worker_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[execution_count]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[money]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_worker_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_elapsed_time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[money]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_elapsed_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_logical_reads]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[money]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_logical_reads]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[money]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[execution_count]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[creation_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_execution_time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[money]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[creation_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[sql_handle]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_hash]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[plan_handle]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan_hash]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#BlitzResults]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[CheckID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="50" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[URL]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[Details]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[QueryPlan]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlXmlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[xml]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#BlitzResults].[QueryPlanFiltered]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#SkipChecks]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#SkipChecks].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#SkipChecks].[CheckID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#SkipChecks].[ServerName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#ConfigurationDefaults]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[DefaultValue]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#ConfigurationDefaults].[CheckID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#Recompile]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#Recompile].[DBName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#Recompile].[ProcName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="300" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#Recompile].[RecompileFlag]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#Recompile].[SPSchema]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="50" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#DatabaseDefaults]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[DefaultValue]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[CheckID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[Priority]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[Finding]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[URL]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DatabaseDefaults].[Details]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#DBCCs]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DBCCs].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DBCCs].[ParentObject]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DBCCs].[Object]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DBCCs].[Field]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DBCCs].[Value]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#DBCCs].[DbName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#LogInfo2012]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[recoveryunitid]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[FileID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[FileSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[StartOffset]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[FSeqNo]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[Status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[Parity]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo2012].[CreateLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="38" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#LogInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo].[FileID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo].[FileSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo].[StartOffset]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo].[FSeqNo]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo].[Status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo].[Parity]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#LogInfo].[CreateLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="38" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#partdb]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#partdb].[dbname]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#partdb].[objectname]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#partdb].[type_desc]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#TraceStatus]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#TraceStatus].[TraceFlag]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="10" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#TraceStatus].[status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#TraceStatus].[Global]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#TraceStatus].[Session]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#driveInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#driveInfo].[drive]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#driveInfo].[SIZE]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="2" />
												<Property Name="Precision" Value="18" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[id]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[sql_handle]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="64" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varbinary]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[statement_start_offset]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[statement_end_offset]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[plan_generation_num]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[plan_handle]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="64" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varbinary]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[creation_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_execution_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[execution_count]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_worker_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_worker_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[min_worker_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[max_worker_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_physical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_physical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[min_physical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[max_physical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_logical_writes]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_logical_writes]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[min_logical_writes]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[max_logical_writes]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_logical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_logical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[min_logical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[max_logical_reads]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_clr_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_clr_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[min_clr_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[max_clr_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[total_elapsed_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[last_elapsed_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[min_elapsed_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[max_elapsed_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_hash]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="8" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[binary]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan_hash]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="8" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[binary]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlXmlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[xml]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[query_plan_filtered]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[text]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[#dm_exec_query_stats].[text_filtered]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[@AlertInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[FailSafeOperator]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[NotificationMethod]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[ForwardingServer]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[ForwardingSeverity]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[PagerToTemplate]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[PagerCCTemplate]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[PagerSubjectTemplate]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[PagerSendSubjectOnly]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_Blitz].[@AlertInfo].[ForwardAlways]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[CTE1].[maintenance_plan_steps]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE1].[maintenance_plan_steps].[name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE1].[maintenance_plan_steps].[maintenance_plan_xml]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[CTE2].[maintenance_plan_steps]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE2].[maintenance_plan_steps].[name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE2].[maintenance_plan_steps].[maintenance_plan_xml]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[CTE2].[maintenance_plan_table]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE2].[maintenance_plan_table].[name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE2].[maintenance_plan_table].[step_name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[CTE2].[mp_steps_pretty]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE2].[mp_steps_pretty].[name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE2].[mp_steps_pretty].[maintenance_plan_steps]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[CTE3].[DB2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE3].[DB2].[Field]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#DBCCs].[Field]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE3].[DB2].[Value]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#DBCCs].[Value]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE3].[DB2].[DbName]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#DBCCs].[DbName]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[CTE4].[os]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE4].[os].[wait_type]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE4].[os].[waiting_tasks_count]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE4].[os].[wait_time_ms]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE4].[os].[max_wait_time_ms]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[CTE4].[os].[signal_wait_time_ms]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_Blitz].[##BlitzResults]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[ID]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[ID]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[CheckID]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[CheckID]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[DatabaseName]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[DatabaseName]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[Priority]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Priority]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[FindingsGroup]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[FindingsGroup]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[Finding]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Finding]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[URL]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[URL]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[Details]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[Details]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[QueryPlan]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[QueryPlan]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_Blitz].[##BlitzResults].[QueryPlanFiltered]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_Blitz].[#BlitzResults].[QueryPlanFiltered]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@Help]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@CheckUserDatabaseObjects]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@CheckProcedureCache]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@OutputType]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['TABLE']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="20" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@OutputProcedureCache]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@CheckProcedureCacheFilter]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@CheckServerInfo]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@SkipChecksServer]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@SkipChecksDatabase]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@SkipChecksSchema]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@SkipChecksTable]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@IgnorePrioritiesBelow]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@IgnorePrioritiesAbove]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@OutputServerName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@OutputDatabaseName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@OutputSchemaName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@OutputTableName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@OutputXMLasNVARCHAR]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@EmailRecipients]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@EmailProfile]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@SummaryMode]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@BringThePain]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_Blitz].[@VersionDate]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="2" />
				<Property Name="Length" Value="269076" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE PROCEDURE [dbo].[sp_Blitz]&#xD;&#xA;    @Help TINYINT = 0 ,&#xD;&#xA;    @CheckUserDatabaseObjects TINYINT = 1 ,&#xD;&#xA;    @CheckProcedureCache TINYINT = 0 ,&#xD;&#xA;    @OutputType VARCHAR(20) = 'TABLE' ,&#xD;&#xA;    @OutputProcedureCache TINYINT = 0 ,&#xD;&#xA;    @CheckProcedureCacheFilter VARCHAR(10) = NULL ,&#xD;&#xA;    @CheckServerInfo TINYINT = 1 ,&#xD;&#xA;    @SkipChecksServer NVARCHAR(256) = NULL ,&#xD;&#xA;    @SkipChecksDatabase NVARCHAR(256) = NULL ,&#xD;&#xA;    @SkipChecksSchema NVARCHAR(256) = NULL ,&#xD;&#xA;    @SkipChecksTable NVARCHAR(256) = NULL ,&#xD;&#xA;    @IgnorePrioritiesBelow INT = NULL ,&#xD;&#xA;    @IgnorePrioritiesAbove INT = NULL ,&#xD;&#xA;    @OutputServerName NVARCHAR(256) = NULL ,&#xD;&#xA;    @OutputDatabaseName NVARCHAR(256) = NULL ,&#xD;&#xA;    @OutputSchemaName NVARCHAR(256) = NULL ,&#xD;&#xA;    @OutputTableName NVARCHAR(256) = NULL ,&#xD;&#xA;    @OutputXMLasNVARCHAR TINYINT = 0 ,&#xD;&#xA;    @EmailRecipients VARCHAR(MAX) = NULL ,&#xD;&#xA;    @EmailProfile sysname = NULL ,&#xD;&#xA;    @SummaryMode TINYINT = 0 ,&#xD;&#xA;    @BringThePain TINYINT = 0 ,&#xD;&#xA;    @VersionDate DATETIME = NULL OUTPUT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[sp_WhoIsActive]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN;
	SET NOCOUNT ON; 
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	SET QUOTED_IDENTIFIER ON;
	SET ANSI_PADDING ON;
	SET CONCAT_NULL_YIELDS_NULL ON;
	SET ANSI_WARNINGS ON;
	SET NUMERIC_ROUNDABORT OFF;
	SET ARITHABORT ON;

	IF
		@filter IS NULL
		OR @filter_type IS NULL
		OR @not_filter IS NULL
		OR @not_filter_type IS NULL
		OR @show_own_spid IS NULL
		OR @show_system_spids IS NULL
		OR @show_sleeping_spids IS NULL
		OR @get_full_inner_text IS NULL
		OR @get_plans IS NULL
		OR @get_outer_command IS NULL
		OR @get_transaction_info IS NULL
		OR @get_task_info IS NULL
		OR @get_locks IS NULL
		OR @get_avg_time IS NULL
		OR @get_additional_info IS NULL
		OR @find_block_leaders IS NULL
		OR @delta_interval IS NULL
		OR @format_output IS NULL
		OR @output_column_list IS NULL
		OR @sort_order IS NULL
		OR @return_schema IS NULL
		OR @destination_table IS NULL
		OR @help IS NULL
	BEGIN;
		RAISERROR('Input parameters cannot be NULL', 16, 1);
		RETURN;
	END;
	
	IF @filter_type NOT IN ('session', 'program', 'database', 'login', 'host')
	BEGIN;
		RAISERROR('Valid filter types are: session, program, database, login, host', 16, 1);
		RETURN;
	END;
	
	IF @filter_type = 'session' AND @filter LIKE '%[^0123456789]%'
	BEGIN;
		RAISERROR('Session filters must be valid integers', 16, 1);
		RETURN;
	END;
	
	IF @not_filter_type NOT IN ('session', 'program', 'database', 'login', 'host')
	BEGIN;
		RAISERROR('Valid filter types are: session, program, database, login, host', 16, 1);
		RETURN;
	END;
	
	IF @not_filter_type = 'session' AND @not_filter LIKE '%[^0123456789]%'
	BEGIN;
		RAISERROR('Session filters must be valid integers', 16, 1);
		RETURN;
	END;
	
	IF @show_sleeping_spids NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR('Valid values for @show_sleeping_spids are: 0, 1, or 2', 16, 1);
		RETURN;
	END;
	
	IF @get_plans NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR('Valid values for @get_plans are: 0, 1, or 2', 16, 1);
		RETURN;
	END;

	IF @get_task_info NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR('Valid values for @get_task_info are: 0, 1, or 2', 16, 1);
		RETURN;
	END;

	IF @format_output NOT IN (0, 1, 2)
	BEGIN;
		RAISERROR('Valid values for @format_output are: 0, 1, or 2', 16, 1);
		RETURN;
	END;
	
	IF @help = 1
	BEGIN;
		DECLARE 
			@header VARCHAR(MAX),
			@params VARCHAR(MAX),
			@outputs VARCHAR(MAX);

		SELECT 
			@header =
				REPLACE
				(
					REPLACE
					(
						CONVERT
						(
							VARCHAR(MAX),
							SUBSTRING
							(
								t.text, 
								CHARINDEX('/' + REPLICATE('*', 93), t.text) + 94,
								CHARINDEX(REPLICATE('*', 93) + '/', t.text) - (CHARINDEX('/' + REPLICATE('*', 93), t.text) + 94)
							)
						),
						CHAR(13)+CHAR(10),
						CHAR(13)
					),
					'	',
					''
				),
			@params =
				CHAR(13) +
					REPLACE
					(
						REPLACE
						(
							CONVERT
							(
								VARCHAR(MAX),
								SUBSTRING
								(
									t.text, 
									CHARINDEX('--~', t.text) + 5, 
									CHARINDEX('--~', t.text, CHARINDEX('--~', t.text) + 5) - (CHARINDEX('--~', t.text) + 5)
								)
							),
							CHAR(13)+CHAR(10),
							CHAR(13)
						),
						'	',
						''
					),
				@outputs = 
					CHAR(13) +
						REPLACE
						(
							REPLACE
							(
								REPLACE
								(
									CONVERT
									(
										VARCHAR(MAX),
										SUBSTRING
										(
											t.text, 
											CHARINDEX('OUTPUT COLUMNS'+CHAR(13)+CHAR(10)+'--------------', t.text) + 32,
											CHARINDEX('*/', t.text, CHARINDEX('OUTPUT COLUMNS'+CHAR(13)+CHAR(10)+'--------------', t.text) + 32) - (CHARINDEX('OUTPUT COLUMNS'+CHAR(13)+CHAR(10)+'--------------', t.text) + 32)
										)
									),
									CHAR(9),
									CHAR(255)
								),
								CHAR(13)+CHAR(10),
								CHAR(13)
							),
							'	',
							''
						) +
						CHAR(13)
			FROM sys.dm_exec_requests AS r
			CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) AS t
			WHERE
				r.session_id = @@SPID;

		WITH
		a0 AS
		(SELECT 1 AS n UNION ALL SELECT 1),
		a1 AS
		(SELECT 1 AS n FROM a0 AS a, a0 AS b),
		a2 AS
		(SELECT 1 AS n FROM a1 AS a, a1 AS b),
		a3 AS
		(SELECT 1 AS n FROM a2 AS a, a2 AS b),
		a4 AS
		(SELECT 1 AS n FROM a3 AS a, a3 AS b),
		numbers AS
		(
			SELECT TOP(LEN(@header) - 1)
				ROW_NUMBER() OVER
				(
					ORDER BY (SELECT NULL)
				) AS number
			FROM a4
			ORDER BY
				number
		)
		SELECT
			RTRIM(LTRIM(
				SUBSTRING
				(
					@header,
					number + 1,
					CHARINDEX(CHAR(13), @header, number + 1) - number - 1
				)
			)) AS [------header---------------------------------------------------------------------------------------------------------------]
		FROM numbers
		WHERE
			SUBSTRING(@header, number, 1) = CHAR(13);

		WITH
		a0 AS
		(SELECT 1 AS n UNION ALL SELECT 1),
		a1 AS
		(SELECT 1 AS n FROM a0 AS a, a0 AS b),
		a2 AS
		(SELECT 1 AS n FROM a1 AS a, a1 AS b),
		a3 AS
		(SELECT 1 AS n FROM a2 AS a, a2 AS b),
		a4 AS
		(SELECT 1 AS n FROM a3 AS a, a3 AS b),
		numbers AS
		(
			SELECT TOP(LEN(@params) - 1)
				ROW_NUMBER() OVER
				(
					ORDER BY (SELECT NULL)
				) AS number
			FROM a4
			ORDER BY
				number
		),
		tokens AS
		(
			SELECT 
				RTRIM(LTRIM(
					SUBSTRING
					(
						@params,
						number + 1,
						CHARINDEX(CHAR(13), @params, number + 1) - number - 1
					)
				)) AS token,
				number,
				CASE
					WHEN SUBSTRING(@params, number + 1, 1) = CHAR(13) THEN number
					ELSE COALESCE(NULLIF(CHARINDEX(',' + CHAR(13) + CHAR(13), @params, number), 0), LEN(@params)) 
				END AS param_group,
				ROW_NUMBER() OVER
				(
					PARTITION BY
						CHARINDEX(',' + CHAR(13) + CHAR(13), @params, number),
						SUBSTRING(@params, number+1, 1)
					ORDER BY 
						number
				) AS group_order
			FROM numbers
			WHERE
				SUBSTRING(@params, number, 1) = CHAR(13)
		),
		parsed_tokens AS
		(
			SELECT
				MIN
				(
					CASE
						WHEN token LIKE '@%' THEN token
						ELSE NULL
					END
				) AS parameter,
				MIN
				(
					CASE
						WHEN token LIKE '--%' THEN RIGHT(token, LEN(token) - 2)
						ELSE NULL
					END
				) AS description,
				param_group,
				group_order
			FROM tokens
			WHERE
				NOT 
				(
					token = '' 
					AND group_order > 1
				)
			GROUP BY
				param_group,
				group_order
		)
		SELECT
			CASE
				WHEN description IS NULL AND parameter IS NULL THEN '-------------------------------------------------------------------------'
				WHEN param_group = MAX(param_group) OVER() THEN parameter
				ELSE COALESCE(LEFT(parameter, LEN(parameter) - 1), '')
			END AS [------parameter----------------------------------------------------------],
			CASE
				WHEN description IS NULL AND parameter IS NULL THEN '----------------------------------------------------------------------------------------------------------------------'
				ELSE COALESCE(description, '')
			END AS [------description-----------------------------------------------------------------------------------------------------]
		FROM parsed_tokens
		ORDER BY
			param_group, 
			group_order;
		
		WITH
		a0 AS
		(SELECT 1 AS n UNION ALL SELECT 1),
		a1 AS
		(SELECT 1 AS n FROM a0 AS a, a0 AS b),
		a2 AS
		(SELECT 1 AS n FROM a1 AS a, a1 AS b),
		a3 AS
		(SELECT 1 AS n FROM a2 AS a, a2 AS b),
		a4 AS
		(SELECT 1 AS n FROM a3 AS a, a3 AS b),
		numbers AS
		(
			SELECT TOP(LEN(@outputs) - 1)
				ROW_NUMBER() OVER
				(
					ORDER BY (SELECT NULL)
				) AS number
			FROM a4
			ORDER BY
				number
		),
		tokens AS
		(
			SELECT 
				RTRIM(LTRIM(
					SUBSTRING
					(
						@outputs,
						number + 1,
						CASE
							WHEN 
								COALESCE(NULLIF(CHARINDEX(CHAR(13) + 'Formatted', @outputs, number + 1), 0), LEN(@outputs)) < 
								COALESCE(NULLIF(CHARINDEX(CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2, @outputs, number + 1), 0), LEN(@outputs))
								THEN COALESCE(NULLIF(CHARINDEX(CHAR(13) + 'Formatted', @outputs, number + 1), 0), LEN(@outputs)) - number - 1
							ELSE
								COALESCE(NULLIF(CHARINDEX(CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2, @outputs, number + 1), 0), LEN(@outputs)) - number - 1
						END
					)
				)) AS token,
				number,
				COALESCE(NULLIF(CHARINDEX(CHAR(13) + 'Formatted', @outputs, number + 1), 0), LEN(@outputs)) AS output_group,
				ROW_NUMBER() OVER
				(
					PARTITION BY 
						COALESCE(NULLIF(CHARINDEX(CHAR(13) + 'Formatted', @outputs, number + 1), 0), LEN(@outputs))
					ORDER BY
						number
				) AS output_group_order
			FROM numbers
			WHERE
				SUBSTRING(@outputs, number, 10) = CHAR(13) + 'Formatted'
				OR SUBSTRING(@outputs, number, 2) = CHAR(13) + CHAR(255) COLLATE Latin1_General_Bin2
		),
		output_tokens AS
		(
			SELECT 
				*,
				CASE output_group_order
					WHEN 2 THEN MAX(CASE output_group_order WHEN 1 THEN token ELSE NULL END) OVER (PARTITION BY output_group)
					ELSE ''
				END COLLATE Latin1_General_Bin2 AS column_info
			FROM tokens
		)
		SELECT
			CASE output_group_order
				WHEN 1 THEN '-----------------------------------'
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX('Formatted/Non:', column_info) = 1 THEN
							SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+1, CHARINDEX(']', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info))
						ELSE
							SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2, CHARINDEX(']', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)+2) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info)-1)
					END
				ELSE ''
			END AS formatted_column_name,
			CASE output_group_order
				WHEN 1 THEN '-----------------------------------'
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX('Formatted/Non:', column_info) = 1 THEN
							SUBSTRING(column_info, CHARINDEX(']', column_info)+2, LEN(column_info))
						ELSE
							SUBSTRING(column_info, CHARINDEX(']', column_info)+2, CHARINDEX('Non-Formatted:', column_info, CHARINDEX(']', column_info)+2) - CHARINDEX(']', column_info)-3)
					END
				ELSE ''
			END AS formatted_column_type,
			CASE output_group_order
				WHEN 1 THEN '---------------------------------------'
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX('Formatted/Non:', column_info) = 1 THEN ''
						ELSE
							CASE
								WHEN SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info))+1, 1) = '<' THEN
									SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info))+1, CHARINDEX('>', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info))+1) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info)))
								ELSE
									SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info))+1, CHARINDEX(']', column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info))+1) - CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info)))
							END
					END
				ELSE ''
			END AS unformatted_column_name,
			CASE output_group_order
				WHEN 1 THEN '---------------------------------------'
				WHEN 2 THEN 
					CASE
						WHEN CHARINDEX('Formatted/Non:', column_info) = 1 THEN ''
						ELSE
							CASE
								WHEN SUBSTRING(column_info, CHARINDEX(CHAR(255) COLLATE Latin1_General_Bin2, column_info, CHARINDEX('Non-Formatted:', column_info))+1, 1) = '<' THEN ''
								ELSE
									SUBSTRING(column_info, CHARINDEX(']', column_info, CHARINDEX('Non-Formatted:', column_info))+2, CHARINDEX('Non-Formatted:', column_info, CHARINDEX(']', column_info)+2) - CHARINDEX(']', column_info)-3)
							END
					END
				ELSE ''
			END AS unformatted_column_type,
			CASE output_group_order
				WHEN 1 THEN '----------------------------------------------------------------------------------------------------------------------'
				ELSE REPLACE(token, CHAR(255) COLLATE Latin1_General_Bin2, '')
			END AS [------description-----------------------------------------------------------------------------------------------------]
		FROM output_tokens
		WHERE
			NOT 
			(
				output_group_order = 1 
				AND output_group = LEN(@outputs)
			)
		ORDER BY
			output_group,
			CASE output_group_order
				WHEN 1 THEN 99
				ELSE output_group_order
			END;

		RETURN;
	END;

	WITH
	a0 AS
	(SELECT 1 AS n UNION ALL SELECT 1),
	a1 AS
	(SELECT 1 AS n FROM a0 AS a, a0 AS b),
	a2 AS
	(SELECT 1 AS n FROM a1 AS a, a1 AS b),
	a3 AS
	(SELECT 1 AS n FROM a2 AS a, a2 AS b),
	a4 AS
	(SELECT 1 AS n FROM a3 AS a, a3 AS b),
	numbers AS
	(
		SELECT TOP(LEN(@output_column_list))
			ROW_NUMBER() OVER
			(
				ORDER BY (SELECT NULL)
			) AS number
		FROM a4
		ORDER BY
			number
	),
	tokens AS
	(
		SELECT 
			'|[' +
				SUBSTRING
				(
					@output_column_list,
					number + 1,
					CHARINDEX(']', @output_column_list, number) - number - 1
				) + '|]' AS token,
			number
		FROM numbers
		WHERE
			SUBSTRING(@output_column_list, number, 1) = '['
	),
	ordered_columns AS
	(
		SELECT
			x.column_name,
			ROW_NUMBER() OVER
			(
				PARTITION BY
					x.column_name
				ORDER BY
					tokens.number,
					x.default_order
			) AS r,
			ROW_NUMBER() OVER
			(
				ORDER BY
					tokens.number,
					x.default_order
			) AS s
		FROM tokens
		JOIN
		(
			SELECT '[session_id]' AS column_name, 1 AS default_order
			UNION ALL
			SELECT '[dd hh:mm:ss.mss]', 2
			WHERE
				@format_output = 1
			UNION ALL
			SELECT '[dd hh:mm:ss.mss (avg)]', 3
			WHERE
				@format_output = 1
				AND @get_avg_time = 1
			UNION ALL
			SELECT '[avg_elapsed_time]', 4
			WHERE
				@format_output = 0
				AND @get_avg_time = 1
			UNION ALL
			SELECT '[physical_io]', 5
			WHERE
				@get_task_info = 2
			UNION ALL
			SELECT '[reads]', 6
			UNION ALL
			SELECT '[physical_reads]', 7
			UNION ALL
			SELECT '[writes]', 8
			UNION ALL
			SELECT '[tempdb_allocations]', 9
			UNION ALL
			SELECT '[tempdb_current]', 10
			UNION ALL
			SELECT '[CPU]', 11
			UNION ALL
			SELECT '[context_switches]', 12
			WHERE
				@get_task_info = 2
			UNION ALL
			SELECT '[used_memory]', 13
			UNION ALL
			SELECT '[physical_io_delta]', 14
			WHERE
				@delta_interval > 0	
				AND @get_task_info = 2
			UNION ALL
			SELECT '[reads_delta]', 15
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT '[physical_reads_delta]', 16
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT '[writes_delta]', 17
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT '[tempdb_allocations_delta]', 18
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT '[tempdb_current_delta]', 19
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT '[CPU_delta]', 20
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT '[context_switches_delta]', 21
			WHERE
				@delta_interval > 0
				AND @get_task_info = 2
			UNION ALL
			SELECT '[used_memory_delta]', 22
			WHERE
				@delta_interval > 0
			UNION ALL
			SELECT '[tasks]', 23
			WHERE
				@get_task_info = 2
			UNION ALL
			SELECT '[status]', 24
			UNION ALL
			SELECT '[wait_info]', 25
			WHERE
				@get_task_info > 0
				OR @find_block_leaders = 1
			UNION ALL
			SELECT '[locks]', 26
			WHERE
				@get_locks = 1
			UNION ALL
			SELECT '[tran_start_time]', 27
			WHERE
				@get_transaction_info = 1
			UNION ALL
			SELECT '[tran_log_writes]', 28
			WHERE
				@get_transaction_info = 1
			UNION ALL
			SELECT '[open_tran_count]', 29
			UNION ALL
			SELECT '[sql_command]', 30
			WHERE
				@get_outer_command = 1
			UNION ALL
			SELECT '[sql_text]', 31
			UNION ALL
			SELECT '[query_plan]', 32
			WHERE
				@get_plans >= 1
			UNION ALL
			SELECT '[blocking_session_id]', 33
			WHERE
				@get_task_info > 0
				OR @find_block_leaders = 1
			UNION ALL
			SELECT '[blocked_session_count]', 34
			WHERE
				@find_block_leaders = 1
			UNION ALL
			SELECT '[percent_complete]', 35
			UNION ALL
			SELECT '[host_name]', 36
			UNION ALL
			SELECT '[login_name]', 37
			UNION ALL
			SELECT '[database_name]', 38
			UNION ALL
			SELECT '[program_name]', 39
			UNION ALL
			SELECT '[additional_info]', 40
			WHERE
				@get_additional_info = 1
			UNION ALL
			SELECT '[start_time]', 41
			UNION ALL
			SELECT '[login_time]', 42
			UNION ALL
			SELECT '[request_id]', 43
			UNION ALL
			SELECT '[collection_time]', 44
		) AS x ON 
			x.column_name LIKE token ESCAPE '|'
	)
	SELECT
		@output_column_list =
			STUFF
			(
				(
					SELECT
						',' + column_name as [text()]
					FROM ordered_columns
					WHERE
						r = 1
					ORDER BY
						s
					FOR XML
						PATH('')
				),
				1,
				1,
				''
			);
	
	IF COALESCE(RTRIM(@output_column_list), '') = ''
	BEGIN;
		RAISERROR('No valid column matches found in @output_column_list or no columns remain due to selected options.', 16, 1);
		RETURN;
	END;
	
	IF @destination_table <> ''
	BEGIN;
		SET @destination_table = 
			--database
			COALESCE(QUOTENAME(PARSENAME(@destination_table, 3)) + '.', '') +
			--schema
			COALESCE(QUOTENAME(PARSENAME(@destination_table, 2)) + '.', '') +
			--table
			COALESCE(QUOTENAME(PARSENAME(@destination_table, 1)), '');
			
		IF COALESCE(RTRIM(@destination_table), '') = ''
		BEGIN;
			RAISERROR('Destination table not properly formatted.', 16, 1);
			RETURN;
		END;
	END;

	WITH
	a0 AS
	(SELECT 1 AS n UNION ALL SELECT 1),
	a1 AS
	(SELECT 1 AS n FROM a0 AS a, a0 AS b),
	a2 AS
	(SELECT 1 AS n FROM a1 AS a, a1 AS b),
	a3 AS
	(SELECT 1 AS n FROM a2 AS a, a2 AS b),
	a4 AS
	(SELECT 1 AS n FROM a3 AS a, a3 AS b),
	numbers AS
	(
		SELECT TOP(LEN(@sort_order))
			ROW_NUMBER() OVER
			(
				ORDER BY (SELECT NULL)
			) AS number
		FROM a4
		ORDER BY
			number
	),
	tokens AS
	(
		SELECT 
			'|[' +
				SUBSTRING
				(
					@sort_order,
					number + 1,
					CHARINDEX(']', @sort_order, number) - number - 1
				) + '|]' AS token,
			SUBSTRING
			(
				@sort_order,
				CHARINDEX(']', @sort_order, number) + 1,
				COALESCE(NULLIF(CHARINDEX('[', @sort_order, CHARINDEX(']', @sort_order, number)), 0), LEN(@sort_order)) - CHARINDEX(']', @sort_order, number)
			) AS next_chunk,
			number
		FROM numbers
		WHERE
			SUBSTRING(@sort_order, number, 1) = '['
	),
	ordered_columns AS
	(
		SELECT
			x.column_name +
				CASE
					WHEN tokens.next_chunk LIKE '%asc%' THEN ' ASC'
					WHEN tokens.next_chunk LIKE '%desc%' THEN ' DESC'
					ELSE ''
				END AS column_name,
			ROW_NUMBER() OVER
			(
				PARTITION BY
					x.column_name
				ORDER BY
					tokens.number
			) AS r,
			tokens.number
		FROM tokens
		JOIN
		(
			SELECT '[session_id]' AS column_name
			UNION ALL
			SELECT '[physical_io]'
			UNION ALL
			SELECT '[reads]'
			UNION ALL
			SELECT '[physical_reads]'
			UNION ALL
			SELECT '[writes]'
			UNION ALL
			SELECT '[tempdb_allocations]'
			UNION ALL
			SELECT '[tempdb_current]'
			UNION ALL
			SELECT '[CPU]'
			UNION ALL
			SELECT '[context_switches]'
			UNION ALL
			SELECT '[used_memory]'
			UNION ALL
			SELECT '[physical_io_delta]'
			UNION ALL
			SELECT '[reads_delta]'
			UNION ALL
			SELECT '[physical_reads_delta]'
			UNION ALL
			SELECT '[writes_delta]'
			UNION ALL
			SELECT '[tempdb_allocations_delta]'
			UNION ALL
			SELECT '[tempdb_current_delta]'
			UNION ALL
			SELECT '[CPU_delta]'
			UNION ALL
			SELECT '[context_switches_delta]'
			UNION ALL
			SELECT '[used_memory_delta]'
			UNION ALL
			SELECT '[tasks]'
			UNION ALL
			SELECT '[tran_start_time]'
			UNION ALL
			SELECT '[open_tran_count]'
			UNION ALL
			SELECT '[blocking_session_id]'
			UNION ALL
			SELECT '[blocked_session_count]'
			UNION ALL
			SELECT '[percent_complete]'
			UNION ALL
			SELECT '[host_name]'
			UNION ALL
			SELECT '[login_name]'
			UNION ALL
			SELECT '[database_name]'
			UNION ALL
			SELECT '[start_time]'
			UNION ALL
			SELECT '[login_time]'
		) AS x ON 
			x.column_name LIKE token ESCAPE '|'
	)
	SELECT
		@sort_order = COALESCE(z.sort_order, '')
	FROM
	(
		SELECT
			STUFF
			(
				(
					SELECT
						',' + column_name as [text()]
					FROM ordered_columns
					WHERE
						r = 1
					ORDER BY
						number
					FOR XML
						PATH('')
				),
				1,
				1,
				''
			) AS sort_order
	) AS z;

	CREATE TABLE #sessions
	(
		recursion SMALLINT NOT NULL,
		session_id SMALLINT NOT NULL,
		request_id INT NOT NULL,
		session_number INT NOT NULL,
		elapsed_time INT NOT NULL,
		avg_elapsed_time INT NULL,
		physical_io BIGINT NULL,
		reads BIGINT NULL,
		physical_reads BIGINT NULL,
		writes BIGINT NULL,
		tempdb_allocations BIGINT NULL,
		tempdb_current BIGINT NULL,
		CPU INT NULL,
		thread_CPU_snapshot BIGINT NULL,
		context_switches BIGINT NULL,
		used_memory BIGINT NOT NULL, 
		tasks SMALLINT NULL,
		status VARCHAR(30) NOT NULL,
		wait_info NVARCHAR(4000) NULL,
		locks XML NULL,
		transaction_id BIGINT NULL,
		tran_start_time DATETIME NULL,
		tran_log_writes NVARCHAR(4000) NULL,
		open_tran_count SMALLINT NULL,
		sql_command XML NULL,
		sql_handle VARBINARY(64) NULL,
		statement_start_offset INT NULL,
		statement_end_offset INT NULL,
		sql_text XML NULL,
		plan_handle VARBINARY(64) NULL,
		query_plan XML NULL,
		blocking_session_id SMALLINT NULL,
		blocked_session_count SMALLINT NULL,
		percent_complete REAL NULL,
		host_name sysname NULL,
		login_name sysname NOT NULL,
		database_name sysname NULL,
		program_name sysname NULL,
		additional_info XML NULL,
		start_time DATETIME NOT NULL,
		login_time DATETIME NULL,
		last_request_start_time DATETIME NULL,
		PRIMARY KEY CLUSTERED (session_id, request_id, recursion) WITH (IGNORE_DUP_KEY = ON),
		UNIQUE NONCLUSTERED (transaction_id, session_id, request_id, recursion) WITH (IGNORE_DUP_KEY = ON)
	);

	IF @return_schema = 0
	BEGIN;
		--Disable unnecessary autostats on the table
		CREATE STATISTICS s_session_id ON #sessions (session_id)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_request_id ON #sessions (request_id)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_transaction_id ON #sessions (transaction_id)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_session_number ON #sessions (session_number)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_status ON #sessions (status)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_start_time ON #sessions (start_time)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_last_request_start_time ON #sessions (last_request_start_time)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;
		CREATE STATISTICS s_recursion ON #sessions (recursion)
		WITH SAMPLE 0 ROWS, NORECOMPUTE;

		DECLARE @recursion SMALLINT;
		SET @recursion = 
			CASE @delta_interval
				WHEN 0 THEN 1
				ELSE -1
			END;

		DECLARE @first_collection_ms_ticks BIGINT;
		DECLARE @last_collection_start DATETIME;

		--Used for the delta pull
		REDO:;
		
		IF 
			@get_locks = 1 
			AND @recursion = 1
			AND @output_column_list LIKE '%|[locks|]%' ESCAPE '|'
		BEGIN;
			SELECT
				y.resource_type,
				y.database_name,
				y.object_id,
				y.file_id,
				y.page_type,
				y.hobt_id,
				y.allocation_unit_id,
				y.index_id,
				y.schema_id,
				y.principal_id,
				y.request_mode,
				y.request_status,
				y.session_id,
				y.resource_description,
				y.request_count,
				s.request_id,
				s.start_time,
				CONVERT(sysname, NULL) AS object_name,
				CONVERT(sysname, NULL) AS index_name,
				CONVERT(sysname, NULL) AS schema_name,
				CONVERT(sysname, NULL) AS principal_name,
				CONVERT(NVARCHAR(2048), NULL) AS query_error
			INTO #locks
			FROM
			(
				SELECT
					sp.spid AS session_id,
					CASE sp.status
						WHEN 'sleeping' THEN CONVERT(INT, 0)
						ELSE sp.request_id
					END AS request_id,
					CASE sp.status
						WHEN 'sleeping' THEN sp.last_batch
						ELSE COALESCE(req.start_time, sp.last_batch)
					END AS start_time,
					sp.dbid
				FROM sys.sysprocesses AS sp
				OUTER APPLY
				(
					SELECT TOP(1)
						CASE
							WHEN 
							(
								sp.hostprocess > ''
								OR r.total_elapsed_time < 0
							) THEN
								r.start_time
							ELSE
								DATEADD
								(
									ms, 
									1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())), 
									DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())
								)
						END AS start_time
					FROM sys.dm_exec_requests AS r
					WHERE
						r.session_id = sp.spid
						AND r.request_id = sp.request_id
				) AS req
				WHERE
					--Process inclusive filter
					1 =
						CASE
							WHEN @filter <> '' THEN
								CASE @filter_type
									WHEN 'session' THEN
										CASE
											WHEN
												CONVERT(SMALLINT, @filter) = 0
												OR sp.spid = CONVERT(SMALLINT, @filter)
													THEN 1
											ELSE 0
										END
									WHEN 'program' THEN
										CASE
											WHEN sp.program_name LIKE @filter THEN 1
											ELSE 0
										END
									WHEN 'login' THEN
										CASE
											WHEN sp.loginame LIKE @filter THEN 1
											ELSE 0
										END
									WHEN 'host' THEN
										CASE
											WHEN sp.hostname LIKE @filter THEN 1
											ELSE 0
										END
									WHEN 'database' THEN
										CASE
											WHEN DB_NAME(sp.dbid) LIKE @filter THEN 1
											ELSE 0
										END
									ELSE 0
								END
							ELSE 1
						END
					--Process exclusive filter
					AND 0 =
						CASE
							WHEN @not_filter <> '' THEN
								CASE @not_filter_type
									WHEN 'session' THEN
										CASE
											WHEN sp.spid = CONVERT(SMALLINT, @not_filter) THEN 1
											ELSE 0
										END
									WHEN 'program' THEN
										CASE
											WHEN sp.program_name LIKE @not_filter THEN 1
											ELSE 0
										END
									WHEN 'login' THEN
										CASE
											WHEN sp.loginame LIKE @not_filter THEN 1
											ELSE 0
										END
									WHEN 'host' THEN
										CASE
											WHEN sp.hostname LIKE @not_filter THEN 1
											ELSE 0
										END
									WHEN 'database' THEN
										CASE
											WHEN DB_NAME(sp.dbid) LIKE @not_filter THEN 1
											ELSE 0
										END
									ELSE 0
								END
							ELSE 0
						END
					AND 
					(
						@show_own_spid = 1
						OR sp.spid <> @@SPID
					)
					AND 
					(
						@show_system_spids = 1
						OR sp.hostprocess > ''
					)
					AND sp.ecid = 0
			) AS s
			INNER HASH JOIN
			(
				SELECT
					x.resource_type,
					x.database_name,
					x.object_id,
					x.file_id,
					CASE
						WHEN x.page_no = 1 OR x.page_no % 8088 = 0 THEN 'PFS'
						WHEN x.page_no = 2 OR x.page_no % 511232 = 0 THEN 'GAM'
						WHEN x.page_no = 3 OR x.page_no % 511233 = 0 THEN 'SGAM'
						WHEN x.page_no = 6 OR x.page_no % 511238 = 0 THEN 'DCM'
						WHEN x.page_no = 7 OR x.page_no % 511239 = 0 THEN 'BCM'
						WHEN x.page_no IS NOT NULL THEN '*'
						ELSE NULL
					END AS page_type,
					x.hobt_id,
					x.allocation_unit_id,
					x.index_id,
					x.schema_id,
					x.principal_id,
					x.request_mode,
					x.request_status,
					x.session_id,
					x.request_id,
					CASE
						WHEN COALESCE(x.object_id, x.file_id, x.hobt_id, x.allocation_unit_id, x.index_id, x.schema_id, x.principal_id) IS NULL THEN NULLIF(resource_description, '')
						ELSE NULL
					END AS resource_description,
					COUNT(*) AS request_count
				FROM
				(
					SELECT
						tl.resource_type +
							CASE
								WHEN tl.resource_subtype = '' THEN ''
								ELSE '.' + tl.resource_subtype
							END AS resource_type,
						COALESCE(DB_NAME(tl.resource_database_id), N'(null)') AS database_name,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_type = 'OBJECT' THEN tl.resource_associated_entity_id
								WHEN tl.resource_description LIKE '%object_id = %' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX('object_id = ', tl.resource_description) + 12), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX(',', tl.resource_description, CHARINDEX('object_id = ', tl.resource_description) + 12),
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX('object_id = ', tl.resource_description) + 12)
										)
									)
								ELSE NULL
							END
						) AS object_id,
						CONVERT
						(
							INT,
							CASE 
								WHEN tl.resource_type = 'FILE' THEN CONVERT(INT, tl.resource_description)
								WHEN tl.resource_type IN ('PAGE', 'EXTENT', 'RID') THEN LEFT(tl.resource_description, CHARINDEX(':', tl.resource_description)-1)
								ELSE NULL
							END
						) AS file_id,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_type IN ('PAGE', 'EXTENT', 'RID') THEN 
									SUBSTRING
									(
										tl.resource_description, 
										CHARINDEX(':', tl.resource_description) + 1, 
										COALESCE
										(
											NULLIF
											(
												CHARINDEX(':', tl.resource_description, CHARINDEX(':', tl.resource_description) + 1), 
												0
											), 
											DATALENGTH(tl.resource_description)+1
										) - (CHARINDEX(':', tl.resource_description) + 1)
									)
								ELSE NULL
							END
						) AS page_no,
						CASE
							WHEN tl.resource_type IN ('PAGE', 'KEY', 'RID', 'HOBT') THEN tl.resource_associated_entity_id
							ELSE NULL
						END AS hobt_id,
						CASE
							WHEN tl.resource_type = 'ALLOCATION_UNIT' THEN tl.resource_associated_entity_id
							ELSE NULL
						END AS allocation_unit_id,
						CONVERT
						(
							INT,
							CASE
								WHEN
									/*TODO: Deal with server principals*/ 
									tl.resource_subtype <> 'SERVER_PRINCIPAL' 
									AND tl.resource_description LIKE '%index_id or stats_id = %' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX('index_id or stats_id = ', tl.resource_description) + 23), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX(',', tl.resource_description, CHARINDEX('index_id or stats_id = ', tl.resource_description) + 23), 
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX('index_id or stats_id = ', tl.resource_description) + 23)
										)
									)
								ELSE NULL
							END 
						) AS index_id,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_description LIKE '%schema_id = %' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX('schema_id = ', tl.resource_description) + 12), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX(',', tl.resource_description, CHARINDEX('schema_id = ', tl.resource_description) + 12), 
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX('schema_id = ', tl.resource_description) + 12)
										)
									)
								ELSE NULL
							END 
						) AS schema_id,
						CONVERT
						(
							INT,
							CASE
								WHEN tl.resource_description LIKE '%principal_id = %' THEN
									(
										SUBSTRING
										(
											tl.resource_description, 
											(CHARINDEX('principal_id = ', tl.resource_description) + 15), 
											COALESCE
											(
												NULLIF
												(
													CHARINDEX(',', tl.resource_description, CHARINDEX('principal_id = ', tl.resource_description) + 15), 
													0
												), 
												DATALENGTH(tl.resource_description)+1
											) - (CHARINDEX('principal_id = ', tl.resource_description) + 15)
										)
									)
								ELSE NULL
							END
						) AS principal_id,
						tl.request_mode,
						tl.request_status,
						tl.request_session_id AS session_id,
						tl.request_request_id AS request_id,

						/*TODO: Applocks, other resource_descriptions*/
						RTRIM(tl.resource_description) AS resource_description,
						tl.resource_associated_entity_id
						/*********************************************/
					FROM 
					(
						SELECT 
							request_session_id,
							CONVERT(VARCHAR(120), resource_type) COLLATE Latin1_General_Bin2 AS resource_type,
							CONVERT(VARCHAR(120), resource_subtype) COLLATE Latin1_General_Bin2 AS resource_subtype,
							resource_database_id,
							CONVERT(VARCHAR(512), resource_description) COLLATE Latin1_General_Bin2 AS resource_description,
							resource_associated_entity_id,
							CONVERT(VARCHAR(120), request_mode) COLLATE Latin1_General_Bin2 AS request_mode,
							CONVERT(VARCHAR(120), request_status) COLLATE Latin1_General_Bin2 AS request_status,
							request_request_id
						FROM sys.dm_tran_locks
					) AS tl
				) AS x
				GROUP BY
					x.resource_type,
					x.database_name,
					x.object_id,
					x.file_id,
					CASE
						WHEN x.page_no = 1 OR x.page_no % 8088 = 0 THEN 'PFS'
						WHEN x.page_no = 2 OR x.page_no % 511232 = 0 THEN 'GAM'
						WHEN x.page_no = 3 OR x.page_no % 511233 = 0 THEN 'SGAM'
						WHEN x.page_no = 6 OR x.page_no % 511238 = 0 THEN 'DCM'
						WHEN x.page_no = 7 OR x.page_no % 511239 = 0 THEN 'BCM'
						WHEN x.page_no IS NOT NULL THEN '*'
						ELSE NULL
					END,
					x.hobt_id,
					x.allocation_unit_id,
					x.index_id,
					x.schema_id,
					x.principal_id,
					x.request_mode,
					x.request_status,
					x.session_id,
					x.request_id,
					CASE
						WHEN COALESCE(x.object_id, x.file_id, x.hobt_id, x.allocation_unit_id, x.index_id, x.schema_id, x.principal_id) IS NULL THEN NULLIF(resource_description, '')
						ELSE NULL
					END
			) AS y ON
				y.session_id = s.session_id
				AND y.request_id = s.request_id
			OPTION (HASH GROUP);

			--Disable unnecessary autostats on the table
			CREATE STATISTICS s_database_name ON #locks (database_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_object_id ON #locks (object_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_hobt_id ON #locks (hobt_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_allocation_unit_id ON #locks (allocation_unit_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_index_id ON #locks (index_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_schema_id ON #locks (schema_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_principal_id ON #locks (principal_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_request_id ON #locks (request_id)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_start_time ON #locks (start_time)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_resource_type ON #locks (resource_type)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_object_name ON #locks (object_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_schema_name ON #locks (schema_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_page_type ON #locks (page_type)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_request_mode ON #locks (request_mode)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_request_status ON #locks (request_status)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_resource_description ON #locks (resource_description)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_index_name ON #locks (index_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_principal_name ON #locks (principal_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
		END;
		
		DECLARE 
			@sql VARCHAR(MAX), 
			@sql_n NVARCHAR(MAX);

		SET @sql = 
			CONVERT(VARCHAR(MAX), '') +
			'DECLARE @blocker BIT; ' +
			'SET @blocker = 0; ' +
			'DECLARE @i INT; ' +
			'SET @i = 2147483647; ' +
			'' +
			'DECLARE @sessions TABLE ' +
			'( ' +
				'session_id SMALLINT NOT NULL, ' +
				'request_id INT NOT NULL, ' +
				'login_time DATETIME, ' +
				'last_request_end_time DATETIME, ' +
				'status VARCHAR(30), ' +
				'statement_start_offset INT, ' +
				'statement_end_offset INT, ' +
				'sql_handle BINARY(20), ' +
				'host_name NVARCHAR(128), ' +
				'login_name NVARCHAR(128), ' +
				'program_name NVARCHAR(128), ' +
				'database_id SMALLINT, ' +
				'memory_usage INT, ' +
				'open_tran_count SMALLINT, ' +
				CASE
					WHEN 
					(
						@get_task_info <> 0 
						OR @find_block_leaders = 1 
					) THEN
						'wait_type NVARCHAR(32), ' +
						'wait_resource NVARCHAR(256), ' +
						'wait_time BIGINT, '
					ELSE ''
				END +
				'blocked SMALLINT, ' +
				'is_user_process BIT, ' +
				'cmd VARCHAR(32), ' +
				'PRIMARY KEY CLUSTERED (session_id, request_id) WITH (IGNORE_DUP_KEY = ON) ' +
			'); ' +
			'' +
			'DECLARE @blockers TABLE ' +
			'( ' +
				'session_id INT NOT NULL PRIMARY KEY ' +
			'); ' +
			'' +
			'BLOCKERS:; ' +
			'' +
			'INSERT @sessions ' +
			'( ' +
				'session_id, ' +
				'request_id, ' +
				'login_time, ' +
				'last_request_end_time, ' +
				'status, ' +
				'statement_start_offset, ' +
				'statement_end_offset, ' +
				'sql_handle, ' +
				'host_name, ' +
				'login_name, ' +
				'program_name, ' +
				'database_id, ' +
				'memory_usage, ' +
				'open_tran_count, ' +
				CASE
					WHEN 
					(
						@get_task_info <> 0
						OR @find_block_leaders = 1 
					) THEN
						'wait_type, ' +
						'wait_resource, ' +
						'wait_time, '
					ELSE
						''
				END +
				'blocked, ' +
				'is_user_process, ' +
				'cmd ' +
			') ' +
			'SELECT TOP(@i) ' +
				'spy.session_id, ' +
				'spy.request_id, ' +
				'spy.login_time, ' +
				'spy.last_request_end_time, ' +
				'spy.status, ' +
				'spy.statement_start_offset, ' +
				'spy.statement_end_offset, ' +
				'spy.sql_handle, ' +
				'spy.host_name, ' +
				'spy.login_name, ' +
				'spy.program_name, ' +
				'spy.database_id, ' +
				'spy.memory_usage, ' +
				'spy.open_tran_count, ' +
				CASE
					WHEN 
					(
						@get_task_info <> 0  
						OR @find_block_leaders = 1 
					) THEN
						'spy.wait_type, ' +
						'CASE ' +
							'WHEN ' +
								'spy.wait_type LIKE N''PAGE%LATCH_%'' ' +
								'OR spy.wait_type = N''CXPACKET'' ' +
								'OR spy.wait_type LIKE N''LATCH[_]%'' ' +
								'OR spy.wait_type = N''OLEDB'' THEN ' +
									'spy.wait_resource ' +
							'ELSE ' +
								'NULL ' +
						'END AS wait_resource, ' +
						'spy.wait_time, '
					ELSE ''
				END +
				'spy.blocked, ' +
				'spy.is_user_process, ' +
				'spy.cmd ' +
			'FROM ' +
			'( ' +
				'SELECT TOP(@i) ' +
					'spx.*, ' +
					CASE
						WHEN 
						(
							@get_task_info <> 0 
							OR @find_block_leaders = 1 
						) THEN
							'ROW_NUMBER() OVER ' +
							'( ' +
								'PARTITION BY ' +
									'spx.session_id, ' +
									'spx.request_id ' +
								'ORDER BY ' +
									'CASE ' +
										'WHEN spx.wait_type LIKE N''LCK[_]%'' THEN 1 ' +
										'ELSE 99 ' +
									'END, ' +
									'spx.wait_time DESC, ' +
									'spx.blocked DESC ' +
							') AS r '
						ELSE '1 AS r '
					END +
				'FROM ' +
				'( ' +
					'SELECT TOP(@i) ' +
						'sp0.session_id, ' +
						'sp0.request_id, ' +
						'sp0.login_time, ' +
						'sp0.last_request_end_time, ' +
						'LOWER(sp0.status) AS status, ' +
						'CASE ' +
							'WHEN sp0.cmd = ''CREATE INDEX'' THEN 0 ' +
							'ELSE sp0.stmt_start ' +
						'END AS statement_start_offset, ' +
						'CASE ' +
							'WHEN sp0.cmd = N''CREATE INDEX'' THEN -1 ' +
							'ELSE COALESCE(NULLIF(sp0.stmt_end, 0), -1) ' +
						'END AS statement_end_offset, ' +
						'sp0.sql_handle, ' +
						'sp0.host_name, ' +
						'sp0.login_name, ' +
						'sp0.program_name, ' +
						'sp0.database_id, ' +
						'sp0.memory_usage, ' +
						'sp0.open_tran_count, ' +
						CASE
							WHEN 
							(
								@get_task_info <> 0 
								OR @find_block_leaders = 1 
							) THEN
								'CASE ' +
									'WHEN sp0.wait_time > 0 AND sp0.wait_type <> N''CXPACKET'' THEN sp0.wait_type ' +
									'ELSE NULL ' +
								'END AS wait_type, ' +
								'CASE ' +
									'WHEN sp0.wait_time > 0 AND sp0.wait_type <> N''CXPACKET'' THEN sp0.wait_resource ' +
									'ELSE NULL ' +
								'END AS wait_resource, ' +
								'CASE ' +
									'WHEN sp0.wait_type <> N''CXPACKET'' THEN sp0.wait_time ' +
									'ELSE 0 ' +
								'END AS wait_time, '
							ELSE ''
						END +
						'sp0.blocked, ' +
						'sp0.is_user_process, ' +
						'sp0.cmd ' +
					'FROM ' +
					'( ' +
						'SELECT TOP(@i) ' +
							'sp1.session_id, ' +
							'sp1.request_id, ' +
							'sp1.login_time, ' +
							'sp1.last_request_end_time, ' +
							'sp1.status, ' +
							'sp1.cmd, ' +
							'sp1.stmt_start, ' +
							'sp1.stmt_end, ' +
							'MAX(NULLIF(sp1.sql_handle, 0x00)) OVER (PARTITION BY sp1.session_id, sp1.request_id) AS sql_handle, ' +
							'sp1.host_name, ' +
							'MAX(sp1.login_name) OVER (PARTITION BY sp1.session_id, sp1.request_id) AS login_name, ' +
							'sp1.program_name, ' +
							'sp1.database_id, ' +
							'MAX(sp1.memory_usage)  OVER (PARTITION BY sp1.session_id, sp1.request_id) AS memory_usage, ' +
							'MAX(sp1.open_tran_count)  OVER (PARTITION BY sp1.session_id, sp1.request_id) AS open_tran_count, ' +
							'sp1.wait_type, ' +
							'sp1.wait_resource, ' +
							'sp1.wait_time, ' +
							'sp1.blocked, ' +
							'sp1.hostprocess, ' +
							'sp1.is_user_process ' +
						'FROM ' +
						'( ' +
							'SELECT TOP(@i) ' +
								'sp2.spid AS session_id, ' +
								'CASE sp2.status ' +
									'WHEN ''sleeping'' THEN CONVERT(INT, 0) ' +
									'ELSE sp2.request_id ' +
								'END AS request_id, ' +
								'MAX(sp2.login_time) AS login_time, ' +
								'MAX(sp2.last_batch) AS last_request_end_time, ' +
								'MAX(CONVERT(VARCHAR(30), RTRIM(sp2.status)) COLLATE Latin1_General_Bin2) AS status, ' +
								'MAX(CONVERT(VARCHAR(32), RTRIM(sp2.cmd)) COLLATE Latin1_General_Bin2) AS cmd, ' +
								'MAX(sp2.stmt_start) AS stmt_start, ' +
								'MAX(sp2.stmt_end) AS stmt_end, ' +
								'MAX(sp2.sql_handle) AS sql_handle, ' +
								'MAX(CONVERT(sysname, RTRIM(sp2.hostname)) COLLATE SQL_Latin1_General_CP1_CI_AS) AS host_name, ' +
								'MAX(CONVERT(sysname, RTRIM(sp2.loginame)) COLLATE SQL_Latin1_General_CP1_CI_AS) AS login_name, ' +
								'MAX ' +
								'( ' +
									'CASE ' +
										'WHEN blk.queue_id IS NOT NULL THEN ' + 
											'N''Service Broker ' +
												'database_id: '' + CONVERT(NVARCHAR, blk.database_id) + ' +
												'N'' queue_id: '' + CONVERT(NVARCHAR, blk.queue_id)' +
										'ELSE ' +
											'CONVERT ' +
											'( ' +
												'sysname, ' +
												'RTRIM(sp2.program_name) ' +
											') ' +
									'END COLLATE SQL_Latin1_General_CP1_CI_AS ' +
								') AS program_name, ' +
								'MAX(sp2.dbid) AS database_id, ' +
								'MAX(sp2.memusage) AS memory_usage, ' +
								'MAX(sp2.open_tran) AS open_tran_count, ' +
								'RTRIM(sp2.lastwaittype) AS wait_type, ' +
								'RTRIM(sp2.waitresource) AS wait_resource, ' +
								'MAX(sp2.waittime) AS wait_time, ' +
								'COALESCE(NULLIF(sp2.blocked, sp2.spid), 0) AS blocked, ' +
								'MAX ' +
								'( ' +
									'CASE ' +
										'WHEN blk.session_id = sp2.spid THEN ' +
											'''blocker'' ' +
										'ELSE ' +
											'RTRIM(sp2.hostprocess) ' +
									'END ' +
								') AS hostprocess, ' +
								'CONVERT ' +
								'( ' +
									'BIT, ' +
									'MAX ' +
									'( ' +
										'CASE ' +
											'WHEN sp2.hostprocess > '''' THEN ' +
												'1 ' +
											'ELSE ' +
												'0 ' +
										'END ' +
									') ' +
								') AS is_user_process ' +
							'FROM ' +
							'( ' +
								'SELECT TOP(@i) ' +
									'session_id, ' +
									'CONVERT(INT, NULL) AS queue_id, ' +
									'CONVERT(INT, NULL) AS database_id ' +
								'FROM @blockers ' +
								'' +
								'UNION ALL ' +
								'' +
								'SELECT TOP(@i) ' +
									'CONVERT(SMALLINT, 0), ' +
									'CONVERT(INT, NULL) AS queue_id, ' +
									'CONVERT(INT, NULL) AS database_id ' +
								'WHERE ' +
									'@blocker = 0 ' +
								'' +
								'UNION ALL ' +
								'' +
								'SELECT TOP(@i) ' +
									'CONVERT(SMALLINT, spid), ' +
									'queue_id, ' +
									'database_id ' +
								'FROM sys.dm_broker_activated_tasks ' +
								'WHERE ' +
									'@blocker = 0 ' +
							') AS blk ' +
							'INNER JOIN sys.sysprocesses AS sp2 ON ' +
								'sp2.spid = blk.session_id ' +
								'OR ' +
								'( ' +
									'blk.session_id = 0 ' +
									'AND @blocker = 0 ' +
								') ' +
							CASE 
								WHEN 
								(
									@get_task_info = 0 
									AND @find_block_leaders = 0
								) THEN
									'WHERE ' +
										'sp2.ecid = 0 ' 
								ELSE ''
							END +
							'GROUP BY ' +
								'sp2.spid, ' +
								'CASE sp2.status ' +
									'WHEN ''sleeping'' THEN CONVERT(INT, 0) ' +
									'ELSE sp2.request_id ' +
								'END, ' +
								'RTRIM(sp2.lastwaittype), ' +
								'RTRIM(sp2.waitresource), ' +
								'COALESCE(NULLIF(sp2.blocked, sp2.spid), 0) ' +
						') AS sp1 ' +
					') AS sp0 ' +
					'WHERE ' +
						'@blocker = 1 ' +
						'OR ' +
						'(1=1 ' +
							--inclusive filter
							CASE
								WHEN @filter <> '' THEN
									CASE @filter_type
										WHEN 'session' THEN
											CASE
												WHEN CONVERT(SMALLINT, @filter) <> 0 THEN
													'AND sp0.session_id = CONVERT(SMALLINT, @filter) '
												ELSE ''
											END
										WHEN 'program' THEN
											'AND sp0.program_name LIKE @filter '
										WHEN 'login' THEN
											'AND sp0.login_name LIKE @filter '
										WHEN 'host' THEN
											'AND sp0.host_name LIKE @filter '
										WHEN 'database' THEN
											'AND DB_NAME(sp0.database_id) LIKE @filter '
										ELSE ''
									END
								ELSE ''
							END +
							--exclusive filter
							CASE
								WHEN @not_filter <> '' THEN
									CASE @not_filter_type
										WHEN 'session' THEN
											CASE
												WHEN CONVERT(SMALLINT, @not_filter) <> 0 THEN
													'AND sp0.session_id <> CONVERT(SMALLINT, @not_filter) '
												ELSE ''
											END
										WHEN 'program' THEN
											'AND sp0.program_name NOT LIKE @not_filter '
										WHEN 'login' THEN
											'AND sp0.login_name NOT LIKE @not_filter '
										WHEN 'host' THEN
											'AND sp0.host_name NOT LIKE @not_filter '
										WHEN 'database' THEN
											'AND DB_NAME(sp0.database_id) NOT LIKE @not_filter '
										ELSE ''
									END
								ELSE ''
							END +
							CASE @show_own_spid
								WHEN 1 THEN ''
								ELSE
									'AND sp0.session_id <> @@spid '
							END +
							CASE 
								WHEN @show_system_spids = 0 THEN
									'AND sp0.hostprocess > '''' ' 
								ELSE ''
							END +
							CASE @show_sleeping_spids
								WHEN 0 THEN
									'AND sp0.status <> ''sleeping'' '
								WHEN 1 THEN
									'AND ' +
									'( ' +
										'sp0.status <> ''sleeping'' ' +
										'OR sp0.open_tran_count > 0 ' +
									') '
								ELSE ''
							END +
						') ' +
				') AS spx ' +
			') AS spy ' +
			'WHERE ' +
				'spy.r = 1; ' + 
			CASE @recursion
				WHEN 1 THEN 
					'IF @@ROWCOUNT > 0 ' +
					'BEGIN; ' +
						'INSERT @blockers ' +
						'( ' +
							'session_id ' +
						') ' +
						'SELECT TOP(@i) ' +
							'blocked ' +
						'FROM @sessions ' +
						'WHERE ' +
							'NULLIF(blocked, 0) IS NOT NULL ' +
						'' +
						'EXCEPT ' +
						'' +
						'SELECT TOP(@i) ' +
							'session_id ' +
						'FROM @sessions; ' +
						'' +
						CASE
							WHEN
							(
								@get_task_info > 0
								OR @find_block_leaders = 1
							) THEN
								'IF @@ROWCOUNT > 0 ' +
								'BEGIN; ' +
									'SET @blocker = 1; ' +
									'GOTO BLOCKERS; ' +
								'END; '
							ELSE ''
						END +
					'END; '
				ELSE ''
			END +
			'SELECT TOP(@i) ' +
				'@recursion AS recursion, ' +
				'x.session_id, ' +
				'x.request_id, ' +
				'DENSE_RANK() OVER  ' +
				'( ' +
					'ORDER BY ' +
						'x.session_id ' +
				') AS session_number, ' +
				CASE
					WHEN @output_column_list LIKE '%|[dd hh:mm:ss.mss|]%' ESCAPE '|' THEN 'x.elapsed_time '
					ELSE '0 '
				END + 'AS elapsed_time, ' +
				CASE
					WHEN
						(
							@output_column_list LIKE '%|[dd hh:mm:ss.mss (avg)|]%' ESCAPE '|' OR 
							@output_column_list LIKE '%|[avg_elapsed_time|]%' ESCAPE '|'
						)
						AND @recursion = 1
							THEN 'x.avg_elapsed_time / 1000 '
					ELSE 'NULL '
				END + 'AS avg_elapsed_time, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[physical_io|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[physical_io_delta|]%' ESCAPE '|'
							THEN 'x.physical_io '
					ELSE 'NULL '
				END + 'AS physical_io, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[reads|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[reads_delta|]%' ESCAPE '|'
							THEN 'x.reads '
					ELSE '0 '
				END + 'AS reads, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[physical_reads|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[physical_reads_delta|]%' ESCAPE '|'
							THEN 'x.physical_reads '
					ELSE '0 '
				END + 'AS physical_reads, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[writes|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[writes_delta|]%' ESCAPE '|'
							THEN 'x.writes '
					ELSE '0 '
				END + 'AS writes, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[tempdb_allocations|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[tempdb_allocations_delta|]%' ESCAPE '|'
							THEN 'x.tempdb_allocations '
					ELSE '0 '
				END + 'AS tempdb_allocations, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[tempdb_current|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[tempdb_current_delta|]%' ESCAPE '|'
							THEN 'x.tempdb_current '
					ELSE '0 '
				END + 'AS tempdb_current, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[CPU|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[CPU_delta|]%' ESCAPE '|'
							THEN 'x.CPU '
					ELSE '0 '
				END + 'AS CPU, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[CPU_delta|]%' ESCAPE '|'
						AND @get_task_info = 2
							THEN 'x.thread_CPU_snapshot '
					ELSE '0 '
				END + 'AS thread_CPU_snapshot, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[context_switches|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[context_switches_delta|]%' ESCAPE '|'
							THEN 'x.context_switches '
					ELSE 'NULL '
				END + 'AS context_switches, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[used_memory|]%' ESCAPE '|'
						OR @output_column_list LIKE '%|[used_memory_delta|]%' ESCAPE '|'
							THEN 'x.used_memory '
					ELSE '0 '
				END + 'AS used_memory, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[tasks|]%' ESCAPE '|'
						AND @recursion = 1
							THEN 'x.tasks '
					ELSE 'NULL '
				END + 'AS tasks, ' +
				CASE
					WHEN 
						(
							@output_column_list LIKE '%|[status|]%' ESCAPE '|' 
							OR @output_column_list LIKE '%|[sql_command|]%' ESCAPE '|'
						)
						AND @recursion = 1
							THEN 'x.status '
					ELSE ''''' '
				END + 'AS status, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[wait_info|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 
								CASE @get_task_info
									WHEN 2 THEN 'COALESCE(x.task_wait_info, x.sys_wait_info) '
									ELSE 'x.sys_wait_info '
								END
					ELSE 'NULL '
				END + 'AS wait_info, ' +
				CASE
					WHEN 
						(
							@output_column_list LIKE '%|[tran_start_time|]%' ESCAPE '|' 
							OR @output_column_list LIKE '%|[tran_log_writes|]%' ESCAPE '|' 
						)
						AND @recursion = 1
							THEN 
							'x.transaction_id '
					ELSE 'NULL '
				END + 'AS transaction_id, ' +					
				CASE
					WHEN 
						@output_column_list LIKE '%|[open_tran_count|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'x.open_tran_count '
					ELSE 'NULL '
				END + 'AS open_tran_count, ' + 
				CASE
					WHEN 
						@output_column_list LIKE '%|[sql_text|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'x.sql_handle '
					ELSE 'NULL '
				END + 'AS sql_handle, ' +
				CASE
					WHEN 
						(
							@output_column_list LIKE '%|[sql_text|]%' ESCAPE '|' 
							OR @output_column_list LIKE '%|[query_plan|]%' ESCAPE '|' 
						)
						AND @recursion = 1
							THEN 'x.statement_start_offset '
					ELSE 'NULL '
				END + 'AS statement_start_offset, ' +
				CASE
					WHEN 
						(
							@output_column_list LIKE '%|[sql_text|]%' ESCAPE '|' 
							OR @output_column_list LIKE '%|[query_plan|]%' ESCAPE '|' 
						)
						AND @recursion = 1
							THEN 'x.statement_end_offset '
					ELSE 'NULL '
				END + 'AS statement_end_offset, ' +
				'NULL AS sql_text, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[query_plan|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'x.plan_handle '
					ELSE 'NULL '
				END + 'AS plan_handle, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[blocking_session_id|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'NULLIF(x.blocking_session_id, 0) '
					ELSE 'NULL '
				END + 'AS blocking_session_id, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[percent_complete|]%' ESCAPE '|'
						AND @recursion = 1
							THEN 'x.percent_complete '
					ELSE 'NULL '
				END + 'AS percent_complete, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[host_name|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'x.host_name '
					ELSE ''''' '
				END + 'AS host_name, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[login_name|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'x.login_name '
					ELSE ''''' '
				END + 'AS login_name, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[database_name|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'DB_NAME(x.database_id) '
					ELSE 'NULL '
				END + 'AS database_name, ' +
				CASE
					WHEN 
						@output_column_list LIKE '%|[program_name|]%' ESCAPE '|' 
						AND @recursion = 1
							THEN 'x.program_name '
					ELSE ''''' '
				END + 'AS program_name, ' +
				CASE
					WHEN
						@output_column_list LIKE '%|[additional_info|]%' ESCAPE '|'
						AND @recursion = 1
							THEN
								'( ' +
									'SELECT TOP(@i) ' +
										'text_size, ' +
										'language, ' +
										'date_format, ' +
										'date_first, ' +
										'CASE quoted_identifier ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS quoted_identifier, ' +
										'CASE arithabort ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS arithabort, ' +
										'CASE ansi_null_dflt_on ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS ansi_null_dflt_on, ' +
										'CASE ansi_defaults ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS ansi_defaults, ' +
										'CASE ansi_warnings ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS ansi_warnings, ' +
										'CASE ansi_padding ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS ansi_padding, ' +
										'CASE ansi_nulls ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS ansi_nulls, ' +
										'CASE concat_null_yields_null ' +
											'WHEN 0 THEN ''OFF'' ' +
											'WHEN 1 THEN ''ON'' ' +
										'END AS concat_null_yields_null, ' +
										'CASE transaction_isolation_level ' +
											'WHEN 0 THEN ''Unspecified'' ' +
											'WHEN 1 THEN ''ReadUncomitted'' ' +
											'WHEN 2 THEN ''ReadCommitted'' ' +
											'WHEN 3 THEN ''Repeatable'' ' +
											'WHEN 4 THEN ''Serializable'' ' +
											'WHEN 5 THEN ''Snapshot'' ' +
										'END AS transaction_isolation_level, ' +
										'lock_timeout, ' +
										'deadlock_priority, ' +
										'row_count, ' +
										'command_type, ' +
										CASE
											WHEN @output_column_list LIKE '%|[program_name|]%' ESCAPE '|' THEN
												'( ' +
													'SELECT TOP(1) ' +
														'CONVERT(uniqueidentifier, CONVERT(XML, '''').value(''xs:hexBinary( substring(sql:column("agent_info.job_id_string"), 0) )'', ''binary(16)'')) AS job_id, ' +
														'agent_info.step_id, ' +
														'( ' +
															'SELECT TOP(1) ' +
																'NULL ' +
															'FOR XML ' +
																'PATH(''job_name''), ' +
																'TYPE ' +
														'), ' +
														'( ' +
															'SELECT TOP(1) ' +
																'NULL ' +
															'FOR XML ' +
																'PATH(''step_name''), ' +
																'TYPE ' +
														') ' +
													'FROM ' +
													'( ' +
														'SELECT TOP(1) ' +
															'SUBSTRING(x.program_name, CHARINDEX(''0x'', x.program_name) + 2, 32) AS job_id_string, ' +
															'SUBSTRING(x.program_name, CHARINDEX('': Step '', x.program_name) + 7, CHARINDEX('')'', x.program_name, CHARINDEX('': Step '', x.program_name)) - (CHARINDEX('': Step '', x.program_name) + 7)) AS step_id ' +
														'WHERE '+
															'x.program_name LIKE N''SQLAgent - TSQL JobStep (Job 0x%'' ' +
													') AS agent_info ' +
													'FOR XML ' +
														'PATH(''agent_job_info''), ' +
														'TYPE ' +
												') '
											ELSE ''
										END +
										CASE
											WHEN @get_task_info = 2 THEN
												', CONVERT(XML, x.block_info) AS block_info '
											ELSE
												''
										END +
									'FOR XML ' +
										'PATH(''additional_info''), ' +
										'TYPE ' +
								') '
					ELSE 'NULL '
				END + 'AS additional_info, ' +
				'x.start_time, ' +
				CASE
					WHEN
						@output_column_list LIKE '%|[login_time|]%' ESCAPE '|'
						AND @recursion = 1
							THEN
								'x.login_time '
					ELSE 'NULL '
				END + 'AS login_time, ' +
				'x.last_request_start_time ' +
			'FROM ' +
			'( ' +
				'SELECT TOP(@i) ' +
					'y.*, ' +
					'CASE ' +
						--if there are more than 24 days, return a negative number of seconds rather than
						--positive milliseconds, in order to avoid overflow errors
						'WHEN DATEDIFF(day, y.start_time, GETDATE()) > 24 THEN ' +
							'DATEDIFF(second, GETDATE(), y.start_time) ' +
						'ELSE DATEDIFF(ms, y.start_time, GETDATE()) ' +
					'END AS elapsed_time, ' +
					'COALESCE(tempdb_info.tempdb_allocations, 0) AS tempdb_allocations, ' +
					'COALESCE ' +
					'( ' +
						'CASE ' +
							'WHEN tempdb_info.tempdb_current < 0 THEN 0 ' +
							'ELSE tempdb_info.tempdb_current ' + 
						'END, ' +
						'0 ' +
					') AS tempdb_current, ' +
					CASE
						WHEN 
							(
								@get_task_info <> 0
								OR @find_block_leaders = 1
							) THEN
								'N''('' + CONVERT(NVARCHAR, y.wait_duration_ms) + N''ms)'' + ' +
									'y.wait_type + ' +
										--TODO: What else can be pulled from the resource_description?
										'CASE ' +
											'WHEN y.wait_type LIKE N''PAGE%LATCH_%'' THEN ' +
												'N'':'' + ' +
												--database name
												'COALESCE(DB_NAME(CONVERT(INT, LEFT(y.resource_description, CHARINDEX(N'':'', y.resource_description) - 1))), N''(null)'') + ' +
												'N'':'' + ' +
												--file id
												'SUBSTRING(y.resource_description, CHARINDEX(N'':'', y.resource_description) + 1, LEN(y.resource_description) - CHARINDEX(N'':'', REVERSE(y.resource_description)) - CHARINDEX(N'':'', y.resource_description)) + ' +
												--page # for special pages
												'N''('' + ' +
													'CASE ' +
														'WHEN ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) = 1 OR ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) % 8088 = 0 THEN N''PFS'' ' +
														'WHEN ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) = 2 OR ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) % 511232 = 0 THEN N''GAM'' ' +
														'WHEN ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) = 3 OR ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) % 511233 = 0 THEN N''SGAM'' ' +
														'WHEN ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) = 6 OR ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) % 511238 = 0 THEN N''DCM'' ' +
														'WHEN ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) = 7 OR ' +
															'CONVERT(INT, RIGHT(y.resource_description, CHARINDEX(N'':'', REVERSE(y.resource_description)) - 1)) % 511239 = 0 THEN N''BCM'' ' +
														'ELSE N''*'' ' +
													'END + ' +
												'N'')'' ' +
											'WHEN y.wait_type = N''CXPACKET'' THEN ' +
												'N'':'' + SUBSTRING(y.resource_description, CHARINDEX(N''nodeId'', y.resource_description) + 7, 4)' +
											'WHEN y.wait_type LIKE N''LATCH[_]%'' THEN ' +
												'N'' ['' + LEFT(y.resource_description, COALESCE(NULLIF(CHARINDEX(N'' '', y.resource_description), 0), LEN(y.resource_description) + 1) - 1) + N'']'' ' +
											'WHEN ' +
												'y.wait_type = N''OLEDB'' ' +
												'AND y.resource_description LIKE N''%(SPID=%)'' THEN ' +
													'N''['' + LEFT(y.resource_description, CHARINDEX(N''(SPID='', y.resource_description) - 2) + ' +
														'N'':'' + SUBSTRING(y.resource_description, CHARINDEX(N''(SPID='', y.resource_description) + 6, CHARINDEX(N'')'', y.resource_description, (CHARINDEX(N''(SPID='', y.resource_description) + 6)) - (CHARINDEX(N''(SPID='', y.resource_description) + 6)) + '']'' ' +
											'ELSE N'''' ' +
										'END COLLATE Latin1_General_Bin2 AS sys_wait_info, '
						ELSE
							''
						END +
						CASE
							WHEN @get_task_info = 2 THEN
								'tasks.physical_io, ' +
								'tasks.context_switches, ' + 
								'tasks.tasks, ' +
								'tasks.block_info, ' +
								'tasks.wait_info AS task_wait_info, ' +
								'tasks.thread_CPU_snapshot, '
						ELSE
							'' 
					END +
					CASE 
						WHEN NOT (@get_avg_time = 1 AND @recursion = 1) THEN 'CONVERT(INT, NULL) '
						ELSE 'qs.total_elapsed_time / qs.execution_count '
					END + 'AS avg_elapsed_time ' +
				'FROM ' +
				'( ' +
					'SELECT TOP(@i) ' +
						'sp.session_id, ' +
						'sp.request_id, ' +
						'COALESCE(r.logical_reads, s.logical_reads) AS reads, ' +
						'COALESCE(r.reads, s.reads) AS physical_reads, ' +
						'COALESCE(r.writes, s.writes) AS writes, ' +
						'COALESCE(r.CPU_time, s.CPU_time) AS CPU, ' +
						'sp.memory_usage + COALESCE(r.granted_query_memory, 0) AS used_memory, ' +
						'LOWER(sp.status) AS status, ' +
						'COALESCE(r.sql_handle, sp.sql_handle) AS sql_handle, ' +
						'COALESCE(r.statement_start_offset, sp.statement_start_offset) AS statement_start_offset, ' +
						'COALESCE(r.statement_end_offset, sp.statement_end_offset) AS statement_end_offset, ' +
						CASE
							WHEN 
							(
								@get_task_info <> 0
								OR @find_block_leaders = 1 
							) THEN
								'sp.wait_type COLLATE Latin1_General_Bin2 AS wait_type, ' +
								'sp.wait_resource COLLATE Latin1_General_Bin2 AS resource_description, ' +
								'sp.wait_time AS wait_duration_ms, '
							ELSE ''
						END +
						'NULLIF(sp.blocked, 0) AS blocking_session_id, ' +
						'r.plan_handle, ' +
						'NULLIF(r.percent_complete, 0) AS percent_complete, ' +
						'sp.host_name, ' +
						'sp.login_name, ' +
						'sp.program_name, ' +
						'COALESCE(r.text_size, s.text_size) AS text_size, ' +
						'COALESCE(r.language, s.language) AS language, ' +
						'COALESCE(r.date_format, s.date_format) AS date_format, ' +
						'COALESCE(r.date_first, s.date_first) AS date_first, ' +
						'COALESCE(r.quoted_identifier, s.quoted_identifier) AS quoted_identifier, ' +
						'COALESCE(r.arithabort, s.arithabort) AS arithabort, ' +
						'COALESCE(r.ansi_null_dflt_on, s.ansi_null_dflt_on) AS ansi_null_dflt_on, ' +
						'COALESCE(r.ansi_defaults, s.ansi_defaults) AS ansi_defaults, ' +
						'COALESCE(r.ansi_warnings, s.ansi_warnings) AS ansi_warnings, ' +
						'COALESCE(r.ansi_padding, s.ansi_padding) AS ansi_padding, ' +
						'COALESCE(r.ansi_nulls, s.ansi_nulls) AS ansi_nulls, ' +
						'COALESCE(r.concat_null_yields_null, s.concat_null_yields_null) AS concat_null_yields_null, ' +
						'COALESCE(r.transaction_isolation_level, s.transaction_isolation_level) AS transaction_isolation_level, ' +
						'COALESCE(r.lock_timeout, s.lock_timeout) AS lock_timeout, ' +
						'COALESCE(r.deadlock_priority, s.deadlock_priority) AS deadlock_priority, ' +
						'COALESCE(r.row_count, s.row_count) AS row_count, ' +
						'COALESCE(r.command, sp.cmd) AS command_type, ' +
						'COALESCE ' +
						'( ' +
							'CASE ' +
								'WHEN ' +
								'( ' +
									's.is_user_process = 0 ' +
									'AND r.total_elapsed_time >= 0 ' +
								') THEN ' +
									'DATEADD ' +
									'( ' +
										'ms, ' +
										'1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())), ' +
										'DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE()) ' +
									') ' +
							'END, ' +
							'NULLIF(COALESCE(r.start_time, sp.last_request_end_time), CONVERT(DATETIME, ''19000101'', 112)), ' +
							'( ' +
								'SELECT TOP(1) ' +
									'DATEADD(second, -(ms_ticks / 1000), GETDATE()) ' +
								'FROM sys.dm_os_sys_info ' +
							') ' +
						') AS start_time, ' +
						'sp.login_time, ' +
						'CASE ' +
							'WHEN s.is_user_process = 1 THEN ' +
								's.last_request_start_time ' +
							'ELSE ' +
								'COALESCE ' +
								'( ' +
									'DATEADD ' +
									'( ' +
										'ms, ' +
										'1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())), ' +
										'DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE()) ' +
									'), ' +
									's.last_request_start_time ' +
								') ' +
						'END AS last_request_start_time, ' +
						'r.transaction_id, ' +
						'sp.database_id, ' +
						'sp.open_tran_count ' +
					'FROM @sessions AS sp ' +
					'LEFT OUTER LOOP JOIN sys.dm_exec_sessions AS s ON ' +
						's.session_id = sp.session_id ' +
						'AND s.login_time = sp.login_time ' +
					'LEFT OUTER LOOP JOIN sys.dm_exec_requests AS r ON ' +
						'sp.status <> ''sleeping'' ' +
						'AND r.session_id = sp.session_id ' +
						'AND r.request_id = sp.request_id ' +
						'AND ' +
						'( ' +
							'( ' +
								's.is_user_process = 0 ' +
								'AND sp.is_user_process = 0 ' +
							') ' +
							'OR ' +
							'( ' +
								'r.start_time = s.last_request_start_time ' +
								'AND s.last_request_end_time = sp.last_request_end_time ' +
							') ' +
						') ' +
				') AS y ' + 
				CASE 
					WHEN @get_task_info = 2 THEN
						CONVERT(VARCHAR(MAX), '') +
						'LEFT OUTER HASH JOIN ' +
						'( ' +
							'SELECT TOP(@i) ' +
								'task_nodes.task_node.value(''(session_id/text())[1]'', ''SMALLINT'') AS session_id, ' +
								'task_nodes.task_node.value(''(request_id/text())[1]'', ''INT'') AS request_id, ' +
								'task_nodes.task_node.value(''(physical_io/text())[1]'', ''BIGINT'') AS physical_io, ' +
								'task_nodes.task_node.value(''(context_switches/text())[1]'', ''BIGINT'') AS context_switches, ' +
								'task_nodes.task_node.value(''(tasks/text())[1]'', ''INT'') AS tasks, ' +
								'task_nodes.task_node.value(''(block_info/text())[1]'', ''NVARCHAR(4000)'') AS block_info, ' +
								'task_nodes.task_node.value(''(waits/text())[1]'', ''NVARCHAR(4000)'') AS wait_info, ' +
								'task_nodes.task_node.value(''(thread_CPU_snapshot/text())[1]'', ''BIGINT'') AS thread_CPU_snapshot ' +
							'FROM ' +
							'( ' +
								'SELECT TOP(@i) ' +
									'CONVERT ' +
									'( ' +
										'XML, ' +
										'REPLACE ' +
										'( ' +
											'CONVERT(NVARCHAR(MAX), tasks_raw.task_xml_raw) COLLATE Latin1_General_Bin2, ' +
											'N''</waits></tasks><tasks><waits>'', ' +
											'N'', '' ' +
										') ' +
									') AS task_xml ' +
								'FROM ' +
								'( ' +
									'SELECT TOP(@i) ' +
										'CASE waits.r ' +
											'WHEN 1 THEN waits.session_id ' +
											'ELSE NULL ' +
										'END AS [session_id], ' +
										'CASE waits.r ' +
											'WHEN 1 THEN waits.request_id ' +
											'ELSE NULL ' +
										'END AS [request_id], ' +											
										'CASE waits.r ' +
											'WHEN 1 THEN waits.physical_io ' +
											'ELSE NULL ' +
										'END AS [physical_io], ' +
										'CASE waits.r ' +
											'WHEN 1 THEN waits.context_switches ' +
											'ELSE NULL ' +
										'END AS [context_switches], ' +
										'CASE waits.r ' +
											'WHEN 1 THEN waits.thread_CPU_snapshot ' +
											'ELSE NULL ' +
										'END AS [thread_CPU_snapshot], ' +
										'CASE waits.r ' +
											'WHEN 1 THEN waits.tasks ' +
											'ELSE NULL ' +
										'END AS [tasks], ' +
										'CASE waits.r ' +
											'WHEN 1 THEN waits.block_info ' +
											'ELSE NULL ' +
										'END AS [block_info], ' +
										'REPLACE ' +
										'( ' +
											'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
											'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
											'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
												'CONVERT ' +
												'( ' +
													'NVARCHAR(MAX), ' +
													'N''('' + ' +
														'CONVERT(NVARCHAR, num_waits) + N''x: '' + ' +
														'CASE num_waits ' +
															'WHEN 1 THEN CONVERT(NVARCHAR, min_wait_time) + N''ms'' ' +
															'WHEN 2 THEN ' +
																'CASE ' +
																	'WHEN min_wait_time <> max_wait_time THEN CONVERT(NVARCHAR, min_wait_time) + N''/'' + CONVERT(NVARCHAR, max_wait_time) + N''ms'' ' +
																	'ELSE CONVERT(NVARCHAR, max_wait_time) + N''ms'' ' +
																'END ' +
															'ELSE ' +
																'CASE ' +
																	'WHEN min_wait_time <> max_wait_time THEN CONVERT(NVARCHAR, min_wait_time) + N''/'' + CONVERT(NVARCHAR, avg_wait_time) + N''/'' + CONVERT(NVARCHAR, max_wait_time) + N''ms'' ' +
																	'ELSE CONVERT(NVARCHAR, max_wait_time) + N''ms'' ' +
																'END ' +
														'END + ' +
													'N'')'' + wait_type COLLATE Latin1_General_Bin2 ' +
												'), ' +
												'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
												'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
												'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
											'NCHAR(0), ' +
											'N'''' ' +
										') AS [waits] ' +
									'FROM ' +
									'( ' +
										'SELECT TOP(@i) ' +
											'w1.*, ' +
											'ROW_NUMBER() OVER ' +
											'( ' +
												'PARTITION BY ' +
													'w1.session_id, ' +
													'w1.request_id ' +
												'ORDER BY ' +
													'w1.block_info DESC, ' +
													'w1.num_waits DESC, ' +
													'w1.wait_type ' +
											') AS r ' +
										'FROM ' +
										'( ' +
											'SELECT TOP(@i) ' +
												'task_info.session_id, ' +
												'task_info.request_id, ' +
												'task_info.physical_io, ' +
												'task_info.context_switches, ' +
												'task_info.thread_CPU_snapshot, ' +
												'task_info.num_tasks AS tasks, ' +
												'CASE ' +
													'WHEN task_info.runnable_time IS NOT NULL THEN ' +
														'''RUNNABLE'' ' +
													'ELSE ' +
														'wt2.wait_type ' +
												'END AS wait_type, ' +
												'NULLIF(COUNT(COALESCE(task_info.runnable_time, wt2.waiting_task_address)), 0) AS num_waits, ' +
												'MIN(COALESCE(task_info.runnable_time, wt2.wait_duration_ms)) AS min_wait_time, ' +
												'AVG(COALESCE(task_info.runnable_time, wt2.wait_duration_ms)) AS avg_wait_time, ' +
												'MAX(COALESCE(task_info.runnable_time, wt2.wait_duration_ms)) AS max_wait_time, ' +
												'MAX(wt2.block_info) AS block_info ' +
											'FROM ' +
											'( ' +
												'SELECT TOP(@i) ' +
													't.session_id, ' +
													't.request_id, ' +
													'SUM(CONVERT(BIGINT, t.pending_io_count)) OVER (PARTITION BY t.session_id, t.request_id) AS physical_io, ' +
													'SUM(CONVERT(BIGINT, t.context_switches_count)) OVER (PARTITION BY t.session_id, t.request_id) AS context_switches, ' +
													CASE
														WHEN @output_column_list LIKE '%|[CPU_delta|]%' ESCAPE '|'
															THEN
																'SUM(tr.usermode_time + tr.kernel_time) OVER (PARTITION BY t.session_id, t.request_id) '
														ELSE
															'CONVERT(BIGINT, NULL) '
													END + ' AS thread_CPU_snapshot, ' +
													'COUNT(*) OVER (PARTITION BY t.session_id, t.request_id) AS num_tasks, ' +
													't.task_address, ' +
													't.task_state, ' +
													'CASE ' +
														'WHEN ' +
															't.task_state = ''RUNNABLE'' ' +
															'AND w.runnable_time > 0 THEN ' +
																'w.runnable_time ' +
														'ELSE ' +
															'NULL ' +
													'END AS runnable_time ' +
												'FROM sys.dm_os_tasks AS t ' +
												'CROSS APPLY ' +
												'( ' +
													'SELECT TOP(1) ' +
														'sp2.session_id ' +
													'FROM @sessions AS sp2 ' +
													'WHERE ' +
														'sp2.session_id = t.session_id ' +
														'AND sp2.request_id = t.request_id ' +
														'AND sp2.status <> ''sleeping'' ' +
												') AS sp20 ' +
												'LEFT OUTER HASH JOIN ' +
												'( ' +
													'SELECT TOP(@i) ' +
														'( ' +
															'SELECT TOP(@i) ' +
																'ms_ticks ' +
															'FROM sys.dm_os_sys_info ' +
														') - ' +
															'w0.wait_resumed_ms_ticks AS runnable_time, ' +
														'w0.worker_address, ' +
														'w0.thread_address, ' +
														'w0.task_bound_ms_ticks ' +
													'FROM sys.dm_os_workers AS w0 ' +
													'WHERE ' +
														'w0.state = ''RUNNABLE'' ' +
														'OR @first_collection_ms_ticks >= w0.task_bound_ms_ticks ' +
												') AS w ON ' +
													'w.worker_address = t.worker_address ' +
												CASE
													WHEN @output_column_list LIKE '%|[CPU_delta|]%' ESCAPE '|'
														THEN
															'LEFT OUTER HASH JOIN sys.dm_os_threads AS tr ON ' +
																'tr.thread_address = w.thread_address ' +
																'AND @first_collection_ms_ticks >= w.task_bound_ms_ticks ' 
													ELSE
														''
												END +
											') AS task_info ' +
											'LEFT OUTER HASH JOIN ' +
											'( ' +
												'SELECT TOP(@i) ' +
													'wt1.wait_type, ' +
													'wt1.waiting_task_address, ' +
													'MAX(wt1.wait_duration_ms) AS wait_duration_ms, ' +
													'MAX(wt1.block_info) AS block_info ' +
												'FROM ' +
												'( ' +
													'SELECT DISTINCT TOP(@i) ' +
														'wt.wait_type + ' +
															--TODO: What else can be pulled from the resource_description?
															'CASE ' +
																'WHEN wt.wait_type LIKE N''PAGE%LATCH_%'' THEN ' +
																	''':'' + ' +
																	--database name
																	'COALESCE(DB_NAME(CONVERT(INT, LEFT(wt.resource_description, CHARINDEX(N'':'', wt.resource_description) - 1))), N''(null)'') + ' +
																	'N'':'' + ' +
																	--file id
																	'SUBSTRING(wt.resource_description, CHARINDEX(N'':'', wt.resource_description) + 1, LEN(wt.resource_description) - CHARINDEX(N'':'', REVERSE(wt.resource_description)) - CHARINDEX(N'':'', wt.resource_description)) + ' +
																	--page # for special pages
																	'N''('' + ' +
																		'CASE ' +
																			'WHEN ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) = 1 OR ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) % 8088 = 0 THEN N''PFS'' ' +
																			'WHEN ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) = 2 OR ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) % 511232 = 0 THEN N''GAM'' ' +
																			'WHEN ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) = 3 OR ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) % 511233 = 0 THEN N''SGAM'' ' +
																			'WHEN ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) = 6 OR ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) % 511238 = 0 THEN N''DCM'' ' +
																			'WHEN ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) = 7 OR ' +
																				'CONVERT(INT, RIGHT(wt.resource_description, CHARINDEX(N'':'', REVERSE(wt.resource_description)) - 1)) % 511239 = 0 THEN N''BCM'' ' +
																			'ELSE N''*'' ' +
																		'END + ' +
																	'N'')'' ' +
																'WHEN wt.wait_type = N''CXPACKET'' THEN ' +
																	'N'':'' + SUBSTRING(wt.resource_description, CHARINDEX(N''nodeId'', wt.resource_description) + 7, 4) ' +
																'WHEN wt.wait_type LIKE N''LATCH[_]%'' THEN ' +
																	'N'' ['' + LEFT(wt.resource_description, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description), 0), LEN(wt.resource_description) + 1) - 1) + N'']'' ' +
																'ELSE N'''' ' +
															'END COLLATE Latin1_General_Bin2 AS wait_type, ' +
														'CASE ' +
															'WHEN ' +
															'( ' +
																'wt.blocking_session_id IS NOT NULL ' +
																'AND wt.wait_type LIKE N''LCK[_]%'' ' +
															') THEN ' +
																'( ' +
																	'SELECT TOP(@i) ' +
																		'x.lock_type, ' +
																		'REPLACE ' +
																		'( ' +
																			'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
																			'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
																			'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
																				'DB_NAME ' +
																				'( ' +
																					'CONVERT ' +
																					'( ' +
																						'INT, ' +
																						'SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''dbid='', wt.resource_description), 0) + 5, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description, CHARINDEX(N''dbid='', wt.resource_description) + 5), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''dbid='', wt.resource_description) - 5) ' +
																					') ' +
																				'), ' +
																				'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
																				'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
																				'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
																			'NCHAR(0), ' +
																			'N'''' ' +
																		') AS database_name, ' +
																		'CASE x.lock_type ' +
																			'WHEN N''objectlock'' THEN SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''objid='', wt.resource_description), 0) + 6, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description, CHARINDEX(N''objid='', wt.resource_description) + 6), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''objid='', wt.resource_description) - 6) ' +
																			'ELSE NULL ' +
																		'END AS object_id, ' +
																		'CASE x.lock_type ' +
																			'WHEN N''filelock'' THEN ' +
																				'SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''fileid='', wt.resource_description), 0) + 7, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description, CHARINDEX(N''fileid='', wt.resource_description) + 7), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''fileid='', wt.resource_description) - 7) ' +
																			'ELSE NULL ' +
																		'END AS file_id, ' +
																		'CASE ' +
																			'WHEN x.lock_type in (N''pagelock'', N''extentlock'', N''ridlock'') THEN ' +
																				'SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''associatedObjectId='', wt.resource_description), 0) + 19, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description, CHARINDEX(N''associatedObjectId='', wt.resource_description) + 19), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''associatedObjectId='', wt.resource_description) - 19) ' +
																			'WHEN x.lock_type in (N''keylock'', N''hobtlock'', N''allocunitlock'') THEN ' +
																				'SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''hobtid='', wt.resource_description), 0) + 7, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description, CHARINDEX(N''hobtid='', wt.resource_description) + 7), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''hobtid='', wt.resource_description) - 7) ' +
																			'ELSE NULL ' +
																		'END AS hobt_id, ' +
																		'CASE x.lock_type ' +
																			'WHEN N''applicationlock'' THEN ' +
																				'SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''hash='', wt.resource_description), 0) + 5, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description, CHARINDEX(N''hash='', wt.resource_description) + 5), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''hash='', wt.resource_description) - 5) ' +
																			'ELSE NULL ' +
																		'END AS applock_hash, ' +
																		'CASE x.lock_type ' +
																			'WHEN N''metadatalock'' THEN ' +
																				'SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''subresource='', wt.resource_description), 0) + 12, COALESCE(NULLIF(CHARINDEX(N'' '', wt.resource_description, CHARINDEX(N''subresource='', wt.resource_description) + 12), 0), LEN(wt.resource_description) + 1) - CHARINDEX(N''subresource='', wt.resource_description) - 12) ' +
																			'ELSE NULL ' +
																		'END AS metadata_resource, ' +
																		'CASE x.lock_type ' +
																			'WHEN N''metadatalock'' THEN ' +
																				'SUBSTRING(wt.resource_description, NULLIF(CHARINDEX(N''classid='', wt.resource_description), 0) + 8, COALESCE(NULLIF(CHARINDEX(N'' dbid='', wt.resource_description) - CHARINDEX(N''classid='', wt.resource_description), 0), LEN(wt.resource_description) + 1) - 8) ' +
																			'ELSE NULL ' +
																		'END AS metadata_class_id ' +
																	'FROM ' +
																	'( ' +
																		'SELECT TOP(1) ' +
																			'LEFT(wt.resource_description, CHARINDEX(N'' '', wt.resource_description) - 1) COLLATE Latin1_General_Bin2 AS lock_type ' +
																	') AS x ' +
																	'FOR XML ' +
																		'PATH('''') ' +
																') ' +
															'ELSE NULL ' +
														'END AS block_info, ' +
														'wt.wait_duration_ms, ' +
														'wt.waiting_task_address ' +
													'FROM ' +
													'( ' +
														'SELECT TOP(@i) ' +
															'wt0.wait_type COLLATE Latin1_General_Bin2 AS wait_type, ' +
															'wt0.resource_description COLLATE Latin1_General_Bin2 AS resource_description, ' +
															'wt0.wait_duration_ms, ' +
															'wt0.waiting_task_address, ' +
															'CASE ' +
																'WHEN wt0.blocking_session_id = p.blocked THEN wt0.blocking_session_id ' +
																'ELSE NULL ' +
															'END AS blocking_session_id ' +
														'FROM sys.dm_os_waiting_tasks AS wt0 ' +
														'CROSS APPLY ' +
														'( ' +
															'SELECT TOP(1)' +
																's0.blocked ' +
															'FROM @sessions AS s0 ' +
															'WHERE ' +
																's0.session_id = wt0.session_id ' +
																'AND s0.wait_type <> N''OLEDB'' ' +
																'AND wt0.wait_type <> N''OLEDB'' ' +
														') AS p ' +
													') AS wt ' +
												') AS wt1 ' +
												'GROUP BY ' +
													'wt1.wait_type, ' +
													'wt1.waiting_task_address ' +
											') AS wt2 ON ' +
												'wt2.waiting_task_address = task_info.task_address ' +
												'AND wt2.wait_duration_ms > 0 ' +
												'AND task_info.runnable_time IS NULL ' +
											'GROUP BY ' +
												'task_info.session_id, ' +
												'task_info.request_id, ' +
												'task_info.physical_io, ' +
												'task_info.context_switches, ' +
												'task_info.thread_CPU_snapshot, ' +
												'task_info.num_tasks, ' +
												'CASE ' +
													'WHEN task_info.runnable_time IS NOT NULL THEN ' +
														'''RUNNABLE'' ' +
													'ELSE ' +
														'wt2.wait_type ' +
												'END ' +
										') AS w1 ' +
									') AS waits ' +
									'ORDER BY ' +
										'waits.session_id, ' +
										'waits.request_id, ' +
										'waits.r ' +
									'FOR XML ' +
										'PATH(N''tasks''), ' +
										'TYPE ' +
								') AS tasks_raw (task_xml_raw) ' +
							') AS tasks_final ' +
							'CROSS APPLY tasks_final.task_xml.nodes(N''/tasks'') AS task_nodes (task_node) ' +
							'WHERE ' +
								'task_nodes.task_node.exist(N''session_id'') = 1 ' +
						') AS tasks ON ' +
							'tasks.session_id = y.session_id ' +
							'AND tasks.request_id = y.request_id '
					ELSE ''
				END +
				'LEFT OUTER HASH JOIN ' +
				'( ' +
					'SELECT TOP(@i) ' +
						't_info.session_id, ' +
						'COALESCE(t_info.request_id, -1) AS request_id, ' +
						'SUM(t_info.tempdb_allocations) AS tempdb_allocations, ' +
						'SUM(t_info.tempdb_current) AS tempdb_current ' +
					'FROM ' +
					'( ' +
						'SELECT TOP(@i) ' +
							'tsu.session_id, ' +
							'tsu.request_id, ' +
							'tsu.user_objects_alloc_page_count + ' +
								'tsu.internal_objects_alloc_page_count AS tempdb_allocations,' +
							'tsu.user_objects_alloc_page_count + ' +
								'tsu.internal_objects_alloc_page_count - ' +
								'tsu.user_objects_dealloc_page_count - ' +
								'tsu.internal_objects_dealloc_page_count AS tempdb_current ' +
						'FROM sys.dm_db_task_space_usage AS tsu ' +
						'CROSS APPLY ' +
						'( ' +
							'SELECT TOP(1) ' +
								's0.session_id ' +
							'FROM @sessions AS s0 ' +
							'WHERE ' +
								's0.session_id = tsu.session_id ' +
						') AS p ' +
						'' +
						'UNION ALL ' +
						'' +
						'SELECT TOP(@i) ' +
							'ssu.session_id, ' +
							'NULL AS request_id, ' +
							'ssu.user_objects_alloc_page_count + ' +
								'ssu.internal_objects_alloc_page_count AS tempdb_allocations, ' +
							'ssu.user_objects_alloc_page_count + ' +
								'ssu.internal_objects_alloc_page_count - ' +
								'ssu.user_objects_dealloc_page_count - ' +
								'ssu.internal_objects_dealloc_page_count AS tempdb_current ' +
						'FROM sys.dm_db_session_space_usage AS ssu ' +
						'CROSS APPLY ' +
						'( ' +
							'SELECT TOP(1) ' +
								's0.session_id ' +
							'FROM @sessions AS s0 ' +
							'WHERE ' +
								's0.session_id = ssu.session_id ' +
						') AS p ' +
					') AS t_info ' +
					'GROUP BY ' +
						't_info.session_id, ' +
						'COALESCE(t_info.request_id, -1) ' +
				') AS tempdb_info ON ' +
					'tempdb_info.session_id = y.session_id ' +
					'AND tempdb_info.request_id = ' +
						'CASE ' +
							'WHEN y.status = N''sleeping'' THEN ' +
								'-1 ' +
							'ELSE ' +
								'y.request_id ' +
						'END ' +
				CASE 
					WHEN 
						NOT 
						(
							@get_avg_time = 1 
							AND @recursion = 1
						) THEN 
							''
					ELSE
						'LEFT OUTER HASH JOIN ' +
						'( ' +
							'SELECT TOP(@i) ' +
								'* ' +
							'FROM sys.dm_exec_query_stats ' +
						') AS qs ON ' +
							'qs.sql_handle = y.sql_handle ' + 
							'AND qs.plan_handle = y.plan_handle ' + 
							'AND qs.statement_start_offset = y.statement_start_offset ' +
							'AND qs.statement_end_offset = y.statement_end_offset '
					END + 
			') AS x ' +
			'OPTION (KEEPFIXED PLAN, OPTIMIZE FOR (@i = 1)); ';

		SET @sql_n = CONVERT(NVARCHAR(MAX), @sql);

		SET @last_collection_start = GETDATE();
		
		IF @recursion = -1
		BEGIN;
			SELECT
				@first_collection_ms_ticks = ms_ticks
			FROM sys.dm_os_sys_info;
		END;

		INSERT #sessions
		(
			recursion,
			session_id,
			request_id,
			session_number,
			elapsed_time,
			avg_elapsed_time,
			physical_io,
			reads,
			physical_reads,
			writes,
			tempdb_allocations,
			tempdb_current,
			CPU,
			thread_CPU_snapshot,
			context_switches,
			used_memory,
			tasks,
			status,
			wait_info,
			transaction_id,
			open_tran_count,
			sql_handle,
			statement_start_offset,
			statement_end_offset,		
			sql_text,
			plan_handle,
			blocking_session_id,
			percent_complete,
			host_name,
			login_name,
			database_name,
			program_name,
			additional_info,
			start_time,
			login_time,
			last_request_start_time
		)
		EXEC sp_executesql 
			@sql_n,
			N'@recursion SMALLINT, @filter sysname, @not_filter sysname, @first_collection_ms_ticks BIGINT',
			@recursion, @filter, @not_filter, @first_collection_ms_ticks;

		--Collect transaction information?
		IF
			@recursion = 1
			AND
			(
				@output_column_list LIKE '%|[tran_start_time|]%' ESCAPE '|'
				OR @output_column_list LIKE '%|[tran_log_writes|]%' ESCAPE '|' 
			)
		BEGIN;	
			DECLARE @i INT;
			SET @i = 2147483647;

			UPDATE s
			SET
				tran_start_time =
					CONVERT
					(
						DATETIME,
						LEFT
						(
							x.trans_info,
							NULLIF(CHARINDEX(NCHAR(254), x.trans_info) - 1, -1)
						),
						121
					),
				tran_log_writes =
					RIGHT
					(
						x.trans_info,
						LEN(x.trans_info) - CHARINDEX(NCHAR(254), x.trans_info)
					)
			FROM
			(
				SELECT TOP(@i)
					trans_nodes.trans_node.value('(session_id/text())[1]', 'SMALLINT') AS session_id,
					COALESCE(trans_nodes.trans_node.value('(request_id/text())[1]', 'INT'), 0) AS request_id,
					trans_nodes.trans_node.value('(trans_info/text())[1]', 'NVARCHAR(4000)') AS trans_info				
				FROM
				(
					SELECT TOP(@i)
						CONVERT
						(
							XML,
							REPLACE
							(
								CONVERT(NVARCHAR(MAX), trans_raw.trans_xml_raw) COLLATE Latin1_General_Bin2, 
								N'</trans_info></trans><trans><trans_info>', N''
							)
						)
					FROM
					(
						SELECT TOP(@i)
							CASE u_trans.r
								WHEN 1 THEN u_trans.session_id
								ELSE NULL
							END AS [session_id],
							CASE u_trans.r
								WHEN 1 THEN u_trans.request_id
								ELSE NULL
							END AS [request_id],
							CONVERT
							(
								NVARCHAR(MAX),
								CASE
									WHEN u_trans.database_id IS NOT NULL THEN
										CASE u_trans.r
											WHEN 1 THEN COALESCE(CONVERT(NVARCHAR, u_trans.transaction_start_time, 121) + NCHAR(254), N'')
											ELSE N''
										END + 
											REPLACE
											(
												REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
												REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
												REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
													CONVERT(VARCHAR(128), COALESCE(DB_NAME(u_trans.database_id), N'(null)')),
													NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
													NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
													NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
												NCHAR(0),
												N'?'
											) +
											N': ' +
										CONVERT(NVARCHAR, u_trans.log_record_count) + N' (' + CONVERT(NVARCHAR, u_trans.log_kb_used) + N' kB)' +
										N','
									ELSE
										N'N/A,'
								END COLLATE Latin1_General_Bin2
							) AS [trans_info]
						FROM
						(
							SELECT TOP(@i)
								trans.*,
								ROW_NUMBER() OVER
								(
									PARTITION BY
										trans.session_id,
										trans.request_id
									ORDER BY
										trans.transaction_start_time DESC
								) AS r
							FROM
							(
								SELECT TOP(@i)
									session_tran_map.session_id,
									session_tran_map.request_id,
									s_tran.database_id,
									COALESCE(SUM(s_tran.database_transaction_log_record_count), 0) AS log_record_count,
									COALESCE(SUM(s_tran.database_transaction_log_bytes_used), 0) / 1024 AS log_kb_used,
									MIN(s_tran.database_transaction_begin_time) AS transaction_start_time
								FROM
								(
									SELECT TOP(@i)
										*
									FROM sys.dm_tran_active_transactions
									WHERE
										transaction_begin_time <= @last_collection_start
								) AS a_tran
								INNER HASH JOIN
								(
									SELECT TOP(@i)
										*
									FROM sys.dm_tran_database_transactions
									WHERE
										database_id < 32767
								) AS s_tran ON
									s_tran.transaction_id = a_tran.transaction_id
								LEFT OUTER HASH JOIN
								(
									SELECT TOP(@i)
										*
									FROM sys.dm_tran_session_transactions
								) AS tst ON
									s_tran.transaction_id = tst.transaction_id
								CROSS APPLY
								(
									SELECT TOP(1)
										s3.session_id,
										s3.request_id
									FROM
									(
										SELECT TOP(1)
											s1.session_id,
											s1.request_id
										FROM #sessions AS s1
										WHERE
											s1.transaction_id = s_tran.transaction_id
											AND s1.recursion = 1
											
										UNION ALL
									
										SELECT TOP(1)
											s2.session_id,
											s2.request_id
										FROM #sessions AS s2
										WHERE
											s2.session_id = tst.session_id
											AND s2.recursion = 1
									) AS s3
									ORDER BY
										s3.request_id
								) AS session_tran_map
								GROUP BY
									session_tran_map.session_id,
									session_tran_map.request_id,
									s_tran.database_id
							) AS trans
						) AS u_trans
						FOR XML
							PATH('trans'),
							TYPE
					) AS trans_raw (trans_xml_raw)
				) AS trans_final (trans_xml)
				CROSS APPLY trans_final.trans_xml.nodes('/trans') AS trans_nodes (trans_node)
			) AS x
			INNER HASH JOIN #sessions AS s ON
				s.session_id = x.session_id
				AND s.request_id = x.request_id
			OPTION (OPTIMIZE FOR (@i = 1));
		END;

		--Variables for text and plan collection
		DECLARE	
			@session_id SMALLINT,
			@request_id INT,
			@sql_handle VARBINARY(64),
			@plan_handle VARBINARY(64),
			@statement_start_offset INT,
			@statement_end_offset INT,
			@start_time DATETIME,
			@database_name sysname;

		IF 
			@recursion = 1
			AND @output_column_list LIKE '%|[sql_text|]%' ESCAPE '|'
		BEGIN;
			DECLARE sql_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT 
					session_id,
					request_id,
					sql_handle,
					statement_start_offset,
					statement_end_offset
				FROM #sessions
				WHERE
					recursion = 1
					AND sql_handle IS NOT NULL
			OPTION (KEEPFIXED PLAN);

			OPEN sql_cursor;

			FETCH NEXT FROM sql_cursor
			INTO 
				@session_id,
				@request_id,
				@sql_handle,
				@statement_start_offset,
				@statement_end_offset;

			--Wait up to 5 ms for the SQL text, then give up
			SET LOCK_TIMEOUT 5;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					UPDATE s
					SET
						s.sql_text =
						(
							SELECT
								REPLACE
								(
									REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
										N'--' + NCHAR(13) + NCHAR(10) +
										CASE 
											WHEN @get_full_inner_text = 1 THEN est.text
											WHEN LEN(est.text) < (@statement_end_offset / 2) + 1 THEN est.text
											WHEN SUBSTRING(est.text, (@statement_start_offset/2), 2) LIKE N'[a-zA-Z0-9][a-zA-Z0-9]' THEN est.text
											ELSE
												CASE
													WHEN @statement_start_offset > 0 THEN
														SUBSTRING
														(
															est.text,
															((@statement_start_offset/2) + 1),
															(
																CASE
																	WHEN @statement_end_offset = -1 THEN 2147483647
																	ELSE ((@statement_end_offset - @statement_start_offset)/2) + 1
																END
															)
														)
													ELSE RTRIM(LTRIM(est.text))
												END
										END +
										NCHAR(13) + NCHAR(10) + N'--' COLLATE Latin1_General_Bin2,
										NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
										NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
										NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
									NCHAR(0),
									N''
								) AS [processing-instruction(query)]
							FOR XML
								PATH(''),
								TYPE
						),
						s.statement_start_offset = 
							CASE 
								WHEN LEN(est.text) < (@statement_end_offset / 2) + 1 THEN 0
								WHEN SUBSTRING(CONVERT(VARCHAR(MAX), est.text), (@statement_start_offset/2), 2) LIKE '[a-zA-Z0-9][a-zA-Z0-9]' THEN 0
								ELSE @statement_start_offset
							END,
						s.statement_end_offset = 
							CASE 
								WHEN LEN(est.text) < (@statement_end_offset / 2) + 1 THEN -1
								WHEN SUBSTRING(CONVERT(VARCHAR(MAX), est.text), (@statement_start_offset/2), 2) LIKE '[a-zA-Z0-9][a-zA-Z0-9]' THEN -1
								ELSE @statement_end_offset
							END
					FROM 
						#sessions AS s,
						(
							SELECT TOP(1)
								text
							FROM
							(
								SELECT 
									text, 
									0 AS row_num
								FROM sys.dm_exec_sql_text(@sql_handle)
								
								UNION ALL
								
								SELECT 
									NULL,
									1 AS row_num
							) AS est0
							ORDER BY
								row_num
						) AS est
					WHERE 
						s.session_id = @session_id
						AND s.request_id = @request_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END TRY
				BEGIN CATCH;
					UPDATE s
					SET
						s.sql_text = 
							CASE ERROR_NUMBER() 
								WHEN 1222 THEN '<timeout_exceeded />'
								ELSE '<error message="' + ERROR_MESSAGE() + '" />'
							END
					FROM #sessions AS s
					WHERE 
						s.session_id = @session_id
						AND s.request_id = @request_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END CATCH;

				FETCH NEXT FROM sql_cursor
				INTO
					@session_id,
					@request_id,
					@sql_handle,
					@statement_start_offset,
					@statement_end_offset;
			END;

			--Return this to the default
			SET LOCK_TIMEOUT -1;

			CLOSE sql_cursor;
			DEALLOCATE sql_cursor;
		END;

		IF 
			@get_outer_command = 1 
			AND @recursion = 1
			AND @output_column_list LIKE '%|[sql_command|]%' ESCAPE '|'
		BEGIN;
			DECLARE @buffer_results TABLE
			(
				EventType VARCHAR(30),
				Parameters INT,
				EventInfo NVARCHAR(4000),
				start_time DATETIME,
				session_number INT IDENTITY(1,1) NOT NULL PRIMARY KEY
			);

			DECLARE buffer_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT 
					session_id,
					MAX(start_time) AS start_time
				FROM #sessions
				WHERE
					recursion = 1
				GROUP BY
					session_id
				ORDER BY
					session_id
				OPTION (KEEPFIXED PLAN);

			OPEN buffer_cursor;

			FETCH NEXT FROM buffer_cursor
			INTO 
				@session_id,
				@start_time;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					--In SQL Server 2008, DBCC INPUTBUFFER will throw 
					--an exception if the session no longer exists
					INSERT @buffer_results
					(
						EventType,
						Parameters,
						EventInfo
					)
					EXEC sp_executesql
						N'DBCC INPUTBUFFER(@session_id) WITH NO_INFOMSGS;',
						N'@session_id SMALLINT',
						@session_id;

					UPDATE br
					SET
						br.start_time = @start_time
					FROM @buffer_results AS br
					WHERE
						br.session_number = 
						(
							SELECT MAX(br2.session_number)
							FROM @buffer_results br2
						);
				END TRY
				BEGIN CATCH
				END CATCH;

				FETCH NEXT FROM buffer_cursor
				INTO 
					@session_id,
					@start_time;
			END;

			UPDATE s
			SET
				sql_command = 
				(
					SELECT 
						REPLACE
						(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								CONVERT
								(
									NVARCHAR(MAX),
									N'--' + NCHAR(13) + NCHAR(10) + br.EventInfo + NCHAR(13) + NCHAR(10) + N'--' COLLATE Latin1_General_Bin2
								),
								NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
								NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
								NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
							NCHAR(0),
							N''
						) AS [processing-instruction(query)]
					FROM @buffer_results AS br
					WHERE 
						br.session_number = s.session_number
						AND br.start_time = s.start_time
						AND 
						(
							(
								s.start_time = s.last_request_start_time
								AND EXISTS
								(
									SELECT *
									FROM sys.dm_exec_requests r2
									WHERE
										r2.session_id = s.session_id
										AND r2.request_id = s.request_id
										AND r2.start_time = s.start_time
								)
							)
							OR 
							(
								s.request_id = 0
								AND EXISTS
								(
									SELECT *
									FROM sys.dm_exec_sessions s2
									WHERE
										s2.session_id = s.session_id
										AND s2.last_request_start_time = s.last_request_start_time
								)
							)
						)
					FOR XML
						PATH(''),
						TYPE
				)
			FROM #sessions AS s
			WHERE
				recursion = 1
			OPTION (KEEPFIXED PLAN);

			CLOSE buffer_cursor;
			DEALLOCATE buffer_cursor;
		END;

		IF 
			@get_plans >= 1 
			AND @recursion = 1
			AND @output_column_list LIKE '%|[query_plan|]%' ESCAPE '|'
		BEGIN;
			DECLARE plan_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT
					session_id,
					request_id,
					plan_handle,
					statement_start_offset,
					statement_end_offset
				FROM #sessions
				WHERE
					recursion = 1
					AND plan_handle IS NOT NULL
			OPTION (KEEPFIXED PLAN);

			OPEN plan_cursor;

			FETCH NEXT FROM plan_cursor
			INTO 
				@session_id,
				@request_id,
				@plan_handle,
				@statement_start_offset,
				@statement_end_offset;

			--Wait up to 5 ms for a query plan, then give up
			SET LOCK_TIMEOUT 5;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					UPDATE s
					SET
						s.query_plan =
						(
							SELECT
								CONVERT(xml, query_plan)
							FROM sys.dm_exec_text_query_plan
							(
								@plan_handle, 
								CASE @get_plans
									WHEN 1 THEN
										@statement_start_offset
									ELSE
										0
								END, 
								CASE @get_plans
									WHEN 1 THEN
										@statement_end_offset
									ELSE
										-1
								END
							)
						)
					FROM #sessions AS s
					WHERE 
						s.session_id = @session_id
						AND s.request_id = @request_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END TRY
				BEGIN CATCH;
					IF ERROR_NUMBER() = 6335
					BEGIN;
						UPDATE s
						SET
							s.query_plan =
							(
								SELECT
									N'--' + NCHAR(13) + NCHAR(10) + 
									N'-- Could not render showplan due to XML data type limitations. ' + NCHAR(13) + NCHAR(10) + 
									N'-- To see the graphical plan save the XML below as a .SQLPLAN file and re-open in SSMS.' + NCHAR(13) + NCHAR(10) +
									N'--' + NCHAR(13) + NCHAR(10) +
										REPLACE(qp.query_plan, N'<RelOp', NCHAR(13)+NCHAR(10)+N'<RelOp') + 
										NCHAR(13) + NCHAR(10) + N'--' COLLATE Latin1_General_Bin2 AS [processing-instruction(query_plan)]
								FROM sys.dm_exec_text_query_plan
								(
									@plan_handle, 
									CASE @get_plans
										WHEN 1 THEN
											@statement_start_offset
										ELSE
											0
									END, 
									CASE @get_plans
										WHEN 1 THEN
											@statement_end_offset
										ELSE
											-1
									END
								) AS qp
								FOR XML
									PATH(''),
									TYPE
							)
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
							AND s.request_id = @request_id
							AND s.recursion = 1
						OPTION (KEEPFIXED PLAN);
					END;
					ELSE
					BEGIN;
						UPDATE s
						SET
							s.query_plan = 
								CASE ERROR_NUMBER() 
									WHEN 1222 THEN '<timeout_exceeded />'
									ELSE '<error message="' + ERROR_MESSAGE() + '" />'
								END
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
							AND s.request_id = @request_id
							AND s.recursion = 1
						OPTION (KEEPFIXED PLAN);
					END;
				END CATCH;

				FETCH NEXT FROM plan_cursor
				INTO
					@session_id,
					@request_id,
					@plan_handle,
					@statement_start_offset,
					@statement_end_offset;
			END;

			--Return this to the default
			SET LOCK_TIMEOUT -1;

			CLOSE plan_cursor;
			DEALLOCATE plan_cursor;
		END;

		IF 
			@get_locks = 1 
			AND @recursion = 1
			AND @output_column_list LIKE '%|[locks|]%' ESCAPE '|'
		BEGIN;
			DECLARE locks_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT DISTINCT
					database_name
				FROM #locks
				WHERE
					EXISTS
					(
						SELECT *
						FROM #sessions AS s
						WHERE
							s.session_id = #locks.session_id
							AND recursion = 1
					)
					AND database_name <> '(null)'
				OPTION (KEEPFIXED PLAN);

			OPEN locks_cursor;

			FETCH NEXT FROM locks_cursor
			INTO 
				@database_name;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					SET @sql_n = CONVERT(NVARCHAR(MAX), '') +
						'UPDATE l ' +
						'SET ' +
							'object_name = ' +
								'REPLACE ' +
								'( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
										'o.name COLLATE Latin1_General_Bin2, ' +
										'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
										'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
										'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
									'NCHAR(0), ' +
									N''''' ' +
								'), ' +
							'index_name = ' +
								'REPLACE ' +
								'( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
										'i.name COLLATE Latin1_General_Bin2, ' +
										'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
										'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
										'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
									'NCHAR(0), ' +
									N''''' ' +
								'), ' +
							'schema_name = ' +
								'REPLACE ' +
								'( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
										's.name COLLATE Latin1_General_Bin2, ' +
										'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
										'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
										'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
									'NCHAR(0), ' +
									N''''' ' +
								'), ' +
							'principal_name = ' + 
								'REPLACE ' +
								'( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
										'dp.name COLLATE Latin1_General_Bin2, ' +
										'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
										'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
										'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
									'NCHAR(0), ' +
									N''''' ' +
								') ' +
						'FROM #locks AS l ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.allocation_units AS au ON ' +
							'au.allocation_unit_id = l.allocation_unit_id ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.partitions AS p ON ' +
							'p.hobt_id = ' +
								'COALESCE ' +
								'( ' +
									'l.hobt_id, ' +
									'CASE ' +
										'WHEN au.type IN (1, 3) THEN au.container_id ' +
										'ELSE NULL ' +
									'END ' +
								') ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.partitions AS p1 ON ' +
							'l.hobt_id IS NULL ' +
							'AND au.type = 2 ' +
							'AND p1.partition_id = au.container_id ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.objects AS o ON ' +
							'o.object_id = COALESCE(l.object_id, p.object_id, p1.object_id) ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.indexes AS i ON ' +
							'i.object_id = COALESCE(l.object_id, p.object_id, p1.object_id) ' +
							'AND i.index_id = COALESCE(l.index_id, p.index_id, p1.index_id) ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.schemas AS s ON ' +
							's.schema_id = COALESCE(l.schema_id, o.schema_id) ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.database_principals AS dp ON ' +
							'dp.principal_id = l.principal_id ' +
						'WHERE ' +
							'l.database_name = @database_name ' +
						'OPTION (KEEPFIXED PLAN); ';
					
					EXEC sp_executesql
						@sql_n,
						N'@database_name sysname',
						@database_name;
				END TRY
				BEGIN CATCH;
					UPDATE #locks
					SET
						query_error = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									CONVERT
									(
										NVARCHAR(MAX), 
										ERROR_MESSAGE() COLLATE Latin1_General_Bin2
									),
									NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
									NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
									NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
								NCHAR(0),
								N''
							)
					WHERE 
						database_name = @database_name
					OPTION (KEEPFIXED PLAN);
				END CATCH;

				FETCH NEXT FROM locks_cursor
				INTO
					@database_name;
			END;

			CLOSE locks_cursor;
			DEALLOCATE locks_cursor;

			CREATE CLUSTERED INDEX IX_SRD ON #locks (session_id, request_id, database_name);

			UPDATE s
			SET 
				s.locks =
				(
					SELECT 
						REPLACE
						(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
							REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								CONVERT
								(
									NVARCHAR(MAX), 
									l1.database_name COLLATE Latin1_General_Bin2
								),
								NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
								NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
								NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
							NCHAR(0),
							N''
						) AS [Database/@name],
						MIN(l1.query_error) AS [Database/@query_error],
						(
							SELECT 
								l2.request_mode AS [Lock/@request_mode],
								l2.request_status AS [Lock/@request_status],
								COUNT(*) AS [Lock/@request_count]
							FROM #locks AS l2
							WHERE 
								l1.session_id = l2.session_id
								AND l1.request_id = l2.request_id
								AND l2.database_name = l1.database_name
								AND l2.resource_type = 'DATABASE'
							GROUP BY
								l2.request_mode,
								l2.request_status
							FOR XML
								PATH(''),
								TYPE
						) AS [Database/Locks],
						(
							SELECT
								COALESCE(l3.object_name, '(null)') AS [Object/@name],
								l3.schema_name AS [Object/@schema_name],
								(
									SELECT
										l4.resource_type AS [Lock/@resource_type],
										l4.page_type AS [Lock/@page_type],
										l4.index_name AS [Lock/@index_name],
										CASE 
											WHEN l4.object_name IS NULL THEN l4.schema_name
											ELSE NULL
										END AS [Lock/@schema_name],
										l4.principal_name AS [Lock/@principal_name],
										l4.resource_description AS [Lock/@resource_description],
										l4.request_mode AS [Lock/@request_mode],
										l4.request_status AS [Lock/@request_status],
										SUM(l4.request_count) AS [Lock/@request_count]
									FROM #locks AS l4
									WHERE 
										l4.session_id = l3.session_id
										AND l4.request_id = l3.request_id
										AND l3.database_name = l4.database_name
										AND COALESCE(l3.object_name, '(null)') = COALESCE(l4.object_name, '(null)')
										AND COALESCE(l3.schema_name, '') = COALESCE(l4.schema_name, '')
										AND l4.resource_type <> 'DATABASE'
									GROUP BY
										l4.resource_type,
										l4.page_type,
										l4.index_name,
										CASE 
											WHEN l4.object_name IS NULL THEN l4.schema_name
											ELSE NULL
										END,
										l4.principal_name,
										l4.resource_description,
										l4.request_mode,
										l4.request_status
									FOR XML
										PATH(''),
										TYPE
								) AS [Object/Locks]
							FROM #locks AS l3
							WHERE 
								l3.session_id = l1.session_id
								AND l3.request_id = l1.request_id
								AND l3.database_name = l1.database_name
								AND l3.resource_type <> 'DATABASE'
							GROUP BY 
								l3.session_id,
								l3.request_id,
								l3.database_name,
								COALESCE(l3.object_name, '(null)'),
								l3.schema_name
							FOR XML
								PATH(''),
								TYPE
						) AS [Database/Objects]
					FROM #locks AS l1
					WHERE
						l1.session_id = s.session_id
						AND l1.request_id = s.request_id
						AND l1.start_time IN (s.start_time, s.last_request_start_time)
						AND s.recursion = 1
					GROUP BY 
						l1.session_id,
						l1.request_id,
						l1.database_name
					FOR XML
						PATH(''),
						TYPE
				)
			FROM #sessions s
			OPTION (KEEPFIXED PLAN);
		END;

		IF 
			@find_block_leaders = 1
			AND @recursion = 1
			AND @output_column_list LIKE '%|[blocked_session_count|]%' ESCAPE '|'
		BEGIN;
			WITH
			blockers AS
			(
				SELECT
					session_id,
					session_id AS top_level_session_id
				FROM #sessions
				WHERE
					recursion = 1

				UNION ALL

				SELECT
					s.session_id,
					b.top_level_session_id
				FROM blockers AS b
				JOIN #sessions AS s ON
					s.blocking_session_id = b.session_id
					AND s.recursion = 1
			)
			UPDATE s
			SET
				s.blocked_session_count = x.blocked_session_count
			FROM #sessions AS s
			JOIN
			(
				SELECT
					b.top_level_session_id AS session_id,
					COUNT(*) - 1 AS blocked_session_count
				FROM blockers AS b
				GROUP BY
					b.top_level_session_id
			) x ON
				s.session_id = x.session_id
			WHERE
				s.recursion = 1;
		END;

		IF
			@get_task_info = 2
			AND @output_column_list LIKE '%|[additional_info|]%' ESCAPE '|'
			AND @recursion = 1
		BEGIN;
			CREATE TABLE #blocked_requests
			(
				session_id SMALLINT NOT NULL,
				request_id INT NOT NULL,
				database_name sysname NOT NULL,
				object_id INT,
				hobt_id BIGINT,
				schema_id INT,
				schema_name sysname NULL,
				object_name sysname NULL,
				query_error NVARCHAR(2048),
				PRIMARY KEY (database_name, session_id, request_id)
			);

			CREATE STATISTICS s_database_name ON #blocked_requests (database_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_schema_name ON #blocked_requests (schema_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_object_name ON #blocked_requests (object_name)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
			CREATE STATISTICS s_query_error ON #blocked_requests (query_error)
			WITH SAMPLE 0 ROWS, NORECOMPUTE;
		
			INSERT #blocked_requests
			(
				session_id,
				request_id,
				database_name,
				object_id,
				hobt_id,
				schema_id
			)
			SELECT
				session_id,
				request_id,
				database_name,
				object_id,
				hobt_id,
				CONVERT(INT, SUBSTRING(schema_node, CHARINDEX(' = ', schema_node) + 3, LEN(schema_node))) AS schema_id
			FROM
			(
				SELECT
					session_id,
					request_id,
					agent_nodes.agent_node.value('(database_name/text())[1]', 'sysname') AS database_name,
					agent_nodes.agent_node.value('(object_id/text())[1]', 'int') AS object_id,
					agent_nodes.agent_node.value('(hobt_id/text())[1]', 'bigint') AS hobt_id,
					agent_nodes.agent_node.value('(metadata_resource/text()[.="SCHEMA"]/../../metadata_class_id/text())[1]', 'varchar(100)') AS schema_node
				FROM #sessions AS s
				CROSS APPLY s.additional_info.nodes('//block_info') AS agent_nodes (agent_node)
				WHERE
					s.recursion = 1
			) AS t
			WHERE
				t.object_id IS NOT NULL
				OR t.hobt_id IS NOT NULL
				OR t.schema_node IS NOT NULL;
			
			DECLARE blocks_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR
				SELECT DISTINCT
					database_name
				FROM #blocked_requests;
				
			OPEN blocks_cursor;
			
			FETCH NEXT FROM blocks_cursor
			INTO 
				@database_name;
			
			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					SET @sql_n = 
						CONVERT(NVARCHAR(MAX), '') +
						'UPDATE b ' +
						'SET ' +
							'b.schema_name = ' +
								'REPLACE ' +
								'( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
										's.name COLLATE Latin1_General_Bin2, ' +
										'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
										'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
										'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
									'NCHAR(0), ' +
									N''''' ' +
								'), ' +
							'b.object_name = ' +
								'REPLACE ' +
								'( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
									'REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE( ' +
										'o.name COLLATE Latin1_General_Bin2, ' +
										'NCHAR(31),N''?''),NCHAR(30),N''?''),NCHAR(29),N''?''),NCHAR(28),N''?''),NCHAR(27),N''?''),NCHAR(26),N''?''),NCHAR(25),N''?''),NCHAR(24),N''?''),NCHAR(23),N''?''),NCHAR(22),N''?''), ' +
										'NCHAR(21),N''?''),NCHAR(20),N''?''),NCHAR(19),N''?''),NCHAR(18),N''?''),NCHAR(17),N''?''),NCHAR(16),N''?''),NCHAR(15),N''?''),NCHAR(14),N''?''),NCHAR(12),N''?''), ' +
										'NCHAR(11),N''?''),NCHAR(8),N''?''),NCHAR(7),N''?''),NCHAR(6),N''?''),NCHAR(5),N''?''),NCHAR(4),N''?''),NCHAR(3),N''?''),NCHAR(2),N''?''),NCHAR(1),N''?''), ' +
									'NCHAR(0), ' +
									N''''' ' +
								') ' +
						'FROM #blocked_requests AS b ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.partitions AS p ON ' +
							'p.hobt_id = b.hobt_id ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.objects AS o ON ' +
							'o.object_id = COALESCE(p.object_id, b.object_id) ' +
						'LEFT OUTER JOIN ' + QUOTENAME(@database_name) + '.sys.schemas AS s ON ' +
							's.schema_id = COALESCE(o.schema_id, b.schema_id) ' +
						'WHERE ' +
							'b.database_name = @database_name; ';
					
					EXEC sp_executesql
						@sql_n,
						N'@database_name sysname',
						@database_name;
				END TRY
				BEGIN CATCH;
					UPDATE #blocked_requests
					SET
						query_error = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									CONVERT
									(
										NVARCHAR(MAX), 
										ERROR_MESSAGE() COLLATE Latin1_General_Bin2
									),
									NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
									NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
									NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
								NCHAR(0),
								N''
							)
					WHERE
						database_name = @database_name;
				END CATCH;

				FETCH NEXT FROM blocks_cursor
				INTO
					@database_name;
			END;
			
			CLOSE blocks_cursor;
			DEALLOCATE blocks_cursor;
			
			UPDATE s
			SET
				additional_info.modify
				('
					insert <schema_name>{sql:column("b.schema_name")}</schema_name>
					as last
					into (/additional_info/block_info)[1]
				')
			FROM #sessions AS s
			INNER JOIN #blocked_requests AS b ON
				b.session_id = s.session_id
				AND b.request_id = s.request_id
				AND s.recursion = 1
			WHERE
				b.schema_name IS NOT NULL;

			UPDATE s
			SET
				additional_info.modify
				('
					insert <object_name>{sql:column("b.object_name")}</object_name>
					as last
					into (/additional_info/block_info)[1]
				')
			FROM #sessions AS s
			INNER JOIN #blocked_requests AS b ON
				b.session_id = s.session_id
				AND b.request_id = s.request_id
				AND s.recursion = 1
			WHERE
				b.object_name IS NOT NULL;

			UPDATE s
			SET
				additional_info.modify
				('
					insert <query_error>{sql:column("b.query_error")}</query_error>
					as last
					into (/additional_info/block_info)[1]
				')
			FROM #sessions AS s
			INNER JOIN #blocked_requests AS b ON
				b.session_id = s.session_id
				AND b.request_id = s.request_id
				AND s.recursion = 1
			WHERE
				b.query_error IS NOT NULL;
		END;

		IF
			@output_column_list LIKE '%|[program_name|]%' ESCAPE '|'
			AND @output_column_list LIKE '%|[additional_info|]%' ESCAPE '|'
			AND @recursion = 1
		BEGIN;
			DECLARE @job_id UNIQUEIDENTIFIER;
			DECLARE @step_id INT;

			DECLARE agent_cursor
			CURSOR LOCAL FAST_FORWARD
			FOR 
				SELECT
					s.session_id,
					agent_nodes.agent_node.value('(job_id/text())[1]', 'uniqueidentifier') AS job_id,
					agent_nodes.agent_node.value('(step_id/text())[1]', 'int') AS step_id
				FROM #sessions AS s
				CROSS APPLY s.additional_info.nodes('//agent_job_info') AS agent_nodes (agent_node)
				WHERE
					s.recursion = 1
			OPTION (KEEPFIXED PLAN);
			
			OPEN agent_cursor;

			FETCH NEXT FROM agent_cursor
			INTO 
				@session_id,
				@job_id,
				@step_id;

			WHILE @@FETCH_STATUS = 0
			BEGIN;
				BEGIN TRY;
					DECLARE @job_name sysname;
					SET @job_name = NULL;
					DECLARE @step_name sysname;
					SET @step_name = NULL;
					
					SELECT
						@job_name = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									j.name,
									NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
									NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
									NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
								NCHAR(0),
								N'?'
							),
						@step_name = 
							REPLACE
							(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
								REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
									s.step_name,
									NCHAR(31),N'?'),NCHAR(30),N'?'),NCHAR(29),N'?'),NCHAR(28),N'?'),NCHAR(27),N'?'),NCHAR(26),N'?'),NCHAR(25),N'?'),NCHAR(24),N'?'),NCHAR(23),N'?'),NCHAR(22),N'?'),
									NCHAR(21),N'?'),NCHAR(20),N'?'),NCHAR(19),N'?'),NCHAR(18),N'?'),NCHAR(17),N'?'),NCHAR(16),N'?'),NCHAR(15),N'?'),NCHAR(14),N'?'),NCHAR(12),N'?'),
									NCHAR(11),N'?'),NCHAR(8),N'?'),NCHAR(7),N'?'),NCHAR(6),N'?'),NCHAR(5),N'?'),NCHAR(4),N'?'),NCHAR(3),N'?'),NCHAR(2),N'?'),NCHAR(1),N'?'),
								NCHAR(0),
								N'?'
							)
					FROM msdb.dbo.sysjobs AS j
					INNER JOIN msdb..sysjobsteps AS s ON
						j.job_id = s.job_id
					WHERE
						j.job_id = @job_id
						AND s.step_id = @step_id;

					IF @job_name IS NOT NULL
					BEGIN;
						UPDATE s
						SET
							additional_info.modify
							('
								insert text{sql:variable("@job_name")}
								into (/additional_info/agent_job_info/job_name)[1]
							')
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
						OPTION (KEEPFIXED PLAN);
						
						UPDATE s
						SET
							additional_info.modify
							('
								insert text{sql:variable("@step_name")}
								into (/additional_info/agent_job_info/step_name)[1]
							')
						FROM #sessions AS s
						WHERE 
							s.session_id = @session_id
						OPTION (KEEPFIXED PLAN);
					END;
				END TRY
				BEGIN CATCH;
					DECLARE @msdb_error_message NVARCHAR(256);
					SET @msdb_error_message = ERROR_MESSAGE();
				
					UPDATE s
					SET
						additional_info.modify
						('
							insert <msdb_query_error>{sql:variable("@msdb_error_message")}</msdb_query_error>
							as last
							into (/additional_info/agent_job_info)[1]
						')
					FROM #sessions AS s
					WHERE 
						s.session_id = @session_id
						AND s.recursion = 1
					OPTION (KEEPFIXED PLAN);
				END CATCH;

				FETCH NEXT FROM agent_cursor
				INTO 
					@session_id,
					@job_id,
					@step_id;
			END;

			CLOSE agent_cursor;
			DEALLOCATE agent_cursor;
		END; 
		
		IF 
			@delta_interval > 0 
			AND @recursion <> 1
		BEGIN;
			SET @recursion = 1;

			DECLARE @delay_time CHAR(12);
			SET @delay_time = CONVERT(VARCHAR, DATEADD(second, @delta_interval, 0), 114);
			WAITFOR DELAY @delay_time;

			GOTO REDO;
		END;
	END;

	SET @sql = 
		--Outer column list
		CONVERT
		(
			VARCHAR(MAX),
			CASE
				WHEN 
					@destination_table <> '' 
					AND @return_schema = 0 
						THEN 'INSERT ' + @destination_table + ' '
				ELSE ''
			END +
			'SELECT ' +
				@output_column_list + ' ' +
			CASE @return_schema
				WHEN 1 THEN 'INTO #session_schema '
				ELSE ''
			END
		--End outer column list
		) + 
		--Inner column list
		CONVERT
		(
			VARCHAR(MAX),
			'FROM ' +
			'( ' +
				'SELECT ' +
					'session_id, ' +
					--[dd hh:mm:ss.mss]
					CASE @format_output
						WHEN 1 THEN
							'CASE ' +
								'WHEN elapsed_time < 0 THEN ' +
									'RIGHT ' +
									'( ' +
										'REPLICATE(''0'', max_elapsed_length) + CONVERT(VARCHAR, (-1 * elapsed_time) / 86400), ' +
										'max_elapsed_length ' +
									') + ' +
										'RIGHT ' +
										'( ' +
											'CONVERT(VARCHAR, DATEADD(second, (-1 * elapsed_time), 0), 120), ' +
											'9 ' +
										') + ' +
										'''.000'' ' +
								'ELSE ' +
									'RIGHT ' +
									'( ' +
										'REPLICATE(''0'', max_elapsed_length) + CONVERT(VARCHAR, elapsed_time / 86400000), ' +
										'max_elapsed_length ' +
									') + ' +
										'RIGHT ' +
										'( ' +
											'CONVERT(VARCHAR, DATEADD(second, elapsed_time / 1000, 0), 120), ' +
											'9 ' +
										') + ' +
										'''.'' + ' + 
										'RIGHT(''000'' + CONVERT(VARCHAR, elapsed_time % 1000), 3) ' +
							'END AS [dd hh:mm:ss.mss], '
						ELSE
							''
					END +
					--[dd hh:mm:ss.mss (avg)] / avg_elapsed_time
					CASE @format_output
						WHEN 1 THEN 
							'RIGHT ' +
							'( ' +
								'''00'' + CONVERT(VARCHAR, avg_elapsed_time / 86400000), ' +
								'2 ' +
							') + ' +
								'RIGHT ' +
								'( ' +
									'CONVERT(VARCHAR, DATEADD(second, avg_elapsed_time / 1000, 0), 120), ' +
									'9 ' +
								') + ' +
								'''.'' + ' +
								'RIGHT(''000'' + CONVERT(VARCHAR, avg_elapsed_time % 1000), 3) AS [dd hh:mm:ss.mss (avg)], '
						ELSE
							'avg_elapsed_time, '
					END +
					--physical_io
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_io))) OVER() - LEN(CONVERT(VARCHAR, physical_io))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io), 1), 19)) AS '
						ELSE ''
					END + 'physical_io, ' +
					--reads
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, reads))) OVER() - LEN(CONVERT(VARCHAR, reads))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads), 1), 19)) AS '
						ELSE ''
					END + 'reads, ' +
					--physical_reads
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_reads))) OVER() - LEN(CONVERT(VARCHAR, physical_reads))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads), 1), 19)) AS '
						ELSE ''
					END + 'physical_reads, ' +
					--writes
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, writes))) OVER() - LEN(CONVERT(VARCHAR, writes))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes), 1), 19)) AS '
						ELSE ''
					END + 'writes, ' +
					--tempdb_allocations
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_allocations))) OVER() - LEN(CONVERT(VARCHAR, tempdb_allocations))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations), 1), 19)) AS '
						ELSE ''
					END + 'tempdb_allocations, ' +
					--tempdb_current
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_current))) OVER() - LEN(CONVERT(VARCHAR, tempdb_current))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current), 1), 19)) AS '
						ELSE ''
					END + 'tempdb_current, ' +
					--CPU
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, CPU))) OVER() - LEN(CONVERT(VARCHAR, CPU))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU), 1), 19)) AS '
						ELSE ''
					END + 'CPU, ' +
					--context_switches
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, context_switches))) OVER() - LEN(CONVERT(VARCHAR, context_switches))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches), 1), 19)) AS '
						ELSE ''
					END + 'context_switches, ' +
					--used_memory
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, used_memory))) OVER() - LEN(CONVERT(VARCHAR, used_memory))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory), 1), 19)) AS '
						ELSE ''
					END + 'used_memory, ' +
					--physical_io_delta			
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
							'AND physical_io_delta >= 0 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_io_delta))) OVER() - LEN(CONVERT(VARCHAR, physical_io_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io_delta), 1), 19)) ' 
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_io_delta), 1), 19)) '
									ELSE 'physical_io_delta '
								END +
						'ELSE NULL ' +
					'END AS physical_io_delta, ' +
					--reads_delta
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
							'AND reads_delta >= 0 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, reads_delta))) OVER() - LEN(CONVERT(VARCHAR, reads_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads_delta), 1), 19)) '
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, reads_delta), 1), 19)) '
									ELSE 'reads_delta '
								END +
						'ELSE NULL ' +
					'END AS reads_delta, ' +
					--physical_reads_delta
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
							'AND physical_reads_delta >= 0 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, physical_reads_delta))) OVER() - LEN(CONVERT(VARCHAR, physical_reads_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads_delta), 1), 19)) '
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, physical_reads_delta), 1), 19)) '
									ELSE 'physical_reads_delta '
								END + 
						'ELSE NULL ' +
					'END AS physical_reads_delta, ' +
					--writes_delta
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
							'AND writes_delta >= 0 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, writes_delta))) OVER() - LEN(CONVERT(VARCHAR, writes_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes_delta), 1), 19)) '
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, writes_delta), 1), 19)) '
									ELSE 'writes_delta '
								END + 
						'ELSE NULL ' +
					'END AS writes_delta, ' +
					--tempdb_allocations_delta
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
							'AND tempdb_allocations_delta >= 0 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_allocations_delta))) OVER() - LEN(CONVERT(VARCHAR, tempdb_allocations_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations_delta), 1), 19)) '
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_allocations_delta), 1), 19)) '
									ELSE 'tempdb_allocations_delta '
								END + 
						'ELSE NULL ' +
					'END AS tempdb_allocations_delta, ' +
					--tempdb_current_delta
					--this is the only one that can (legitimately) go negative 
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tempdb_current_delta))) OVER() - LEN(CONVERT(VARCHAR, tempdb_current_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current_delta), 1), 19)) '
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tempdb_current_delta), 1), 19)) '
									ELSE 'tempdb_current_delta '
								END + 
						'ELSE NULL ' +
					'END AS tempdb_current_delta, ' +
					--CPU_delta
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
								'THEN ' +
									'CASE ' +
										'WHEN ' +
											'thread_CPU_delta > CPU_delta ' +
											'AND thread_CPU_delta > 0 ' +
												'THEN ' +
													CASE @format_output
														WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, thread_CPU_delta + CPU_delta))) OVER() - LEN(CONVERT(VARCHAR, thread_CPU_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, thread_CPU_delta), 1), 19)) '
														WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, thread_CPU_delta), 1), 19)) '
														ELSE 'thread_CPU_delta '
													END + 
										'WHEN CPU_delta >= 0 THEN ' +
											CASE @format_output
												WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, thread_CPU_delta + CPU_delta))) OVER() - LEN(CONVERT(VARCHAR, CPU_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU_delta), 1), 19)) '
												WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, CPU_delta), 1), 19)) '
												ELSE 'CPU_delta '
											END + 
										'ELSE NULL ' +
									'END ' +
						'ELSE ' +
							'NULL ' +
					'END AS CPU_delta, ' +
					--context_switches_delta
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
							'AND context_switches_delta >= 0 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, context_switches_delta))) OVER() - LEN(CONVERT(VARCHAR, context_switches_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches_delta), 1), 19)) '
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, context_switches_delta), 1), 19)) '
									ELSE 'context_switches_delta '
								END + 
						'ELSE NULL ' +
					'END AS context_switches_delta, ' +
					--used_memory_delta
					'CASE ' +
						'WHEN ' +
							'first_request_start_time = last_request_start_time ' + 
							'AND num_events = 2 ' +
							'AND used_memory_delta >= 0 ' +
								'THEN ' +
								CASE @format_output
									WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, used_memory_delta))) OVER() - LEN(CONVERT(VARCHAR, used_memory_delta))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory_delta), 1), 19)) '
									WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, used_memory_delta), 1), 19)) '
									ELSE 'used_memory_delta '
								END + 
						'ELSE NULL ' +
					'END AS used_memory_delta, ' +
					--tasks
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, tasks))) OVER() - LEN(CONVERT(VARCHAR, tasks))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tasks), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, tasks), 1), 19)) '
						ELSE ''
					END + 'tasks, ' +
					'status, ' +
					'wait_info, ' +
					'locks, ' +
					'tran_start_time, ' +
					'LEFT(tran_log_writes, LEN(tran_log_writes) - 1) AS tran_log_writes, ' +
					--open_tran_count
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, open_tran_count))) OVER() - LEN(CONVERT(VARCHAR, open_tran_count))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, open_tran_count), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, open_tran_count), 1), 19)) AS '
						ELSE ''
					END + 'open_tran_count, ' +
					--sql_command
					CASE @format_output 
						WHEN 0 THEN 'REPLACE(REPLACE(CONVERT(NVARCHAR(MAX), sql_command), ''<?query --''+CHAR(13)+CHAR(10), ''''), CHAR(13)+CHAR(10)+''--?>'', '''') AS '
						ELSE ''
					END + 'sql_command, ' +
					--sql_text
					CASE @format_output 
						WHEN 0 THEN 'REPLACE(REPLACE(CONVERT(NVARCHAR(MAX), sql_text), ''<?query --''+CHAR(13)+CHAR(10), ''''), CHAR(13)+CHAR(10)+''--?>'', '''') AS '
						ELSE ''
					END + 'sql_text, ' +
					'query_plan, ' +
					'blocking_session_id, ' +
					--blocked_session_count
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, blocked_session_count))) OVER() - LEN(CONVERT(VARCHAR, blocked_session_count))) + LEFT(CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1), 19)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, LEFT(CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1), 19)) AS '
						ELSE ''
					END + 'blocked_session_count, ' +
					--percent_complete
					CASE @format_output
						WHEN 1 THEN 'CONVERT(VARCHAR, SPACE(MAX(LEN(CONVERT(VARCHAR, CONVERT(MONEY, percent_complete), 2))) OVER() - LEN(CONVERT(VARCHAR, CONVERT(MONEY, percent_complete), 2))) + CONVERT(CHAR(22), CONVERT(MONEY, percent_complete), 2)) AS '
						WHEN 2 THEN 'CONVERT(VARCHAR, CONVERT(CHAR(22), CONVERT(MONEY, blocked_session_count), 1)) AS '
						ELSE ''
					END + 'percent_complete, ' +
					'host_name, ' +
					'login_name, ' +
					'database_name, ' +
					'program_name, ' +
					'additional_info, ' +
					'start_time, ' +
					'login_time, ' +
					'CASE ' +
						'WHEN status = N''sleeping'' THEN NULL ' +
						'ELSE request_id ' +
					'END AS request_id, ' +
					'GETDATE() AS collection_time '
		--End inner column list
		) +
		--Derived table and INSERT specification
		CONVERT
		(
			VARCHAR(MAX),
				'FROM ' +
				'( ' +
					'SELECT TOP(2147483647) ' +
						'*, ' +
						'CASE ' +
							'MAX ' +
							'( ' +
								'LEN ' +
								'( ' +
									'CONVERT ' +
									'( ' +
										'VARCHAR, ' +
										'CASE ' +
											'WHEN elapsed_time < 0 THEN ' +
												'(-1 * elapsed_time) / 86400 ' +
											'ELSE ' +
												'elapsed_time / 86400000 ' +
										'END ' +
									') ' +
								') ' +
							') OVER () ' +
								'WHEN 1 THEN 2 ' +
								'ELSE ' +
									'MAX ' +
									'( ' +
										'LEN ' +
										'( ' +
											'CONVERT ' +
											'( ' +
												'VARCHAR, ' +
												'CASE ' +
													'WHEN elapsed_time < 0 THEN ' +
														'(-1 * elapsed_time) / 86400 ' +
													'ELSE ' +
														'elapsed_time / 86400000 ' +
												'END ' +
											') ' +
										') ' +
									') OVER () ' +
						'END AS max_elapsed_length, ' +
						'MAX(physical_io * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(physical_io * recursion) OVER (PARTITION BY session_id, request_id) AS physical_io_delta, ' +
						'MAX(reads * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(reads * recursion) OVER (PARTITION BY session_id, request_id) AS reads_delta, ' +
						'MAX(physical_reads * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(physical_reads * recursion) OVER (PARTITION BY session_id, request_id) AS physical_reads_delta, ' +
						'MAX(writes * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(writes * recursion) OVER (PARTITION BY session_id, request_id) AS writes_delta, ' +
						'MAX(tempdb_allocations * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(tempdb_allocations * recursion) OVER (PARTITION BY session_id, request_id) AS tempdb_allocations_delta, ' +
						'MAX(tempdb_current * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(tempdb_current * recursion) OVER (PARTITION BY session_id, request_id) AS tempdb_current_delta, ' +
						'MAX(CPU * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(CPU * recursion) OVER (PARTITION BY session_id, request_id) AS CPU_delta, ' +
						'MAX(thread_CPU_snapshot * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(thread_CPU_snapshot * recursion) OVER (PARTITION BY session_id, request_id) AS thread_CPU_delta, ' +
						'MAX(context_switches * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(context_switches * recursion) OVER (PARTITION BY session_id, request_id) AS context_switches_delta, ' +
						'MAX(used_memory * recursion) OVER (PARTITION BY session_id, request_id) + ' +
							'MIN(used_memory * recursion) OVER (PARTITION BY session_id, request_id) AS used_memory_delta, ' +
						'MIN(last_request_start_time) OVER (PARTITION BY session_id, request_id) AS first_request_start_time, ' +
						'COUNT(*) OVER (PARTITION BY session_id, request_id) AS num_events ' +
					'FROM #sessions AS s1 ' +
					CASE 
						WHEN @sort_order = '' THEN ''
						ELSE
							'ORDER BY ' +
								@sort_order
					END +
				') AS s ' +
				'WHERE ' +
					's.recursion = 1 ' +
			') x ' +
			'OPTION (KEEPFIXED PLAN); ' +
			'' +
			CASE @return_schema
				WHEN 1 THEN
					'SET @schema = ' +
						'''CREATE TABLE <table_name> ( '' + ' +
							'STUFF ' +
							'( ' +
								'( ' +
									'SELECT ' +
										''','' + ' +
										'QUOTENAME(COLUMN_NAME) + '' '' + ' +
										'DATA_TYPE + ' + 
										'CASE ' +
											'WHEN DATA_TYPE LIKE ''%char'' THEN ''('' + COALESCE(NULLIF(CONVERT(VARCHAR, CHARACTER_MAXIMUM_LENGTH), ''-1''), ''max'') + '') '' ' +
											'ELSE '' '' ' +
										'END + ' +
										'CASE IS_NULLABLE ' +
											'WHEN ''NO'' THEN ''NOT '' ' +
											'ELSE '''' ' +
										'END + ''NULL'' AS [text()] ' +
									'FROM tempdb.INFORMATION_SCHEMA.COLUMNS ' +
									'WHERE ' +
										'TABLE_NAME = (SELECT name FROM tempdb.sys.objects WHERE object_id = OBJECT_ID(''tempdb..#session_schema'')) ' +
										'ORDER BY ' +
											'ORDINAL_POSITION ' +
									'FOR XML ' +
										'PATH('''') ' +
								'), + ' +
								'1, ' +
								'1, ' +
								''''' ' +
							') + ' +
						''')''; ' 
				ELSE ''
			END
		--End derived table and INSERT specification
		);

	SET @sql_n = CONVERT(NVARCHAR(MAX), @sql);

	EXEC sp_executesql
		@sql_n,
		N'@schema VARCHAR(MAX) OUTPUT',
		@schema OUTPUT;
END;]]></Value>
			</Property>
			<Property Name="IsCaller" Value="False" />
			<Property Name="IsOwner" Value="True" />
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varbinary]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varbinary]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@filter]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@filter_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@not_filter]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@not_filter_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@show_own_spid]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@show_system_spids]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@show_sleeping_spids]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_full_inner_text]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_plans]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_outer_command]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_transaction_info]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_task_info]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_locks]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_avg_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@get_additional_info]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@find_block_leaders]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@delta_interval]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@format_output]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@output_column_list]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@sort_order]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@return_schema]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@destination_table]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@help]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[transaction_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_number]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[status]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[start_time]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[last_request_start_time]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[object_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[hobt_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[allocation_unit_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[index_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[schema_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[principal_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[start_time]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_type]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[object_name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[schema_name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[page_type]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_mode]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_status]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_description]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[index_name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[principal_name]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[elapsed_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[avg_elapsed_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[physical_io]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[reads]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[physical_reads]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[writes]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[tempdb_allocations]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[tempdb_current]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[CPU]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[thread_CPU_snapshot]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[context_switches]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[used_memory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[tasks]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[wait_info]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[open_tran_count]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[sql_handle]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[statement_start_offset]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[statement_end_offset]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[sql_text]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[plan_handle]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[blocking_session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[percent_complete]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[host_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[login_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[database_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[program_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[additional_info]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[login_time]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[transaction_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[tran_start_time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[tran_log_writes]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[sql_text]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[statement_start_offset]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[statement_end_offset]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[EventType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[Parameters]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[EventInfo]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[session_number]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[session_number]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[sql_command]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[EventInfo]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[session_number]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_number]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@buffer_results].[start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[last_request_start_time]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[last_request_start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[query_plan]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[query_plan]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[query_error]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[locks]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[query_error]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_status]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_status]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[object_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[schema_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[page_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[index_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[object_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[schema_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[principal_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_description]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_status]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_count]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[object_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[schema_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[page_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[index_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[principal_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_description]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_mode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_status]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[resource_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[schema_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#locks].[start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[last_request_start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[blocking_session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[CTE6].[blockers].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[CTE6].[blockers].[top_level_session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[blocked_session_count]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[database_name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[schema_name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[object_name]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[query_error]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[object_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[hobt_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[schema_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[additional_info]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[schema_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[object_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[query_error]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[#sessions].[additional_info]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sp_WhoIsActive].[@schema]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[#sessions]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[recursion]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[request_id]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[session_number]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[elapsed_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[avg_elapsed_time]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[physical_io]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[reads]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[physical_reads]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[writes]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[tempdb_allocations]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[tempdb_current]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[CPU]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[thread_CPU_snapshot]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[context_switches]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[used_memory]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[tasks]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[status]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="30" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[wait_info]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[locks]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlXmlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[xml]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[transaction_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[tran_start_time]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[tran_log_writes]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[open_tran_count]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[sql_command]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlXmlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[xml]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[sql_handle]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="64" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varbinary]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[statement_start_offset]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[statement_end_offset]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[sql_text]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlXmlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[xml]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[plan_handle]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="64" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varbinary]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[query_plan]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlXmlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[xml]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[blocking_session_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[blocked_session_count]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[percent_complete]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[real]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[host_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[login_name]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[database_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[program_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[additional_info]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlXmlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[xml]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[start_time]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[login_time]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#sessions].[last_request_start_time]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[@buffer_results]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[@buffer_results].[EventType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="30" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[@buffer_results].[Parameters]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[@buffer_results].[EventInfo]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[@buffer_results].[start_time]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[@buffer_results].[session_number]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[#blocked_requests]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[session_id]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[request_id]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[database_name]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[object_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[hobt_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[schema_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[schema_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[object_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sp_WhoIsActive].[#blocked_requests].[query_error]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="2048" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE1].[a0]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE1].[a0].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE1].[a1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE1].[a1].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE1].[a2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE1].[a2].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE1].[a3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE1].[a3].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE1].[a4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE1].[a4].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE1].[numbers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE1].[numbers].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[a0]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[a0].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[a1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[a1].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[a2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[a2].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[a3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[a3].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[a4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[a4].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[numbers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[numbers].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[tokens]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[tokens].[token]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[tokens].[number]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[tokens].[param_group]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[tokens].[group_order]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE2].[parsed_tokens]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[parsed_tokens].[parameter]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[parsed_tokens].[description]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[parsed_tokens].[param_group]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE2].[parsed_tokens].[group_order]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[a0]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[a0].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[a1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[a1].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[a2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[a2].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[a3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[a3].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[a4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[a4].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[numbers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[numbers].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[tokens]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[tokens].[token]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[tokens].[number]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[tokens].[output_group]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[tokens].[output_group_order]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE3].[output_tokens]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[output_tokens].[token]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[output_tokens].[number]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[output_tokens].[output_group]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[output_tokens].[output_group_order]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE3].[output_tokens].[column_info]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[a0]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[a0].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[a1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[a1].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[a2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[a2].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[a3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[a3].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[a4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[a4].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[numbers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[numbers].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[tokens]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[tokens].[token]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[tokens].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE4].[ordered_columns]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[ordered_columns].[column_name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[ordered_columns].[r]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE4].[ordered_columns].[s]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[a0]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[a0].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[a1]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[a1].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[a2]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[a2].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[a3]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[a3].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[a4]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[a4].[n]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[numbers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[numbers].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[tokens]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[tokens].[token]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[tokens].[next_chunk]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[tokens].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE5].[ordered_columns]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[ordered_columns].[column_name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[ordered_columns].[r]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE5].[ordered_columns].[number]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[#locks]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[resource_type]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[database_name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[object_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[file_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[page_type]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[hobt_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[allocation_unit_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[index_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[schema_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[principal_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[request_mode]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[request_status]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[session_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[resource_description]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[request_count]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[request_id]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[start_time]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[object_name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[index_name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[schema_name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[principal_name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[#locks].[query_error]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sp_WhoIsActive].[CTE6].[blockers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE6].[blockers].[session_id]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[sp_WhoIsActive].[CTE6].[blockers].[top_level_session_id]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[sp_WhoIsActive].[#sessions].[session_id]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@filter]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@filter_type]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['session']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@not_filter]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@not_filter_type]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['session']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="10" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@show_own_spid]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@show_system_spids]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@show_sleeping_spids]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_full_inner_text]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_plans]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_outer_command]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_transaction_info]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_task_info]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_locks]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_avg_time]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@get_additional_info]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@find_block_leaders]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@delta_interval]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@output_column_list]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['[dd%][session_id][sql_text][sql_command][login_name][wait_info][tasks][tran_log%][cpu%][temp%][block%][reads%][writes%][context%][physical%][query_plan][locks][%]']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="8000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@sort_order]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['[start_time] ASC']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="500" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@format_output]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[tinyint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@destination_table]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@return_schema]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@schema]">
						<Property Name="IsOutput" Value="True" />
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sp_WhoIsActive].[@help]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="833" />
				<Property Name="Length" Value="172311" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="/*********************************************************************************************&#xD;&#xA;Who Is Active? v11.00 (2011-04-27)&#xD;&#xA;(C) 2007-2011, Adam Machanic&#xD;&#xA;&#xD;&#xA;Feedback: mailto:amachanic@gmail.com&#xD;&#xA;Updates: http://sqlblog.com/blogs/adam_machanic/archive/tags/who+is+active/default.aspx&#xD;&#xA;&quot;Beta&quot; Builds: http://sqlblog.com/files/folders/beta/tags/who+is+active/default.aspx&#xD;&#xA;&#xD;&#xA;Donate! Support this project: http://tinyurl.com/WhoIsActiveDonate&#xD;&#xA;&#xD;&#xA;License: &#xD;&#xA;&#x9;Who is Active? is free to download and use for personal, educational, and internal &#xD;&#xA;&#x9;corporate purposes, provided that this header is preserved. Redistribution or sale &#xD;&#xA;&#x9;of Who is Active?, in whole or in part, is prohibited without the author's express &#xD;&#xA;&#x9;written consent.&#xD;&#xA;*********************************************************************************************/&#xD;&#xA;CREATE PROCEDURE [dbo].[sp_WhoIsActive]&#xD;&#xA;(&#xD;&#xA;--~&#xD;&#xA;&#x9;--Filters--Both inclusive and exclusive&#xD;&#xA;&#x9;--Set either filter to '' to disable&#xD;&#xA;&#x9;--Valid filter types are: session, program, database, login, and host&#xD;&#xA;&#x9;--Session is a session ID, and either 0 or '' can be used to indicate &quot;all&quot; sessions&#xD;&#xA;&#x9;--All other filter types support % or _ as wildcards&#xD;&#xA;&#x9;@filter sysname = '',&#xD;&#xA;&#x9;@filter_type VARCHAR(10) = 'session',&#xD;&#xA;&#x9;@not_filter sysname = '',&#xD;&#xA;&#x9;@not_filter_type VARCHAR(10) = 'session',&#xD;&#xA;&#xD;&#xA;&#x9;--Retrieve data about the calling session?&#xD;&#xA;&#x9;@show_own_spid BIT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Retrieve data about system sessions?&#xD;&#xA;&#x9;@show_system_spids BIT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Controls how sleeping SPIDs are handled, based on the idea of levels of interest&#xD;&#xA;&#x9;--0 does not pull any sleeping SPIDs&#xD;&#xA;&#x9;--1 pulls only those sleeping SPIDs that also have an open transaction&#xD;&#xA;&#x9;--2 pulls all sleeping SPIDs&#xD;&#xA;&#x9;@show_sleeping_spids TINYINT = 1,&#xD;&#xA;&#xD;&#xA;&#x9;--If 1, gets the full stored procedure or running batch, when available&#xD;&#xA;&#x9;--If 0, gets only the actual statement that is currently running in the batch or procedure&#xD;&#xA;&#x9;@get_full_inner_text BIT = 1,&#xD;&#xA;&#xD;&#xA;&#x9;--Get associated query plans for running tasks, if available&#xD;&#xA;&#x9;--If @get_plans = 1, gets the plan based on the request's statement offset&#xD;&#xA;&#x9;--If @get_plans = 2, gets the entire plan based on the request's plan_handle&#xD;&#xA;&#x9;@get_plans TINYINT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Get the associated outer ad hoc query or stored procedure call, if available&#xD;&#xA;&#x9;@get_outer_command BIT = 1,&#xD;&#xA;&#xD;&#xA;&#x9;--Enables pulling transaction log write info and transaction duration&#xD;&#xA;&#x9;@get_transaction_info BIT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Get information on active tasks, based on three interest levels&#xD;&#xA;&#x9;--Level 0 does not pull any task-related information&#xD;&#xA;&#x9;--Level 1 is a lightweight mode that pulls the top non-CXPACKET wait, giving preference to blockers&#xD;&#xA;&#x9;--Level 2 pulls all available task-based metrics, including: &#xD;&#xA;&#x9;--number of active tasks, current wait stats, physical I/O, context switches, and blocker information&#xD;&#xA;&#x9;@get_task_info TINYINT = 1,&#xD;&#xA;&#xD;&#xA;&#x9;--Gets associated locks for each request, aggregated in an XML format&#xD;&#xA;&#x9;@get_locks BIT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Get average time for past runs of an active query&#xD;&#xA;&#x9;--(based on the combination of plan handle, sql handle, and offset)&#xD;&#xA;&#x9;@get_avg_time BIT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Get additional non-performance-related information about the session or request&#xD;&#xA;&#x9;--text_size, language, date_format, date_first, quoted_identifier, arithabort, ansi_null_dflt_on, &#xD;&#xA;&#x9;--ansi_defaults, ansi_warnings, ansi_padding, ansi_nulls, concat_null_yields_null, &#xD;&#xA;&#x9;--transaction_isolation_level, lock_timeout, deadlock_priority, row_count, command_type&#xD;&#xA;&#x9;--&#xD;&#xA;&#x9;--If a SQL Agent job is running, an subnode called agent_info will be populated with some or all of&#xD;&#xA;&#x9;--the following: job_id, job_name, step_id, step_name, msdb_query_error (in the event of an error)&#xD;&#xA;&#x9;--&#xD;&#xA;&#x9;--If @get_task_info is set to 2 and a lock wait is detected, a subnode called block_info will be&#xD;&#xA;&#x9;--populated with some or all of the following: lock_type, database_name, object_id, file_id, hobt_id, &#xD;&#xA;&#x9;--applock_hash, metadata_resource, metadata_class_id, object_name, schema_name&#xD;&#xA;&#x9;@get_additional_info BIT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Walk the blocking chain and count the number of &#xD;&#xA;&#x9;--total SPIDs blocked all the way down by a given session&#xD;&#xA;&#x9;--Also enables task_info Level 1, if @get_task_info is set to 0&#xD;&#xA;&#x9;@find_block_leaders BIT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--Pull deltas on various metrics&#xD;&#xA;&#x9;--Interval in seconds to wait before doing the second data pull&#xD;&#xA;&#x9;@delta_interval TINYINT = 0,&#xD;&#xA;&#xD;&#xA;&#x9;--List of desired output columns, in desired order&#xD;&#xA;&#x9;--Note that the final output will be the intersection of all enabled features and all &#xD;&#xA;&#x9;--columns in the list. Therefore, only columns associated with enabled features will &#xD;&#xA;&#x9;--actually appear in the output. Likewise, removing columns from this list may effectively&#xD;&#xA;&#x9;--disable features, even if they are turned on&#xD;&#xA;&#x9;--&#xD;&#xA;&#x9;--Each element in this list must be one of the valid output column names. Names must be&#xD;&#xA;&#x9;--delimited by square brackets. White space, formatting, and additional characters are&#xD;&#xA;&#x9;--allowed, as long as the list contains exact matches of delimited valid column names.&#xD;&#xA;&#x9;@output_column_list VARCHAR(8000) = '[dd%][session_id][sql_text][sql_command][login_name][wait_info][tasks][tran_log%][cpu%][temp%][block%][reads%][writes%][context%][physical%][query_plan][locks][%]',&#xD;&#xA;&#xD;&#xA;&#x9;--Column(s) by which to sort output, optionally with sort directions. &#xD;&#xA;&#x9;&#x9;--Valid column choices:&#xD;&#xA;&#x9;&#x9;--session_id, physical_io, reads, physical_reads, writes, tempdb_allocations,&#xD;&#xA;&#x9;&#x9;--tempdb_current, CPU, context_switches, used_memory, physical_io_delta, &#xD;&#xA;&#x9;&#x9;--reads_delta, physical_reads_delta, writes_delta, tempdb_allocations_delta, &#xD;&#xA;&#x9;&#x9;--tempdb_current_delta, CPU_delta, context_switches_delta, used_memory_delta, &#xD;&#xA;&#x9;&#x9;--tasks, tran_start_time, open_tran_count, blocking_session_id, blocked_session_count,&#xD;&#xA;&#x9;&#x9;--percent_complete, host_name, login_name, database_name, start_time, login_time&#xD;&#xA;&#x9;&#x9;--&#xD;&#xA;&#x9;&#x9;--Note that column names in the list must be bracket-delimited. Commas and/or white&#xD;&#xA;&#x9;&#x9;--space are not required. &#xD;&#xA;&#x9;@sort_order VARCHAR(500) = '[start_time] ASC',&#xD;&#xA;&#xD;&#xA;&#x9;--Formats some of the output columns in a more &quot;human readable&quot; form&#xD;&#xA;&#x9;--0 disables outfput format&#xD;&#xA;&#x9;--1 formats the output for variable-width fonts&#xD;&#xA;&#x9;--2 formats the output for fixed-width fonts&#xD;&#xA;&#x9;@format_output TINYINT = 1,&#xD;&#xA;&#xD;&#xA;&#x9;--If set to a non-blank value, the script will attempt to insert into the specified &#xD;&#xA;&#x9;--destination table. Please note that the script will not verify that the table exists, &#xD;&#xA;&#x9;--or that it has the correct schema, before doing the insert.&#xD;&#xA;&#x9;--Table can be specified in one, two, or three-part format&#xD;&#xA;&#x9;@destination_table VARCHAR(4000) = '',&#xD;&#xA;&#xD;&#xA;&#x9;--If set to 1, no data collection will happen and no result set will be returned; instead,&#xD;&#xA;&#x9;--a CREATE TABLE statement will be returned via the @schema parameter, which will match &#xD;&#xA;&#x9;--the schema of the result set that would be returned by using the same collection of the&#xD;&#xA;&#x9;--rest of the parameters. The CREATE TABLE statement will have a placeholder token of &#xD;&#xA;&#x9;--&lt;table_name&gt; in place of an actual table name.&#xD;&#xA;&#x9;@return_schema BIT = 0,&#xD;&#xA;&#x9;@schema VARCHAR(MAX) = NULL OUTPUT,&#xD;&#xA;&#xD;&#xA;&#x9;--Help! What do I do?&#xD;&#xA;&#x9;@help BIT = 0&#xD;&#xA;--~&#xD;&#xA;)&#xD;&#xA;/*&#xD;&#xA;OUTPUT COLUMNS&#xD;&#xA;--------------&#xD;&#xA;Formatted/Non:&#x9;[session_id] [smallint] NOT NULL&#xD;&#xA;&#x9;Session ID (a.k.a. SPID)&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[dd hh:mm:ss.mss] [varchar](15) NULL&#xD;&#xA;Non-Formatted:&#x9;&lt;not returned&gt;&#xD;&#xA;&#x9;For an active request, time the query has been running&#xD;&#xA;&#x9;For a sleeping session, time since the last batch completed&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[dd hh:mm:ss.mss (avg)] [varchar](15) NULL&#xD;&#xA;Non-Formatted:&#x9;[avg_elapsed_time] [int] NULL&#xD;&#xA;&#x9;(Requires @get_avg_time option)&#xD;&#xA;&#x9;How much time has the active portion of the query taken in the past, on average?&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[physical_io] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[physical_io] [bigint] NULL&#xD;&#xA;&#x9;Shows the number of physical I/Os, for active requests&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[reads] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[reads] [bigint] NULL&#xD;&#xA;&#x9;For an active request, number of reads done for the current query&#xD;&#xA;&#x9;For a sleeping session, total number of reads done over the lifetime of the session&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[physical_reads] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[physical_reads] [bigint] NULL&#xD;&#xA;&#x9;For an active request, number of physical reads done for the current query&#xD;&#xA;&#x9;For a sleeping session, total number of physical reads done over the lifetime of the session&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[writes] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[writes] [bigint] NULL&#xD;&#xA;&#x9;For an active request, number of writes done for the current query&#xD;&#xA;&#x9;For a sleeping session, total number of writes done over the lifetime of the session&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[tempdb_allocations] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[tempdb_allocations] [bigint] NULL&#xD;&#xA;&#x9;For an active request, number of TempDB writes done for the current query&#xD;&#xA;&#x9;For a sleeping session, total number of TempDB writes done over the lifetime of the session&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[tempdb_current] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[tempdb_current] [bigint] NULL&#xD;&#xA;&#x9;For an active request, number of TempDB pages currently allocated for the query&#xD;&#xA;&#x9;For a sleeping session, number of TempDB pages currently allocated for the session&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[CPU] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[CPU] [int] NULL&#xD;&#xA;&#x9;For an active request, total CPU time consumed by the current query&#xD;&#xA;&#x9;For a sleeping session, total CPU time consumed over the lifetime of the session&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[context_switches] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[context_switches] [bigint] NULL&#xD;&#xA;&#x9;Shows the number of context switches, for active requests&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[used_memory] [varchar](30) NOT NULL&#xD;&#xA;Non-Formatted:&#x9;[used_memory] [bigint] NOT NULL&#xD;&#xA;&#x9;For an active request, total memory consumption for the current query&#xD;&#xA;&#x9;For a sleeping session, total current memory consumption&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[physical_io_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[physical_io_delta] [bigint] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the number of physical I/Os reported on the first and second collections. &#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[reads_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[reads_delta] [bigint] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the number of reads reported on the first and second collections. &#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[physical_reads_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[physical_reads_delta] [bigint] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the number of physical reads reported on the first and second collections. &#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[writes_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[writes_delta] [bigint] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the number of writes reported on the first and second collections. &#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[tempdb_allocations_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[tempdb_allocations_delta] [bigint] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the number of TempDB writes reported on the first and second collections. &#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[tempdb_current_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[tempdb_current_delta] [bigint] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the number of allocated TempDB pages reported on the first and second &#xD;&#xA;&#x9;collections. If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[CPU_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[CPU_delta] [int] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the CPU time reported on the first and second collections. &#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[context_switches_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[context_switches_delta] [bigint] NULL&#xD;&#xA;&#x9;(Requires @delta_interval option)&#xD;&#xA;&#x9;Difference between the context switches count reported on the first and second collections&#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[used_memory_delta] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[used_memory_delta] [bigint] NULL&#xD;&#xA;&#x9;Difference between the memory usage reported on the first and second collections&#xD;&#xA;&#x9;If the request started after the first collection, the value will be NULL&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[tasks] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[tasks] [smallint] NULL&#xD;&#xA;&#x9;Number of worker tasks currently allocated, for active requests&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[status] [varchar](30) NOT NULL&#xD;&#xA;&#x9;Activity status for the session (running, sleeping, etc)&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[wait_info] [nvarchar](4000) NULL&#xD;&#xA;&#x9;Aggregates wait information, in the following format:&#xD;&#xA;&#x9;&#x9;(Ax: Bms/Cms/Dms)E&#xD;&#xA;&#x9;A is the number of waiting tasks currently waiting on resource type E. B/C/D are wait&#xD;&#xA;&#x9;times, in milliseconds. If only one thread is waiting, its wait time will be shown as B.&#xD;&#xA;&#x9;If two tasks are waiting, each of their wait times will be shown (B/C). If three or more &#xD;&#xA;&#x9;tasks are waiting, the minimum, average, and maximum wait times will be shown (B/C/D).&#xD;&#xA;&#x9;If wait type E is a page latch wait and the page is of a &quot;special&quot; type (e.g. PFS, GAM, SGAM), &#xD;&#xA;&#x9;the page type will be identified.&#xD;&#xA;&#x9;If wait type E is CXPACKET, the nodeId from the query plan will be identified&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[locks] [xml] NULL&#xD;&#xA;&#x9;(Requires @get_locks option)&#xD;&#xA;&#x9;Aggregates lock information, in XML format.&#xD;&#xA;&#x9;The lock XML includes the lock mode, locked object, and aggregates the number of requests. &#xD;&#xA;&#x9;Attempts are made to identify locked objects by name&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[tran_start_time] [datetime] NULL&#xD;&#xA;&#x9;(Requires @get_transaction_info option)&#xD;&#xA;&#x9;Date and time that the first transaction opened by a session caused a transaction log &#xD;&#xA;&#x9;write to occur.&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[tran_log_writes] [nvarchar](4000) NULL&#xD;&#xA;&#x9;(Requires @get_transaction_info option)&#xD;&#xA;&#x9;Aggregates transaction log write information, in the following format:&#xD;&#xA;&#x9;A:wB (C kB)&#xD;&#xA;&#x9;A is a database that has been touched by an active transaction&#xD;&#xA;&#x9;B is the number of log writes that have been made in the database as a result of the transaction&#xD;&#xA;&#x9;C is the number of log kilobytes consumed by the log records&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[open_tran_count] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[open_tran_count] [smallint] NULL&#xD;&#xA;&#x9;Shows the number of open transactions the session has open&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[sql_command] [xml] NULL&#xD;&#xA;Non-Formatted:&#x9;[sql_command] [nvarchar](max) NULL&#xD;&#xA;&#x9;(Requires @get_outer_command option)&#xD;&#xA;&#x9;Shows the &quot;outer&quot; SQL command, i.e. the text of the batch or RPC sent to the server, &#xD;&#xA;&#x9;if available&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[sql_text] [xml] NULL&#xD;&#xA;Non-Formatted:&#x9;[sql_text] [nvarchar](max) NULL&#xD;&#xA;&#x9;Shows the SQL text for active requests or the last statement executed&#xD;&#xA;&#x9;for sleeping sessions, if available in either case.&#xD;&#xA;&#x9;If @get_full_inner_text option is set, shows the full text of the batch.&#xD;&#xA;&#x9;Otherwise, shows only the active statement within the batch.&#xD;&#xA;&#x9;If the query text is locked, a special timeout message will be sent, in the following format:&#xD;&#xA;&#x9;&#x9;&lt;timeout_exceeded /&gt;&#xD;&#xA;&#x9;If an error occurs, an error message will be sent, in the following format:&#xD;&#xA;&#x9;&#x9;&lt;error message=&quot;message&quot; /&gt;&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[query_plan] [xml] NULL&#xD;&#xA;&#x9;(Requires @get_plans option)&#xD;&#xA;&#x9;Shows the query plan for the request, if available.&#xD;&#xA;&#x9;If the plan is locked, a special timeout message will be sent, in the following format:&#xD;&#xA;&#x9;&#x9;&lt;timeout_exceeded /&gt;&#xD;&#xA;&#x9;If an error occurs, an error message will be sent, in the following format:&#xD;&#xA;&#x9;&#x9;&lt;error message=&quot;message&quot; /&gt;&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[blocking_session_id] [smallint] NULL&#xD;&#xA;&#x9;When applicable, shows the blocking SPID&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[blocked_session_count] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[blocked_session_count] [smallint] NULL&#xD;&#xA;&#x9;(Requires @find_block_leaders option)&#xD;&#xA;&#x9;The total number of SPIDs blocked by this session,&#xD;&#xA;&#x9;all the way down the blocking chain.&#xD;&#xA;&#xD;&#xA;Formatted:&#x9;&#x9;[percent_complete] [varchar](30) NULL&#xD;&#xA;Non-Formatted:&#x9;[percent_complete] [real] NULL&#xD;&#xA;&#x9;When applicable, shows the percent complete (e.g. for backups, restores, and some rollbacks)&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[host_name] [sysname] NOT NULL&#xD;&#xA;&#x9;Shows the host name for the connection&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[login_name] [sysname] NOT NULL&#xD;&#xA;&#x9;Shows the login name for the connection&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[database_name] [sysname] NULL&#xD;&#xA;&#x9;Shows the connected database&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[program_name] [sysname] NULL&#xD;&#xA;&#x9;Shows the reported program/application name&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[additional_info] [xml] NULL&#xD;&#xA;&#x9;(Requires @get_additional_info option)&#xD;&#xA;&#x9;Returns additional non-performance-related session/request information&#xD;&#xA;&#x9;If the script finds a SQL Agent job running, the name of the job and job step will be reported&#xD;&#xA;&#x9;If @get_task_info = 2 and the script finds a lock wait, the locked object will be reported&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[start_time] [datetime] NOT NULL&#xD;&#xA;&#x9;For active requests, shows the time the request started&#xD;&#xA;&#x9;For sleeping sessions, shows the time the last batch completed&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[login_time] [datetime] NOT NULL&#xD;&#xA;&#x9;Shows the time that the session connected&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[request_id] [int] NULL&#xD;&#xA;&#x9;For active requests, shows the request_id&#xD;&#xA;&#x9;Should be 0 unless MARS is being used&#xD;&#xA;&#xD;&#xA;Formatted/Non:&#x9;[collection_time] [datetime] NOT NULL&#xD;&#xA;&#x9;Time that this script's final SELECT ran&#xD;&#xA;*/&#xD;&#xA;WITH EXECUTE AS OWNER&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[spGetTableFromProcedure]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	/*Set Current DB if no DBName was provided*/
	Select @DBName = ISNULL (@DBName, DB_NAME()), @Parameters = ISNULL(@Parameters, '')

	/*Remove brackets from SP name*/
	IF @Sp_Name like '%]' 
	BEGIN
		select @Sp_Name =  SUBSTRING(@Sp_Name, 2, LEN(@Sp_Name)-2)
	END

	/*Remove unnecessary characters in SP name*/
	Declare @Checksp varchar(max)  = '', @SPFullPath nvarchar(max) = ''

	if @Sp_Name like '% %'
	select @Checksp =  LEFT(@Sp_Name, CHARINDEX(' ', @Sp_Name) - 1)
	else 
	select @Checksp = @Sp_Name

	/*Create the full path for the SP (DB.Schema.Object)*/
	select @SPFullPath = @DBName + '.' + @SchemaName + '.' + @Checksp + ' ' + @Parameters
	
	/*Check if SP exists before starting*/
	Create table #CheckSPName (DBName sysname);

	select @Checksp = 'Select name from '+ @DBName + '.' + 'sys.procedures Where name = ''' + @Checksp + '''and SCHEMA_NAME(schema_id) = ''' + @SchemaName + ''''

	insert into #CheckSPName
	EXEC (@Checksp)

	select @Checksp = 'Select name from master.sys.sysobjects Where name = ''' + @Sp_Name + '''and xtype = ''P'''

	insert into #CheckSPName
	EXEC (@Checksp)

	IF NOT EXISTS (SELECT 1 FROM  #CheckSPName)
	RAISERROR ('SP does not exists.', -- Message text.
               16, -- Severity.
               1 -- State.
               );

	DROP TABLE #CheckSPName


	

	/*Check if table is  a Global Temp table. if not - change it to global*/
	Declare @TempTablecheck varchar (1000),
			@TableChangedMessage varchar (100) = ''

	if @NewTable is not null
	Begin

		if @NewTable like '#%' and @NewTable not like '##%'
		select @NewTable = '#' + @NewTable

		select @TempTablecheck = 'tempdb..' + @NewTable

		/*Check if Global Temp Table exists. If so - rename the new one*/
		IF OBJECT_ID(@TempTablecheck) IS NOT NULL
		begin 

			select @NewTable = @NewTable + right (newid(), 5)
			select @TableChangedMessage = '/*(Please notice that temp table name was changed)*/'

		end
	End

	Else if @NewTable is null
	Begin
		select @NewTable = '##Temp' + right (newid(), 5)
	End


	/*Create a temp table for SP schema*/
	declare @SQString nvarchar (max) = ''

	BEGIN TRY

		create table #TableTemplate
		(
		is_hidden	bit NOT NULL	,
		column_ordinal	int NOT NULL	,
		name	sysname NULL	,
		is_nullable	bit NOT NULL	,
		system_type_id	int NOT NULL	,
		system_type_name	nvarchar(256) NULL	,
		max_length	smallint NOT NULL	,
		precision	tinyint NOT NULL	,
		scale	tinyint NOT NULL	,
		collation_name	sysname NULL	,
		user_type_id	int NULL	,
		user_type_database	sysname NULL	,
		user_type_schema	sysname NULL	,
		user_type_name	sysname NULL	,
		assembly_qualified_type_name	nvarchar(4000)	,
		xml_collection_id	int NULL	,
		xml_collection_database	sysname NULL	,
		xml_collection_schema	sysname NULL	,
		xml_collection_name	sysname NULL	,
		is_xml_document	bit NOT NULL	,
		is_case_sensitive	bit NOT NULL	,
		is_fixed_length_clr_type	bit NOT NULL	,
		source_server	sysname NULL	,
		source_database	sysname	NULL,
		source_schema	sysname	NULL,
		source_table	sysname	NULL,
		source_column	sysname	NULL,
		is_identity_column	bit NULL	,
		is_part_of_unique_key	bit NULL	,
		is_updateable	bit NULL	,
		is_computed_column	bit NULL	,
		is_sparse_column_set	bit NULL	,
		ordinal_in_order_by_list	smallint NULL	,
		order_by_list_length	smallint NULL	,
		order_by_is_descending	smallint NULL	,
		tds_type_id	int NOT NULL	,
		tds_length	int NOT NULL	,
		tds_collation_id	int NULL	,
		tds_collation_sort_id	tinyint NULL	
		)

		/*Insert SP Result Set columns into temp table*/
		insert into #TableTemplate
		Exec sp_describe_first_result_set @tsql = @SPFullPath

		/*if SP does not return result set - return error*/
		if @@ROWCOUNT = 0 
		RAISERROR ('SP return no result set.', -- Message text.
            16, -- Severity.
            1 -- State.
            );


		select @SQString = @SQString+ name + ' ' + system_type_name + ' ' + case when is_nullable = 1 then 'NULL' else 'NOT NULL' END /*Null column definition*/+ ','
		from #TableTemplate

		select @SQString = 'CREATE TABLE ' + @NewTable + ' (' + @SQString 
		select @SQString = reverse(stuff(reverse(@SQString), 1, 1, '')) /*Remove extra comma at the end of the string*/
		select @SQString = @SQString + ')'
		print @SQString

		exec sp_executesql @SQString /*Creating the temp table*/

		Declare @SQLST nvarchar (max) = ''

		select @SQLST = 'Insert into ' + @NewTable + ' Exec ' + @SPFullPath

		exec sp_executesql @SQLST


		/*Prepare select command for the new temp table of the SP*/
		Declare @EndSt nvarchar (max) = ''

		select @EndSt = 'Select * from ' + @NewTable


		/*Prepare drop table command for the new temp table of the SP*/
		Declare @DropTable nvarchar (max) = ''

		select @DropTable = 'Drop Table ' + @NewTable


		/*The reult set containing the select + drop table commands for the user*/
		select 'Run This For Result Set: ' , @EndSt + ' ' + @TableChangedMessage
		
		select 'Dont Forget To Drop Table...', @DropTable

	

	END TRY

	BEGIN CATCH  

		Declare @ErrorMessage nvarchar (max)
		select @ErrorMessage = ERROR_MESSAGE()

		Declare @DropAfterErrorTable sysname = 'tempdb..' + @NewTable

		IF OBJECT_ID(@DropAfterErrorTable) IS NOT NULL OR OBJECT_ID(@NewTable) IS NOT NULL
		exec (@DropTable)

		RAISERROR (@ErrorMessage, -- Message text.
				   16, -- Severity.
				   1 -- State.
				   );


	END CATCH; 

	drop table #TableTemplate

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[@NewTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[@DBName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[@Parameters]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[@Sp_Name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[@SchemaName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[#CheckSPName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[#TableTemplate]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[system_type_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_nullable]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[spGetTableFromProcedure].[#CheckSPName]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#CheckSPName].[DBName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_hidden]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[column_ordinal]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_nullable]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[system_type_id]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[system_type_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="256" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[max_length]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[precision]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[scale]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[collation_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[user_type_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[user_type_database]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[user_type_schema]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[user_type_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[assembly_qualified_type_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[xml_collection_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[xml_collection_database]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[xml_collection_schema]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[xml_collection_name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_xml_document]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_case_sensitive]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_fixed_length_clr_type]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[source_server]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[source_database]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[source_schema]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[source_table]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[source_column]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_identity_column]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_part_of_unique_key]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_updateable]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_computed_column]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[is_sparse_column_set]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[ordinal_in_order_by_list]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[order_by_list_length]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[order_by_is_descending]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[tds_type_id]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[tds_length]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[tds_collation_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[spGetTableFromProcedure].[#TableTemplate].[tds_collation_sort_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spGetTableFromProcedure].[@Sp_Name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spGetTableFromProcedure].[@DBName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spGetTableFromProcedure].[@SchemaName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['dbo']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spGetTableFromProcedure].[@Parameters]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[spGetTableFromProcedure].[@NewTable]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="347" />
				<Property Name="Length" Value="6441" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Liran Vayman&#xD;&#xA;-- Create date: 2016.08.16&#xD;&#xA;-- Description:&#x9;Exec...INTO SP&#xD;&#xA;-- Exec [dbo].[spGetTableFromSP] @Sp_Name = 'sp_who', @NewTable =  '##TempFor&#xD;&#xA;--**** Please notice that SP that uses Temp tables in it - Can't be EXEC INTO!!!&#xD;&#xA;-- =============================================&#xD;&#xA;create PROCEDURE [dbo].[spGetTableFromProcedure]&#xD;&#xA;(&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;@Sp_Name nvarchar(max), --The SP name you want to execute &#xD;&#xA;&#x9;@DBName sysname = NULL, --The DB name you want to execute from.  default is NULL which will give current DB&#xD;&#xA;&#x9;@SchemaName sysname = 'dbo', -- the SP schema. Default is 'dbo'&#xD;&#xA;&#x9;@Parameters nvarchar (max) = NULL, -- the params the SP gets. Default is NULL&#xD;&#xA;&#x9;@NewTable sysname = NULL --The table in which you want to insert the SP result set to. If regular temp table is set - it will be changed to a global temp table.&#xD;&#xA;)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[sys_GetParameters]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    SET NOCOUNT ON;

    DECLARE 
        @object_id INT,
        @paramID INT,
        @paramName SYSNAME,
        @definition NVARCHAR(MAX),
        @t NVARCHAR(MAX),
        @loc1 INT,
        @loc2 INT,
        @loc3 INT,
        @loc4 INT,
        @has_default_value BIT;

    SET @object_id = OBJECT_ID(@object_name);

    IF (@object_id IS NOT NULL)
    BEGIN
    
        SELECT @definition = OBJECT_DEFINITION(@object_id);

        CREATE TABLE #params
        (
            parameter_id        INT PRIMARY KEY,
            has_default_value    BIT NOT NULL DEFAULT (0)
        );

        DECLARE c CURSOR
        LOCAL FORWARD_ONLY STATIC READ_ONLY
        FOR 
            SELECT 
                parameter_id,
                [name]
            FROM
                sys.parameters
            WHERE
                [object_id] = @object_id;

        OPEN c;

        FETCH NEXT FROM c INTO @paramID, @paramName;

        WHILE (@@FETCH_STATUS = 0)
        BEGIN
    
            SELECT
                @t = SUBSTRING
                (
                    @definition,
                    CHARINDEX(@paramName, @definition),
                    4000
                ),
                @has_default_value = 0;
            
            SET @loc1 = COALESCE(NULLIF(CHARINDEX('''', @t), 0), 4000);
            SET @loc2 = COALESCE(NULLIF(CHARINDEX(',', @t), 0), 4000);
            SET @loc3 = NULLIF(CHARINDEX('OUTPUT', @t), 0);
            SET @loc4 = NULLIF(CHARINDEX('AS', @t), 0);
            
            SET @loc1 = CASE WHEN @loc2 < @loc1 THEN @loc2 ELSE @loc1 END;
            SET @loc1 = CASE WHEN @loc3 < @loc1 THEN @loc3 ELSE @loc1 END;
            SET @loc1 = CASE WHEN @loc4 < @loc1 THEN @loc4 ELSE @loc1 END;
            
            IF CHARINDEX('=', LTRIM(RTRIM(SUBSTRING(@t, 1, @loc1)))) > 0
                SET @has_default_value = 1;

            INSERT #params
            (
                parameter_id,
                has_default_value
            )
            SELECT
                @paramID,
                @has_default_value;
            
            FETCH NEXT FROM c INTO @paramID, @paramName;
        END
        
        SELECT 
            sp.[object_id],
            [object_name] = @object_name,
            param_name = sp.[name],
            sp.parameter_id,
            type_name = UPPER(st.[name]),
            sp.max_length,
            sp.[precision],
            sp.scale,
            sp.is_output,
            p.has_default_value
        FROM
            sys.parameters sp
			INNER JOIN #params p ON sp.parameter_id = p.parameter_id
			INNER JOIN sys.types st ON sp.user_type_id = st.user_type_id
        WHERE
            sp.[object_id] = @object_id;
        
        CLOSE c;
        DEALLOCATE c;
        DROP TABLE #params;
    END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sys_GetParameters].[@object_name]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sys_GetParameters].[#params]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sys_GetParameters].[#params].[parameter_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[sys_GetParameters].[#params].[has_default_value]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[sys_GetParameters].[#params].[parameter_id]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[sys_GetParameters].[#params].[has_default_value]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[sys_GetParameters].[#params]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sys_GetParameters].[#params].[parameter_id]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[sys_GetParameters].[#params].[has_default_value]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[sys_GetParameters].[@object_name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="511" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2973" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE dbo.sys_GetParameters&#xD;&#xA;    @object_name NVARCHAR(511)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlScalarFunction" Name="[dbo].[ufn_get_default_path]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[ufn_get_default_path].[@value_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ufn_get_default_path].[@log]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ufn_get_default_path]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[ 
  BEGIN 
    DECLARE @instance_name nvarchar(200)
          , @system_instance_name nvarchar(200)
          , @registry_key nvarchar(512)
          , @path nvarchar(260); 
    SET @instance_name = COALESCE(convert(nvarchar(20), serverproperty('InstanceName')), 'MSSQLSERVER'); -- sql 2005/2008 with instance 
    EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\Microsoft SQL Server\Instance Names\SQL', @instance_name, @system_instance_name output; 
    
    SET @registry_key = N'Software\Microsoft\Microsoft SQL Server\' + @system_instance_name + '\MSSQLServer'; 
	IF @value_name = N'DefaultData' 
	BEGIN
		IF @log = 1 
		  BEGIN 
			SET @value_name = N'DefaultLog'; 
		  END 
    
		EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE', @registry_key, @value_name, @path output; 
    
		IF @log = 0 AND @path is null -- sql 2005/2008 default instance 
		  BEGIN 
			SET @registry_key = N'Software\Microsoft\Microsoft SQL Server\' + @system_instance_name + '\Setup'; 
			EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE', @registry_key, N'SQLDataRoot', @path output; 
			SET @path = @path + '\Data'; 
		  END 
    
		IF @path IS NULL -- sql 2000 with instance 
		  BEGIN 
			SET @registry_key = N'Software\Microsoft\Microsoft SQL Server\' + @instance_name + '\MSSQLServer'; 
			EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE', @registry_key, @value_name, @path output; 
		  END 
      
		IF @path IS NULL -- sql 2000 default instance 
		  BEGIN 
			SET @registry_key = N'Software\Microsoft\MSSQLServer\MSSQLServer'; 
			EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE', @registry_key, @value_name, @path output; 
		  END 
      
		IF @log = 1 AND @path is null -- sql 2005/2008 default instance 
		  BEGIN 
			SELECT @path = dbo.ufn_get_default_path(0,@value_name) 
		  END 
    
	END
	ELSE
	BEGIN
		SET @registry_key = N'Software\Microsoft\Microsoft SQL Server\' + @instance_name + '\MSSQLServer'; 
		EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE', @registry_key, @value_name, @path output; 		
	END
    RETURN @path; 
  END]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="2208" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="CREATE FUNCTION dbo.[ufn_get_default_path](@log bit, @value_name nvarchar(20)) &#xD;&#xA;  RETURNS nvarchar(260) &#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_get_default_path].[@log]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_get_default_path].[@value_name]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="20" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="Length" Value="260" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlAggregate" Name="[dbo].[ufn_Util_clr_Conc]">
			<Property Name="Format" Value="2" />
			<Property Name="IsInvariantToNulls" Value="True" />
			<Property Name="IsNullIfEmpty" Value="True" />
			<Property Name="MaxByteSize" Value="-1" />
			<Property Name="ClassName" Value="Customs_Util.Conc" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[Customs_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_Conc].[@value]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="ReturnType">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlAggregate" Name="[dbo].[ufn_Util_clr_ConcToVarbinary]">
			<Property Name="Format" Value="2" />
			<Property Name="IsInvariantToNulls" Value="True" />
			<Property Name="IsNullIfEmpty" Value="True" />
			<Property Name="MaxByteSize" Value="-1" />
			<Property Name="ClassName" Value="Customs_Util.ConcToVarbinary" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[Customs_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_ConcToVarbinary].[@value]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="ReturnType">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[varbinary]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[dbo].[ufn_Util_clr_Format]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="Format" />
						<Property Name="ClassName" Value="Customs_Util.UserDefinedFunctions" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[Customs_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_Format].[@Str]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_Format].[@ArgsCSV]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="Length" Value="4000" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[dbo].[ufn_Util_clr_RegexIsMatch]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="MethodName" Value="RegexIsMatch" />
						<Property Name="ClassName" Value="Customs_Util.UserDefinedFunctions" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[Customs_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_RegexIsMatch].[@Str]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_RegexIsMatch].[@pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[bit]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[dbo].[ufn_Util_clr_RegexReplace]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="MethodName" Value="RegexReplace" />
						<Property Name="ClassName" Value="Customs_Util.UserDefinedFunctions" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[Customs_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_RegexReplace].[@Str]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_RegexReplace].[@Pattern]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_RegexReplace].[@Replacement]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_RegexReplace].[@IsCS]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[nvarchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlMultiStatementTableValuedFunction" Name="[dbo].[ufn_Util_clr_Split]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[ufn_Util_clr_Split].[Data]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="IsDeterministic" Value="True" />
						<Property Name="IsPrecise" Value="True" />
						<Property Name="FillRowMethodName" Value="Split_FillRow" />
						<Property Name="MethodName" Value="Split" />
						<Property Name="ClassName" Value="Customs_Util.UserDefinedFunctions" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[Customs_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_Split].[@Data]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlMultiStatementTableValuedFunction" Name="[dbo].[ufn_Util_clr_SplitStr]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[ufn_Util_clr_SplitStr].[Data]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlClrFunctionImplementation">
						<Property Name="FillRowMethodName" Value="SplitStr_FillRow" />
						<Property Name="MethodName" Value="SplitStr" />
						<Property Name="ClassName" Value="Customs_Util.UserDefinedFunctions" />
						<Relationship Name="Assembly">
							<Entry>
								<References Name="[Customs_Util]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_SplitStr].[@Str]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_clr_SplitStr].[@Separator]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[dbo].[ufn_Util_ConvertIntToDateTime]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ufn_Util_ConvertIntToDateTime].[@id]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ufn_Util_ConvertIntToDateTime].[@it]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN

    DECLARE @vt char(6), @d char(8), @dt datetime
    SELECT @d = convert(varchar, @id)
	SET @vt = convert(CHAR,@it)

    WHILE (len(@vt) < 6)
	BEGIN
		IF len(@vt) = 5 SET @vt = '0' + convert(char,@vt)
		ELSE
			SET @vt = RTRIM(@vt) + '0';
	END	

    SELECT @dt = left (@d,4) + '-' + substring(@d,5,2) + '-' + right(@d,2) + ' ' + left(@vt,2) + ':' + substring(@vt, 3,2)

    RETURN (@dt)
END]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="2" />
							<Property Name="Length" Value="511" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;CREATE FUNCTION [dbo].[ufn_Util_ConvertIntToDateTime](@id int, @it int)&#xD;&#xA;RETURNS datetime&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_ConvertIntToDateTime].[@id]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[ufn_Util_ConvertIntToDateTime].[@it]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[datetime]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_BackupDB]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;
	
    DECLARE @ExecSQL NVARCHAR(MAX) ='';
	DECLARE @BackupPath NVARCHAR(1000) ='';
	SELECT @BackupPath = IIF(@Path = '','N''J:\TempBackup\' + @DBName +'\' + @DBName +'.bak''','N''' + @Path +'\' + @DBName +'.bak''');

	DECLARE @Command nvarchar(256);
	DECLARE @FileExists int;
	SET @Command = 'del ' + @BackupPath;
	EXEC master..xp_FileExist @BackupPath, @FileExists OUT;
	IF @FileExists = 1
		EXEC master..xp_cmdShell @Command;

	IF RIGHT(@Path,1) = '\'
		SELECT @Path = LEFT(@Path,LEN(@Path)-1);

	SELECT @ExecSQL = N'BACKUP DATABASE ' + QUOTENAME(@DBName) +' TO  
DISK = ' + @BackupPath + '
WITH  ' + IIF(@COPY_ONLY = 1,'COPY_ONLY,','') +' NOFORMAT, INIT, SKIP, NOREWIND, NOUNLOAD, ' + IIF(@COMPRESSION = 1,'COMPRESSION,','') + ' STATS = 10;';

	IF @debug = 1
		EXEC dbo.PrintMax @ExecSQL;
	ELSE
		EXEC master.sys.sp_executesql @ExecSQL;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_BackupDB].[@Path]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_BackupDB].[@DBName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_BackupDB].[@COPY_ONLY]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_BackupDB].[@COMPRESSION]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_BackupDB].[@debug]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_BackupDB].[@DBName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_BackupDB].[@Path]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1024" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_BackupDB].[@COPY_ONLY]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_BackupDB].[@COMPRESSION]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_BackupDB].[@debug]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="264" />
				<Property Name="Length" Value="1312" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 25/02/2016&#xD;&#xA;-- Update date: 30/03/2017 Sharon remuve file before execute&#xD;&#xA;-- Description:&#x9;Backup file to server location&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_BackupDB]&#xD;&#xA;    @DBName SYSNAME,&#xD;&#xA;&#x9;@Path VARCHAR(1024) = '',&#xD;&#xA;&#x9;@COPY_ONLY BIT = 1,&#xD;&#xA;&#x9;@COMPRESSION BIT = 1,&#xD;&#xA;&#x9;@debug bit = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_clr_GetServerPrincipals]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="usp_clr_GetServerPrincipals" />
			<Property Name="ClassName" Value="CLR_Util.StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[CLR_Util]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_clr_GetServerPrincipals].[@ServerName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_clr_GetServerPrincipals].[@LoginName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_clr_GetServerPrincipals].[@Password]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_clr_GetServerPrincipals].[@InnerCLRError]">
						<Property Name="IsOutput" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="2048" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_clr_Util_GetErrorEvent]">
			<Property Name="IsAnsiNullsOn" />
			<Property Name="IsQuotedIdentifierOn" />
			<Property Name="MethodName" Value="usp_clr_Util_GetErrorEvent" />
			<Property Name="ClassName" Value="StoredProcedures" />
			<Relationship Name="Assembly">
				<Entry>
					<References Name="[clrEventViewer]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_clr_Util_GetErrorEvent].[@DateFrom]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_clr_Util_GetErrorEvent].[@DateTo]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_clr_Util_GetErrorEvent].[@ErrorLevel]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="11" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteDB]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;
    DECLARE 
        @CRLF VARCHAR(100)= '
',
        @ExecSQL NVARCHAR(MAX)= '',
		@Print NVARCHAR(2048);


	IF NOT EXISTS(select TOP 1 1 from sys.databases where [name] = @DatabaseName)
	BEGIN
	    SET @Print = 'No DB - ' + @DatabaseName + ' has been found on this server.';
		RAISERROR(@Print,10,1) WITH NOWAIT;
		RETURN -1;
	END

	IF @Exec = 1
	BEGIN
		SET @Print = 'Killing active connections to the "' + @DatabaseName + '" database';
		RAISERROR(@Print,10,1) WITH NOWAIT;

		-- Create the sql to kill the active database connections
		SET @ExecSQL = ''
		SELECT   @ExecSQL = @ExecSQL + 'kill ' + CONVERT(CHAR(10), spid) + ' '
		FROM     master.dbo.sysprocesses
		WHERE    DB_NAME(dbid) = @DatabaseName AND DBID <> 0 AND spid <> @@spid

		EXEC (@ExecSQL);
	END

    SELECT	@ExecSQL = 'DROP DATABASE ' + QUOTENAME([name]) + ';' + @CRLF
	FROM	sys.databases 
	WHERE	[name] = @DatabaseName	
			AND [state] = 0;

	IF @Exec = 1
	BEGIN
		BEGIN TRY
			EXEC master.sys.sp_executesql @ExecSQL
			SET @Print = 'Finish Seccessfuly!';
			RAISERROR(@Print,10,1) WITH NOWAIT;
		END TRY
		BEGIN CATCH
			THROW;
		END CATCH
	END
	ELSE
	BEGIN
		PRINT '---------------------------'
		EXEC [dbo].[PrintMax] @ExecSQL
		PRINT '---------------------------'
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_DeleteDB].[@DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteDB].[@Exec]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteDB].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteDB].[@Exec]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="187" />
				<Property Name="Length" Value="1597" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 13/01/2016&#xD;&#xA;-- Description:&#x9;Remove Database&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_DeleteDB]&#xD;&#xA;    @DatabaseName SYSNAME,&#xD;&#xA;&#x9;@Exec BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteOldBackupFiles]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;

	DECLARE @DeleteDate NVARCHAR(50);
	DECLARE @DeleteDateTime DATETIME;
	DECLARE @FullPath VARCHAR(4000);
	DECLARE @PowerShell VARCHAR(4000);
	DECLARE @Print VARCHAR(4000);
	DECLARE @Error VARCHAR(2048);

	SET @DeleteDateTime = DateAdd(DAY, - @DaysToDelete, GetDate());
	SELECT @DeleteDate = Replace(CONVERT(NVARCHAR(25), @DeleteDateTime, 111), '/', '-') + 'T' + CONVERT(NVARCHAR(25), @DeleteDateTime, 108);
	
	CREATE TABLE #dirtree (ID int IDentity(1,1),Subdirectory VARCHAR(512), Depth INT, ParentID INT);
	INSERT INTO #dirtree (Subdirectory, Depth)
	EXEC xp_dirtree @BackupFolderLocation;
	UPDATE #dirtree
	SET ParentID = (SELECT MAX(ID) FROM #dirtree WHERE Depth = T1.Depth - 1 AND ID < T1.ID)
	FROM #dirtree T1;

	IF EXISTS (SELECT TOP 1 1 FROM #dirtree WHERE Subdirectory = '$RECYCLE.BIN')
	BEGIN 
		;WITH cteDelete AS (
			SELECT	ID
			FROM	#dirtree WHERE Subdirectory = '$RECYCLE.BIN'
			UNION ALL
			SELECT	E.ID
			FROM	#dirtree E
					INNER JOIN cteDelete C ON C.ID = E.ParentID
		)DELETE FROM #dirtree WHERE ID IN (SELECT ID FROM cteDelete);

	END

	;WITH CTE
	AS
	(
		SELECT
			t.ID,
			CAST(t.Subdirectory + '\' AS VARCHAR(MAX)) Subdirectory,
			t.Depth
		FROM
			#dirtree AS t
		WHERE
			Depth = 1
		UNION ALL
		SELECT
			t.ID,
			CAST(CTE.Subdirectory + t.Subdirectory+'\' AS VARCHAR(MAX)),
			t.Depth
		FROM
			#dirtree AS t
			JOIN CTE
				ON CTE.ID=t.parentID
		)
		SELECT ID,@BackupFolderLocation + CTE.Subdirectory AS [FullPath] 
		INTO #DirSubFolder
		FROM CTE ORDER BY ID ASC

	DROP TABLE #dirtree;
	DECLARE curDir CURSOR LOCAL FAST_FORWARD FOR
	SELECT [FullPath] FROM #DirSubFolder ORDER BY ID ASC;
	
	OPEN curDir
	FETCH NEXT FROM curDir INTO @FullPath;

	WHILE @@FETCH_STATUS = 0
	BEGIN
		BEGIN TRY
			SET @Print = 'Delete ' + @FullPath + '*.' + @FilesSuffix + ' older than ' + @DeleteDate;
			RAISERROR (@Print, 10, 1) WITH NOWAIT;
			EXECUTE master.dbo.xp_delete_file 0,
				@FullPath,
				@FilesSuffix,
				@DeleteDate,
				1;
		END TRY
		BEGIN CATCH
			SET @Error = ERROR_MESSAGE();
			RAISERROR (@Print, 16, 1) WITH NOWAIT;
			RETURN -1;
		END CATCH
		SET @PowerShell = 'PowerShell.exe -noprofile -command "Get-ChildItem ''' + @FullPath + ''' -recurse | Where {$_.PSIsContainer -and @(Get-ChildItem -LiteralPath:$_.fullname).Count -eq 0} |remove-item"'; 
		EXEC xp_cmdshell @PowerShell,no_output;
		FETCH NEXT FROM curDir INTO @FullPath;
	END

	CLOSE curDir;
	DEALLOCATE curDir;

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[@DaysToDelete]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Subdirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Depth]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[@BackupFolderLocation]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ParentID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Depth]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Depth]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Subdirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[CTE1].[cteDelete].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ParentID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Subdirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Depth]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[CTE2].[CTE].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ParentID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[CTE2].[CTE].[Subdirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Subdirectory]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Depth]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#DirSubFolder]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#DirSubFolder].[FullPath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[#DirSubFolder].[ID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFiles].[@FilesSuffix]" />
				</Entry>
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Subdirectory]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="512" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Depth]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ParentID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_DeleteOldBackupFiles].[CTE1].[cteDelete]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[CTE1].[cteDelete].[ID]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_DeleteOldBackupFiles].[CTE2].[CTE]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[CTE2].[CTE].[ID]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[CTE2].[CTE].[Subdirectory]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[CTE2].[CTE].[Depth]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[Depth]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_DeleteOldBackupFiles].[#DirSubFolder]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[#DirSubFolder].[ID]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[dbo].[usp_DeleteOldBackupFiles].[#dirtree].[ID]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_DeleteOldBackupFiles].[#DirSubFolder].[FullPath]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteOldBackupFiles].[@BackupFolderLocation]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteOldBackupFiles].[@FilesSuffix]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['bak']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="3" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteOldBackupFiles].[@DaysToDelete]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[30]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="902" />
				<Property Name="Length" Value="3585" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;--============================&#xD;&#xA;-- xp_delete_file information&#xD;&#xA;--============================&#xD;&#xA;-- xp_delete_file actually checks the file header to see what type of file it is and will only delete certain types such&#xD;&#xA;-- as database and log backups. I suppose they expanded this to certain types of log files as well but as you say this is&#xD;&#xA;-- not documented by MS. Just be aware that it will not delete just any file type&#xD;&#xA;&#xD;&#xA;-- First argument is: &#xD;&#xA;-- 0 - specifies a backup file&#xD;&#xA;-- 1 - specifies a report file &#xD;&#xA;-- (I'm not sure what the difference between a &quot;backup file&quot; and a &quot;report file&quot; is, since you specify the extension of files&#xD;&#xA;-- you're deleting with the third argument.)&#xD;&#xA;--&#xD;&#xA;-- Fifth argument is whether to delete recursively. &#xD;&#xA;-- 0 - don't delete recursively (default)&#xD;&#xA;-- 1 - delete files in sub directories&#xD;&#xA;--====================================================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_DeleteOldBackupFiles] &#xD;&#xA;&#x9;@BackupFolderLocation VARCHAR(4000),&#xD;&#xA;&#x9;@FilesSuffix VARCHAR(3) = 'bak',&#xD;&#xA;&#x9;@DaysToDelete SMALLINT = 30&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteOldBackupFilesByCMD]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
 DECLARE @delCommand VARCHAR(400)

 IF UPPER (@FilesSuffix) IN ('BAK','TRN') 
 BEGIN
  SET @delCommand = CONCAT('FORFILES /p ' ,
    @BackupFolderLocation,
    ' /s /m '  ,
    '*.'   , 
    @FilesSuffix ,
    ' /d '  ,
    '-'   , 
    ltrim(Str(@DaysToDelete)),
    ' /c ' ,
    '"'  ,
    'CMD /C del /Q /F @FILE',
    '"')

  PRINT @delCommand
  EXEC sys.xp_cmdshell @delCommand
 END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFilesByCMD].[@FilesSuffix]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFilesByCMD].[@BackupFolderLocation]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteOldBackupFilesByCMD].[@DaysToDelete]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteOldBackupFilesByCMD].[@BackupFolderLocation]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteOldBackupFilesByCMD].[@FilesSuffix]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['bak']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="3" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteOldBackupFilesByCMD].[@DaysToDelete]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[30]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="573" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE usp_DeleteOldBackupFilesByCMD&#xD;&#xA;&#x9;@BackupFolderLocation VARCHAR(MAX),&#xD;&#xA;&#x9;@FilesSuffix VARCHAR(3) = 'bak',&#xD;&#xA;&#x9;@DaysToDelete SMALLINT = 30&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DuplicateDB]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;

    IF NOT EXISTS(SELECT TOP 1 1
	FROM	sys.databases d
	WHERE	d.name = @DatabaseNameFrom)
	BEGIN
		RAISERROR('@DatabaseNameFrom Does not Exists in this Server!',16,1);
		RETURN -1;
	END
	IF @DatabaseNameFrom = @DatabaseNameTo
	BEGIN
		RAISERROR('@DatabaseNameFrom Can not be same as @DatabaseNameTo!',16,1);
		RETURN -1;
	END
	IF @DatabaseNameFrom IS NULL OR  @DatabaseNameTo IS NULL
	BEGIN
		RAISERROR('@DatabaseNameFrom or @DatabaseNameTo Can Not be NULL!',16,1);
		RETURN -1;
	END

	DECLARE @sql nvarchar(max)
	DECLARE @Path nvarchar(1000);

	SET @Path = N'F:\Temp\' + @DatabaseNameFrom + N'.bak';


	BACKUP DATABASE @DatabaseNameFrom TO  DISK = @Path 
	WITH  COPY_ONLY, NOFORMAT, INIT,  SKIP, NOREWIND, NOUNLOAD, COMPRESSION,  
	STATS = 10


	CREATE TABLE #BackupFiles
	(LogicalName varchar(255),
	PhysicalName varchar(255),
	Type char(1),
	FileGroupName varchar(50),
	Size bigint,
	MaxSize bigint,
	FileId int,
	CreateLSN numeric(30,2),
	DropLSN numeric(30,2),
	UniqueId uniqueidentifier,
	ReadOnlyLSN numeric(30,2),
	ReadWriteLSN numeric(30,2),
	BackupSizeInBytes bigint,
	SourceBlockSize int,
	FileGroupId int,
	LogGroupGUID uniqueidentifier,
	DifferentialBaseLSN numeric(30,2),
	DifferentialBaseGUID uniqueidentifier,
	IsReadOnly int,
	IsPresent int,
	TDEThumbprint varchar(10))
 
	-- Execute above created SP to get the RESTORE FILELISTONLY output into a table
	 insert into #BackupFiles
	EXEC('RESTORE FileListOnly FROM DISK = '''+ @Path +'''') 
 
	-- Build the T-SQL RESTORE statement
	set @sql = 'RESTORE DATABASE ' + QUOTENAME(@DatabaseNameTo) + char(13) + 'FROM DISK = ''' + @Path +  ''' WITH STATS = 1, '
 
	select @sql += char(13) + 'MOVE ''' + LogicalName + ''' TO ''' + REPLACE(PhysicalName,LogicalName + '.' + RIGHT(PhysicalName,CHARINDEX('\',PhysicalName)),'') + REPLACE(LogicalName,@DatabaseNameFrom,@DatabaseNameTo) + '.' + RIGHT(PhysicalName,CHARINDEX('\',PhysicalName)) + ''','
	from #BackupFiles
	where IsPresent = 1
 
	set @sql += --SUBSTRING(@sql,1,LEN(@sql)-1) + 
'
NOUNLOAD,  REPLACE,  STATS = 5;'
 
-- Get the RESTORE DATABASE command
DECLARE @kill varchar(8000) = '';
SELECT	@kill = @kill + 'kill ' + CONVERT(varchar(5), spid) + ';'
FROM	master..sysprocesses 
WHERE	dbid = db_id(@DatabaseNameTo)

EXEC(@kill);
exec sp_executesql @sql
DROP TABLE #BackupFiles

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_DuplicateDB].[@DatabaseNameFrom]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DuplicateDB].[@DatabaseNameTo]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DuplicateDB].[#BackupFiles]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[LogicalName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[PhysicalName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[IsPresent]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_DuplicateDB].[#BackupFiles]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[LogicalName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[PhysicalName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[Type]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[char]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[FileGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="50" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[Size]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[MaxSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[FileId]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[CreateLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="2" />
												<Property Name="Precision" Value="30" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[DropLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="2" />
												<Property Name="Precision" Value="30" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[UniqueId]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[ReadOnlyLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="2" />
												<Property Name="Precision" Value="30" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[ReadWriteLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="2" />
												<Property Name="Precision" Value="30" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[BackupSizeInBytes]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[SourceBlockSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[FileGroupId]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[LogGroupGUID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[DifferentialBaseLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="2" />
												<Property Name="Precision" Value="30" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[DifferentialBaseGUID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[IsReadOnly]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[IsPresent]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_DuplicateDB].[#BackupFiles].[TDEThumbprint]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="10" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DuplicateDB].[@DatabaseNameFrom]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['OP_STG']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DuplicateDB].[@DatabaseNameTo]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['OP_STG_RENAME']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="181" />
				<Property Name="Length" Value="2712" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 10/05/16&#xD;&#xA;-- Description:&#x9;DuplicateDB&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_DuplicateDB]&#xD;&#xA;    @DatabaseNameFrom SYSNAME = 'OP_STG',&#xD;&#xA;&#x9;@DatabaseNameTo SYSNAME = 'OP_STG_RENAME'&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_FindObject]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;

    IF @Text IS NULL 
		RAISERROR ('Insert text to look for!',16,1);
	
	DECLARE @cmd NVARCHAR(max) = N'';

	IF IIF(@Table IS NULL,0,@Table) + IIF(@Column IS NULL,0,@Column) +IIF(@View IS NULL,0,@View) +IIF(@Function IS NULL,0,@Function) 
	+IIF(@Procedure IS NULL,0,@Procedure) +IIF(@Trigger IS NULL,0,@Trigger) +IIF(@Constreint IS NULL,0,@Constreint)  > 0
	BEGIN
	    IF NOT EXISTS (SELECT TOP 1 1 FROM sys.databases WHERE name = @DatabaseName)
		BEGIN
			RAISERROR ('Insert valid DB name',16,1);
			RETURN -1;
		END
		ELSE
		BEGIN
		    
	

	CREATE TABLE #Result ([Object Schema] sysname NULL,
						  [Object Name] sysname NULL,
						  [Object Type] sysname NULL,
						  [TEXT Location] NVARCHAR(max) NULL,
						  [Position] NVARCHAR(1000));
	
	-- Table names
	IF @Table = 1
	BEGIN
		SET @cmd = CONCAT(N'INSERT #Result
SELECT TABLE_SCHEMA  AS [Object Schema]
		,TABLE_NAME    AS [Object Name]
		,TABLE_TYPE    AS [Object Type]
		,''Table Name''  AS [TEXT Location]
		,NULL
FROM  ',@DatabaseName,'.INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME LIKE ''%''+@Text+''%''')
		EXEC sp_executesql @cmd ,N'@Text nvarchar(4000)',@Text = @Text
	END

	--Column names| computed_columns
	IF @Column = 1
	BEGIN
		SET @cmd = CONCAT(N'INSERT #Result
SELECT	TABLE_SCHEMA   AS [Object Schema]
		,TABLE_NAME   AS [Object Name]
		,''COLUMN''      AS [Object Type]
		,COLUMN_NAME AS [TEXT Location]
		,NULL
FROM  ',@DatabaseName,'.INFORMATION_SCHEMA.COLUMNS
WHERE COLUMN_NAME LIKE ''%''+@Text+''%''
UNION ALL 

SELECT	OBJECT_SCHEMA_NAME(o.object_id,DB_ID(''',@DatabaseName,''')) AS [Object Schema]
		,o.name       AS [Object Name]
		,o.type_desc       AS [Object Type]
		,C.definition AS [TEXT Location]
		,NULL
FROM	',@DatabaseName,'.SYS.computed_columns C
		INNER JOIN ',@DatabaseName,'.sys.objects  o ON C.object_id=o.object_id
WHERE	C.definition Like ''%''+@Text+''%''
')
		EXEC sp_executesql @cmd ,N'@Text nvarchar(4000)',@Text = @Text
	END
	
	--PROCEDURE
	IF @Procedure = 1
	BEGIN
		SET @cmd = CONCAT(N'INSERT #Result
SELECT	OBJECT_SCHEMA_NAME(o.object_id,DB_ID(''',@DatabaseName,''')) AS [Object Schema]
		,o.name       AS [Object Name]
		,''PROCEDURE'' AS [Object Type]
		,m.definition AS [TEXT Location]
		,SUBSTRING(m.definition,PATINDEX(''%''+@Text+''%'',m.definition),100)
FROM	',@DatabaseName,'.sys.sql_modules m 
		INNER JOIN ',@DatabaseName,'.sys.objects  o ON m.object_id=o.object_id
WHERE	m.definition Like ''%''+@Text+''%''
		and o.type = ''P''')
		EXEC sp_executesql @cmd ,N'@Text nvarchar(4000)',@Text = @Text
	END


	-- FUNCTION
	IF @Function = 1
	BEGIN
		SET @cmd = CONCAT(N'INSERT #Result
SELECT	OBJECT_SCHEMA_NAME(o.object_id,DB_ID(''',@DatabaseName,''')) AS [Object Schema]
		,o.name       AS [Object Name]
		,''FUNCTION('' + o.type + '')'' COLLATE SQL_Latin1_General_CP1_CI_AS AS [Object Type]
		,m.definition AS [TEXT Location]
		,SUBSTRING(m.definition,PATINDEX(''%''+@Text+''%'',m.definition),100)
FROM	',@DatabaseName,'.sys.sql_modules m 
		INNER JOIN ',@DatabaseName,'.sys.objects  o ON m.object_id=o.object_id
WHERE	m.definition Like ''%''+@Text+''%''
		and o.type in (''FN'',''AF'',''FS'',''FT'',''IF'',''TF'')')
		EXEC sp_executesql @cmd ,N'@Text nvarchar(4000)',@Text = @Text
	END
	-- Trigger
	IF @Trigger = 1
	BEGIN
		SET @cmd = CONCAT(N'INSERT #Result
SELECT	OBJECT_SCHEMA_NAME(o.object_id,DB_ID(''',@DatabaseName,''')) AS [Object Schema]
		,o.name       AS [Object Name]
		,''FUNCTION('' + o.type + '')'' COLLATE SQL_Latin1_General_CP1_CI_AS AS [Object Type]
		,m.definition AS [TEXT Location]
		,SUBSTRING(m.definition,PATINDEX(''%''+@Text+''%'',m.definition),100)
FROM	',@DatabaseName,'.sys.sql_modules m 
		INNER JOIN ',@DatabaseName,'.sys.objects  o ON m.object_id = o.object_id
WHERE	m.definition Like ''%''+@Text+''%''
		and o.type = ''TR''')
		EXEC sp_executesql @cmd ,N'@Text nvarchar(4000)',@Text = @Text
	END
	--View
	IF @View = 1
	BEGIN
		SET @cmd = CONCAT(N'INSERT #Result
SELECT	OBJECT_SCHEMA_NAME(o.object_id,DB_ID(''',@DatabaseName,''')) AS [Object Schema]
		,o.name       AS [Object Name]
		,o.type_desc COLLATE SQL_Latin1_General_CP1_CI_AS AS [Object Type]
		,m.definition AS [TEXT Location]
		,SUBSTRING(m.definition,PATINDEX(''%''+@Text+''%'',m.definition),100)
FROM	',@DatabaseName,'.sys.sql_modules m 
		INNER JOIN ',@DatabaseName,'.sys.objects  o ON m.object_id = o.object_id
WHERE	m.definition Like ''%''+@Text+''%''
		and o.type = ''v''')
		EXEC sp_executesql @cmd ,N'@Text nvarchar(4000)',@Text = @Text
	END
	
	--default_constraints| check_constraints
	IF @Constreint = 1
	BEGIN
		SET @cmd = CONCAT(N'INSERT #Result
SELECT	OBJECT_SCHEMA_NAME(o.object_id,DB_ID(''',@DatabaseName,''')) AS [Object Schema]
		,o.name       AS [Object Name]
		,o.type_desc       AS [Object Type]
		,D.definition AS [TEXT Location]
		,SUBSTRING(D.definition,PATINDEX(''%''+@Text+''%'',D.definition),100)
FROM	',@DatabaseName,'.SYS.default_constraints D
		INNER JOIN ',@DatabaseName,'.sys.objects  o ON D.object_id = o.object_id
WHERE	D.definition Like ''%''+@Text+''%''
UNION ALL 
SELECT	OBJECT_SCHEMA_NAME(o.object_id,DB_ID(''',@DatabaseName,''')) AS [Object Schema]
		,o.name       AS [Object Name]
		,o.type_desc       AS [Object Type]
		,C.definition AS [TEXT Location]
		,SUBSTRING(D.definition,PATINDEX(''%''+@Text+''%'',D.definition),100)
FROM	',@DatabaseName,'.SYS.check_constraints C
		INNER JOIN ',@DatabaseName,'.sys.objects  o ON C.object_id = o.object_id
WHERE	C.definition Like ''%''+@Text+''%''')
		EXEC sp_executesql @cmd ,N'@Text nvarchar(4000)',@Text = @Text
	END

	SELECT	* 
	FROM	#Result

	DROP TABLE #Result;
	
		END
	END
-- Job
IF @Job = 1
BEGIN
	DECLARE @PreviewTextSize INT = 100

	SELECT  'Job Steps' As SearchType,
			j.[Name] AS [Job Name] ,
			s.Step_Id AS [Step #] ,
			REPLACE(REPLACE(SUBSTRING(s.Command,
										CHARINDEX(@Text, s.Command)
										- @PreviewTextSize / 2, @PreviewTextSize),
							CHAR(13) + CHAR(10), ''), @Text,
					'***' + @Text + '***') AS Command
	FROM    MSDB.dbo.sysJobs j
			INNER JOIN MSDB.dbo.sysJobSteps s ON j.Job_Id = s.Job_Id
	WHERE   s.Command LIKE '%' + @Text + '%';
END
-- SSRS
IF @ReportServer = 1
BEGIN
	IF EXISTS(SELECT TOP 1 1 FROM SYS.databases WHERE name = 'ReportServer')
	BEGIN
	WITH    cte
	          AS (
			  --gets the RDL; note the double convert.
	               SELECT   [path] ,
	                        [name] AS Report_Name ,
	                        CONVERT(XML, CONVERT(VARBINARY(MAX), content)) AS rdl
	               FROM     ReportServer.dbo.catalog
	             )
	    SELECT  LEFT([Path], LEN([path]) - CHARINDEX('/', REVERSE([Path])) + 1) AS Report_Path ,
	            Report_Name ,
	            T1.N.value('@Name', 'nvarchar(128)') AS DataSetName ,
	            T2.N.value('(*:DataSourceName/text())[1]', 'nvarchar(128)') AS DataSourceName ,
	            ISNULL(T2.N.value('(*:CommandType/text())[1]', 'nvarchar(128)'),
	                   'T-SQL') AS CommandType ,
	            T2.N.value('(*:CommandText/text())[1]', 'nvarchar(max)') AS CommandText
		INTO	#SSRS
	    FROM    cte AS T
	            CROSS APPLY T.rdl.nodes('/*:Report/*:DataSets/*:DataSet') AS T1 ( N )
	            CROSS APPLY T1.N.nodes('*:Query') AS T2 ( N )
	    ORDER BY Report_Path ,
	            Report_Name ,
	            DataSetName ,
	            DataSourceName ,
	            CommandType ,
	            CommandText;

		SELECT	* 
		FROM	#SSRS
		WHERE	CommandText LIKE '%' + @Text  + '%';
	END
END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Text]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Table]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Column]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@View]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Function]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Procedure]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Trigger]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Constreint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@DatabaseName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_FindObject].[#Result]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@Job]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_FindObject].[@ReportServer]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varbinary]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_FindObject].[#SSRS]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_FindObject].[#SSRS].[CommandText]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_FindObject].[#Result]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_FindObject].[#Result].[Object Schema]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_FindObject].[#Result].[Object Name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_FindObject].[#Result].[Object Type]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_FindObject].[#Result].[TEXT Location]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_FindObject].[#Result].[Position]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_FindObject].[CTE1].[cte]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[CTE1].[cte].[path]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[CTE1].[cte].[Report_Name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[CTE1].[cte].[rdl]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_FindObject].[#SSRS]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[#SSRS].[Report_Path]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[#SSRS].[Report_Name]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[#SSRS].[DataSetName]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[#SSRS].[DataSourceName]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[#SSRS].[CommandType]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_FindObject].[#SSRS].[CommandText]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Text]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Table]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Column]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@View]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Function]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Procedure]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Trigger]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Constreint]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@Job]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_FindObject].[@ReportServer]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="176" />
				<Property Name="Length" Value="8082" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 12/10/2014&#xD;&#xA;-- Description:&#x9;FindObject&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_FindObject]&#xD;&#xA;&#x9;@Text nvarchar(4000),&#xD;&#xA;&#x9;@DatabaseName sysname,&#xD;&#xA;&#x9;@Table BIT = 1,&#xD;&#xA;&#x9;@Column BIT = 1,&#xD;&#xA;&#x9;@View BIT = 1,&#xD;&#xA;&#x9;@Function BIT = 1,&#xD;&#xA;&#x9;@Procedure BIT = 1,&#xD;&#xA;&#x9;@Trigger BIT = 1,&#xD;&#xA;&#x9;@Constreint BIT = 1,&#xD;&#xA;&#x9;@Job BIT = 0,&#xD;&#xA;&#x9;@ReportServer BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    SET NOCOUNT ON;
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

DECLARE @PrimaryReplica sysname;
DECLARE @Time NVARCHAR(25),
		@showadvanced INT  = 0,
		@cmdshell INT = 0,
		@cmdForShell VARCHAR(8000),
		@PrintNote NVARCHAR(2048),
		@CRLF NVARCHAR(5);
DECLARE @cmdOutput TABLE(line NVARCHAR(255));
SELECT @Time = '_' + FORMAT(GETDATE(),'HHmmss');
SET @CRLF = N'
';
IF (SELECT COUNT(1) FROM master.sys.availability_groups) = 1 AND @AvailabilityGroupName IS NULL
BEGIN
    SELECT	@AvailabilityGroupName = AG.name
    FROM	master.sys.availability_groups AS AG
END

SELECT	@PrimaryReplica = agstates.primary_replica
FROM	master.sys.availability_groups AS AG
		INNER JOIN master.sys.dm_hadr_availability_group_states AS agstates ON AG.group_id = agstates.group_id
WHERE	ag.name = @AvailabilityGroupName;

IF OBJECT_ID('tempdb..#AGScript') IS NOT NULL DROP TABLE #AGScript;
CREATE TABLE #AGScript([ID] [int] NOT NULL IDENTITY(1,1),ServerName sysname NOT NULL,Script NVARCHAR(MAX)NOT NULL,PrintNote NVARCHAR(2048)NULL);


IF EXISTS (SELECT TOP 1 1 FROM	sys.databases WHERE	name = @DatabaseName AND recovery_model !=  1)
BEGIN
	INSERT #AGScript ( ServerName, Script,PrintNote )
	SELECT @PrimaryReplica,CONCAT(N' ALTER DATABASE ',QUOTENAME(@DatabaseName),' SET RECOVERY FULL WITH NO_WAIT;'),CONCAT(@PrimaryReplica,'::Make DB ',@DatabaseName,' recovery to FULL')
END

INSERT #AGScript ( ServerName, Script,PrintNote )
SELECT @PrimaryReplica,CONCAT(N'BACKUP DATABASE ',QUOTENAME(@DatabaseName),' TO  DISK = N''',@SharePath,@DatabaseName,'.bak'' WITH FORMAT, INIT, SKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 5;'),CONCAT(@PrimaryReplica,'::Backup(F) DB ',@DatabaseName)
UNION ALL SELECT @PrimaryReplica,CONCAT(N'ALTER AVAILABILITY GROUP ',QUOTENAME(@AvailabilityGroupName),' ADD DATABASE ',QUOTENAME(@DatabaseName),';'),CONCAT(@PrimaryReplica,'::Add DB ',@DatabaseName,' to Availability Group ',@AvailabilityGroupName)
UNION ALL SELECT @PrimaryReplica,CONCAT(N'BACKUP LOG ',QUOTENAME(@DatabaseName),' TO  DISK = N''',@SharePath,@DatabaseName,@Time,'.trn'' WITH NOFORMAT, NOINIT, NOSKIP, REWIND, NOUNLOAD, COMPRESSION,  STATS = 5;'),CONCAT(@PrimaryReplica,'::Backup(L) DB ',@DatabaseName)
;
--Script for Secondery
INSERT #AGScript ( ServerName, Script,PrintNote )
SELECT	AR.replica_server_name,CONCAT(N'RESTORE DATABASE ',QUOTENAME(@DatabaseName),' FROM  DISK = N''',@SharePath,@DatabaseName,'.bak'' WITH  NORECOVERY,  NOUNLOAD,  STATS = 5;'),CONCAT(AR.replica_server_name,'::Restore(F) DB ',@DatabaseName)
FROM	master.sys.availability_groups AS AG
		LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states AS agstates ON AG.group_id = agstates.group_id
		INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id
WHERE	ag.name = @AvailabilityGroupName
		AND AR.replica_server_name != SERVERPROPERTY('ComputerNamePhysicalNetBIOS')
UNION ALL SELECT	AR.replica_server_name,CONCAT(N'RESTORE LOG ',QUOTENAME(@DatabaseName),' FROM  DISK = N''',@SharePath,@DatabaseName,@Time,'.trn'' WITH  NORECOVERY,  NOUNLOAD,  STATS = 5;'),CONCAT(AR.replica_server_name,'::Restore(L) DB ',@DatabaseName)
FROM	master.sys.availability_groups AS AG
		LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states AS agstates ON AG.group_id = agstates.group_id
		INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id
WHERE	ag.name = @AvailabilityGroupName
		AND AR.replica_server_name != SERVERPROPERTY('ComputerNamePhysicalNetBIOS')
UNION ALL SELECT	AR.replica_server_name,CONCAT(N'PRINT ''Wait for the replica to start communicating''; 
begin try
declare @conn bit; 
declare @count int; 
declare @replica_id uniqueidentifier;
declare @group_id uniqueidentifier; 
set @conn = 0;
set @count = 30; /* wait for 5 minutes */ 

if (serverproperty(''IsHadrEnabled'') = 1)
	and (isnull((select member_state from master.sys.dm_hadr_cluster_members where upper(member_name COLLATE Latin1_General_CI_AS) = upper(cast(serverproperty(''ComputerNamePhysicalNetBIOS'') as nvarchar(256)) COLLATE Latin1_General_CI_AS)), 0) <> 0)
	and (isnull((select state from master.sys.database_mirroring_endpoints), 1) = 0) 
begin 
    select @group_id = ags.group_id from master.sys.availability_groups as ags where name = N''',QUOTENAME(@AvailabilityGroupName),'''; 
	select @replica_id = replicas.replica_id from master.sys.availability_replicas as replicas where upper(replicas.replica_server_name COLLATE Latin1_General_CI_AS) = upper(@@SERVERNAME COLLATE Latin1_General_CI_AS) and group_id = @group_id; 
	while @conn <> 1 and @count > 0 
	begin 
		set @conn = isnull((select connected_state from master.sys.dm_hadr_availability_replica_states as states where states.replica_id = @replica_id), 1); 
		if @conn = 1 
		begin 
			break; 
		end; 
		waitfor delay ''00:00:10''; 
		set @count = @count - 1; 
	end; 
end; 
end try 
begin catch 
	
end catch'),CONCAT(AR.replica_server_name,'::Connect DB ',@DatabaseName)
FROM	master.sys.availability_groups AS AG
		LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states AS agstates ON AG.group_id = agstates.group_id
		INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id
WHERE	ag.name = @AvailabilityGroupName
		AND AR.replica_server_name != SERVERPROPERTY('ComputerNamePhysicalNetBIOS')		
UNION ALL SELECT	AR.replica_server_name,CONCAT(N'ALTER DATABASE ',QUOTENAME(@DatabaseName),' SET HADR AVAILABILITY GROUP = ',QUOTENAME(@AvailabilityGroupName),';'),CONCAT(AR.replica_server_name,'::Join DB ',@DatabaseName)
FROM	master.sys.availability_groups AS AG
		LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states AS agstates ON AG.group_id = agstates.group_id
		INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id
WHERE	ag.name = @AvailabilityGroupName
		AND AR.replica_server_name != SERVERPROPERTY('ComputerNamePhysicalNetBIOS')		
;

IF EXISTS ( SELECT TOP 1 1 FROM master.sys.configurations C WHERE C.name = 'show advanced options' AND C.value = 0 )
BEGIN
	RAISERROR ('Turn on "show advanced options"',0,1) WITH NOWAIT;
	EXEC master.sys.sp_configure 'show advanced options', 1;
	RECONFIGURE WITH OVERRIDE;
	SET @showadvanced = 1;
END
IF EXISTS ( SELECT TOP 1 1 FROM master.sys.configurations C WHERE   C.name = 'xp_cmdshell' AND C.value = 0 )
BEGIN
	RAISERROR ('Turn on "xp_cmdshell"',0,1) WITH NOWAIT;
	EXEC master.sys.sp_configure 'xp_cmdshell', 1;
	RECONFIGURE WITH OVERRIDE;
	SET @cmdshell = 1;
	
END
				
		
		DECLARE cuAG CURSOR LOCAL FAST_FORWARD READ_ONLY FOR 
		SELECT	'sqlcmd -S "' + ServerName + '" -Q "' + REPLACE(Script,'
',' ') +'"' ,PrintNote
		FROM	#AGScript
		ORDER BY ID;
		
		OPEN cuAG
		
		FETCH NEXT FROM cuAG INTO @cmdForShell,@PrintNote;
		
		WHILE @@FETCH_STATUS = 0
		BEGIN
		    DELETE FROM @cmdOutput;
			PRINT '-------------------------------'
			PRINT @PrintNote;
			PRINT @cmdForShell; 
			INSERT @cmdOutput 
			EXEC xp_cmdshell @cmdForShell;

			SET @PrintNote = N'';
			SELECT	@PrintNote += line + @CRLF	
			FROM	@cmdOutput
			WHERE	line IS NOT NULL;
			IF @PrintNote LIKE '%Msg%' 
			BEGIN
				RAISERROR(@PrintNote,16,1);
				GOTO Cleanup;
			END
			ELSE PRINT @PrintNote;
		    FETCH NEXT FROM cuAG INTO @cmdForShell,@PrintNote;
		END
		

Cleanup:
	CLOSE cuAG
	DEALLOCATE cuAG
	DROP TABLE #AGScript;
	IF @cmdshell = 1
    BEGIN
		RAISERROR ('Turn off "xp_cmdshell"',0,1) WITH NOWAIT;
        EXEC master.sys.sp_configure 'xp_cmdshell', 0;
        RECONFIGURE WITH OVERRIDE;
    END;
    IF @showadvanced = 1
    BEGIN
		RAISERROR ('Turn off "show advanced options"',0,1) WITH NOWAIT;
        EXEC master.sys.sp_configure 'show advanced options', 0;
        RECONFIGURE WITH OVERRIDE;
    END;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@AvailabilityGroupName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@DatabaseName]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[ServerName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[Script]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[PrintNote]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@SharePath]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[ID]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@cmdOutput].[line]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@cmdOutput]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@cmdOutput].[line]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[ID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[ServerName]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[Script]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[#AGScript].[PrintNote]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="2048" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@SharePath]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_HADR_AddDB2AvailabilityGroup].[@AvailabilityGroupName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="199" />
				<Property Name="Length" Value="8171" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 24/05/2017&#xD;&#xA;-- Description:&#x9;Add DB 2 Availability Group&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_HADR_AddDB2AvailabilityGroup]&#xD;&#xA;&#x9;@SharePath NVARCHAR(1000),&#xD;&#xA;&#x9;@DatabaseName sysname ,&#xD;&#xA;&#x9;@AvailabilityGroupName sysname = NULL &#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_HADR_RemoveAllDBFromAG]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;
	DECLARE @ExecSQL NVARCHAR(max) = N'USE master;';
	DECLARE @CRLF NVARCHAR(5) = N'
	';
	SELECT  @ExecSQL += CONCAT(@CRLF,'ALTER AVAILABILITY GROUP ',QUOTENAME(AG.name),' REMOVE DATABASE ',QUOTENAME(dbcs.database_name),';')
	FROM    master.sys.availability_groups AS AG
			LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states AS agstates ON AG.group_id = agstates.group_id
			INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id
			INNER JOIN master.sys.dm_hadr_availability_replica_states AS arstates ON AR.replica_id = arstates.replica_id
																  AND arstates.is_local = 1
			INNER JOIN master.sys.dm_hadr_database_replica_cluster_states AS dbcs ON arstates.replica_id = dbcs.replica_id
			LEFT OUTER JOIN master.sys.dm_hadr_database_replica_states AS dbrs ON dbcs.replica_id = dbrs.replica_id
																  AND dbcs.group_database_id = dbrs.group_database_id
	WHERE	AG.name = @AvailabilityGroupName
			AND ISNULL(dbcs.is_database_joined, 0) = 1

	IF @Exec = 1
	BEGIN
		EXEC master.sys.sp_executesql @ExecSQL;
	END
	ELSE
	BEGIN
		PRINT '---------------------------'
		EXEC [dbo].[PrintMax] @ExecSQL;
		PRINT '---------------------------'
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_RemoveAllDBFromAG].[@AvailabilityGroupName]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_RemoveAllDBFromAG].[@Exec]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_HADR_RemoveAllDBFromAG].[@AvailabilityGroupName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Sp10Qa']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_HADR_RemoveAllDBFromAG].[@Exec]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="210" />
				<Property Name="Length" Value="1573" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 13/01/2016&#xD;&#xA;-- Description:&#x9;Restore Backup file to server location&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_HADR_RemoveAllDBFromAG]&#xD;&#xA;&#x9;@AvailabilityGroupName sysname = 'Sp10Qa',&#xD;&#xA;&#x9;@Exec BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_HADR_ReportServerSubscriptionManager]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;
	DECLARE @ExecSQL NVARCHAR(MAX) = N'';
	DECLARE @state BIT = 0;
	DECLARE @ReportServerDB TABLE (DatabaseName sysname);	
	DECLARE @Jobs TABLE (JobName sysname);
	INSERT @ReportServerDB
			EXEC sp_MSforeachdb 'SELECT TOP 1 ''?'' [DatabaseName]
FROM	[?].sys.database_principals DP
WHERE	DP.type = ''R'' AND DP.name = N''RSExecRole''
		AND ''?'' NOT IN (''master'',''msdb'',''ReportServerTempDB'')
		AND ''?'' NOT LIKE ''%TempDB''
OPTION  ( RECOMPILE );';

	DECLARE @DatabaseName sysname;

	DECLARE cuReportServerJobs CURSOR LOCAL FAST_FORWARD READ_ONLY FOR SELECT DatabaseName FROM @ReportServerDB

	OPEN cuReportServerJobs

	FETCH NEXT FROM cuReportServerJobs INTO @DatabaseName

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @state = 0;
		SET @ExecSQL = N'';
		IF EXISTS ( SELECT	TOP 1 1
					FROM    master.sys.availability_groups g
							INNER JOIN master.sys.dm_hadr_availability_replica_states r ON g.group_id = r.group_id
							INNER JOIN master.sys.dm_hadr_database_replica_states rs ON g.group_id = rs.group_id
							INNER JOIN master.sys.databases d ON d.database_id = rs.database_id
					WHERE   d.name = @DatabaseName
							AND rs.is_local = 1
							AND r.role = 1 ) 
			SET @state = 1;



		DELETE FROM @Jobs;
		SET @ExecSQL = N'SELECT  RS.ScheduleID
FROM    ' + QUOTENAME(@DatabaseName) + '.dbo.Subscriptions AS SUB
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.Users AS USR ON SUB.OwnerID = USR.UserID
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.[Catalog] AS CAT ON SUB.Report_OID = CAT.ItemID
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.ReportSchedule AS RS ON SUB.Report_OID = RS.ReportID
                                               AND SUB.SubscriptionID = RS.SubscriptionID
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.Schedule AS SCH ON RS.ScheduleID = SCH.ScheduleID
ORDER BY USR.UserName, CAT.[Path];';

		IF @Exec = 1
		BEGIN
			INSERT @Jobs
			EXEC master.sys.sp_executesql @ExecSQL;
		END
		ELSE
		BEGIN
			PRINT '---------------------------'
			EXEC [dbo].[PrintMax] @ExecSQL;
			PRINT CONCAT('@state - ',@state);
			PRINT '---------------------------'
			INSERT @Jobs
			EXEC master.sys.sp_executesql @ExecSQL;
		END
		SET @ExecSQL =	N'DECLARE @Print NVARCHAR(4000);
';
		SELECT  @ExecSQL += CONCAT(N'IF NOT EXISTS (SELECT TOP 1 1 FROM msdb.dbo.sysjobs WHERE name = N''',j.name, ''' AND enabled = ',@state,')
BEGIN
		EXEC msdb.dbo.sp_update_job @job_name = N''',j.name,''', @enabled = ',@state,';
		SET @Print = ''Job - ',j.name, ' Has been ' , IIF(@state = 1,'enabled','disabled') , ''';
		PRINT @Print;
END',CHAR(13)) 
		FROM    msdb.dbo.sysjobs AS j
				INNER JOIN msdb.dbo.syscategories AS c ON j.category_id = c.category_id
		WHERE   j.name IN (SELECT JobName FROM @Jobs)
				AND j.enabled = ~@state;
		
  		IF @Exec = 1
		BEGIN
			EXEC master.sys.sp_executesql @ExecSQL;
		END
		ELSE
		BEGIN
			PRINT '---------------------------'
			EXEC [dbo].[PrintMax] @ExecSQL;
			PRINT '---------------------------'
		END
		FETCH NEXT FROM cuReportServerJobs INTO @DatabaseName;
	END

	CLOSE cuReportServerJobs;
	DEALLOCATE cuReportServerJobs;

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@ReportServerDB].[DatabaseName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@Exec]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@Jobs].[JobName]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@ReportServerDB]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@ReportServerDB].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@Jobs]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@Jobs].[JobName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_HADR_ReportServerSubscriptionManager].[@Exec]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="210" />
				<Property Name="Length" Value="3525" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 13/01/2016&#xD;&#xA;-- Description:&#x9;Restore Backup file to server location&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_HADR_ReportServerSubscriptionManager]&#xD;&#xA;&#x9;@Exec BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_KillUsersOnDB]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
   
	CREATE TABLE #TmpWho
	(spid INT, ecid INT, status VARCHAR(150), loginame VARCHAR(150),
	hostname VARCHAR(150), blk INT, dbname VARCHAR(150), cmd VARCHAR(150),request_id INT)
	INSERT INTO #TmpWho
	EXEC sp_who;

	DECLARE @spid INT
	DECLARE @tString VARCHAR(15)
	DECLARE @getspid CURSOR --LOCAL FAST_FORWARD
	SET @getspid =   CURSOR FOR
	SELECT spid
	FROM #TmpWho
	WHERE dbname = @DBName OPEN @getspid

	FETCH NEXT FROM @getspid INTO @spid
	WHILE @@FETCH_STATUS = 0
	BEGIN
	SET @tString = 'KILL ' + CAST(@spid AS VARCHAR(5))
		BEGIN TRY
			EXEC(@tString);
		END TRY
		BEGIN CATCH
		END CATCH
		FETCH NEXT FROM @getspid INTO @spid
	END
	CLOSE @getspid
	DEALLOCATE @getspid
	DROP TABLE #TmpWho
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[cursor]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_KillUsersOnDB].[#TmpWho]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[spid]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[dbname]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_KillUsersOnDB].[@DBName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[spid]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[ecid]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="150" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[loginame]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="150" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[hostname]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="150" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[blk]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[dbname]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="150" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[cmd]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="150" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_KillUsersOnDB].[#TmpWho].[request_id]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_KillUsersOnDB].[@DBName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="210" />
				<Property Name="Length" Value="1013" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 13/01/2016&#xD;&#xA;-- Description:&#x9;Restore Backup file to server location&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_KillUsersOnDB]&#xD;&#xA;    @DBName SYSNAME&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_RestoreDB]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
    SET NOCOUNT ON;
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

    DECLARE @CRLF VARCHAR(100)= '
',
        @DBLogFilename NVARCHAR(1500)= N'',
        @DBDataPath NVARCHAR(1500)= N'',
        @DBLogPath NVARCHAR(1500)= N'',
        @ExecSQL NVARCHAR(MAX)= N'',
        @MoveSQL NVARCHAR(MAX)= N'',
        @REPLACE NVARCHAR(50) = N'',
        @v_strTEMP NVARCHAR(1000)= N'',
        @v_strListSQL NVARCHAR(4000)= N'',
        @v_strServerVersion NVARCHAR(20)= N'',
        @DBLogicalname VARCHAR(1000)= '',
        @RemoveAvalibilityGroup NVARCHAR(MAX),
        @AvalibilityGroup sysname,
        @showadvanced INT  = 0,
        @cmdshell INT = 0,
        @cmdForShell VARCHAR(8000);
    DECLARE @cmdOutput TABLE (line NVARCHAR(255));
              

    IF EXISTS ( SELECT TOP 1 1
                FROM    master.sys.databases
                WHERE   name = @DBNameTo )
    BEGIN
        SET @REPLACE = N', REPLACE';
        IF EXISTS ( SELECT TOP 1 1
                    FROM    master.sys.databases
                    WHERE   name = @DBNameTo
                            AND group_database_id IS NOT NULL )
        BEGIN
            SELECT  @RemoveAvalibilityGroup = N'ALTER AVAILABILITY GROUP ['
                    + AG.name + N'] REMOVE DATABASE ' + QUOTENAME(@DBNameTo)
                    + N';' + @CRLF,
                    @AvalibilityGroup = AG.name
            FROM    master.sys.availability_groups AS AG
                    LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states
                    AS agstates ON AG.group_id = agstates.group_id
                    INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id
                    INNER JOIN master.sys.dm_hadr_availability_replica_states
                    AS arstates ON AR.replica_id = arstates.replica_id
                                   AND arstates.is_local = 1
                    INNER JOIN master.sys.dm_hadr_database_replica_cluster_states
                    AS dbcs ON arstates.replica_id = dbcs.replica_id
            WHERE   dbcs.database_name = @DBNameTo;

            SELECT  @cmdForShell = 'sqlcmd -S "' + CN.replica_server_name
                    + '" -D "master" -Q "RESTORE DATABASE ' + @DBNameTo
                    + ' WITH RECOVERY; DROP DATABASE ' + @DBNameTo + ';"'
            FROM    sys.dm_hadr_availability_replica_cluster_nodes CN
            WHERE   @AvalibilityGroup = CN.group_name
                    AND CN.node_name != SERVERPROPERTY('ComputerNamePhysicalNetBIOS');
        END;
    END;
        
    CREATE TABLE #FILE_LIST
        (LogicalName VARCHAR(500),
         PhysicalName VARCHAR(1000),
         Type VARCHAR(1),
         FileGroupName sysname NULL,
         Size DECIMAL(20, 0),
         MaxSize DECIMAL(25, 0),
         FileID BIGINT,
         CreateLSN DECIMAL(25, 0),
         DropLSN DECIMAL(25, 0),
         UniqueID UNIQUEIDENTIFIER,
         ReadOnlyLSN DECIMAL(25, 0),
         ReadWriteLSN DECIMAL(25, 0),
         BackupSizeInBytes DECIMAL(25, 0),
         SourceBlockSize INT,
         filegroupid INT,
         loggroupguid UNIQUEIDENTIFIER,
         differentialbaseLSN DECIMAL(25, 0),
         differentialbaseGUID UNIQUEIDENTIFIER,
         isreadonly BIT,
         ispresent BIT,
         TDEThumbpr DECIMAL(25, 0));
    IF @RestoreDataPath IS NOT NULL
        AND @RestoreLogPath IS NOT NULL
    BEGIN 
        SET @DBDataPath = @RestoreDataPath;
        SET @DBLogPath = @RestoreLogPath;
    END;
    ELSE
    BEGIN
        SELECT TOP 1
                @DBDataPath = LEFT(physical_name,
                                   LEN(physical_name) + 2 - CHARINDEX('\',
                                                              REVERSE(physical_name))
                                   - 1)
        FROM    master.sys.master_files MF
                INNER JOIN master.sys.databases D ON D.database_id = MF.database_id
        WHERE   D.name = @DBNameTo
                AND MF.type = 0; --Data

        SELECT TOP 1
                @DBLogPath = LEFT(physical_name,
                                  LEN(physical_name) + 2 - CHARINDEX('\',
                                                              REVERSE(physical_name))
                                  - 1)
        FROM    master.sys.master_files MF
                INNER JOIN master.sys.databases D ON D.database_id = MF.database_id
        WHERE   D.name = @DBNameTo
                AND MF.type = 1; --Log
    END;
    SELECT  @v_strServerVersion = CAST(SERVERPROPERTY('PRODUCTVERSION') AS NVARCHAR);
       
    BEGIN TRY
        INSERT  #FILE_LIST
                EXEC
                    ('RESTORE FILELISTONLY FROM DISK = ''' + @BackupFilePath
                     + ''''
                    );
    END TRY
    BEGIN CATCH
        THROW;
        GOTO Cleanup;
    END CATCH;

    SELECT  @DBLogFilename = SUBSTRING(PhysicalName,
                                       LEN(PhysicalName) + 2 - CHARINDEX(N'\',
                                                              REVERSE(PhysicalName)),
                                       CHARINDEX(N'\', REVERSE(PhysicalName)))
    FROM    #FILE_LIST
    WHERE   Type = 'L';
       
       
    SELECT  @DBLogicalname = LogicalName
    FROM    #FILE_LIST
    WHERE   FileID = 1;

    IF @DBLogicalname != @DBNameTo
    BEGIN--REPLACE(LogicalName,@DBLogicalname,@DBNameTo)
        SELECT  @MoveSQL += N' MOVE N''' + LogicalName + ''' TO N'''
                + @DBDataPath + REPLACE(SUBSTRING(PhysicalName,
                                                  LEN(PhysicalName) + 2
                                                  - CHARINDEX(N'\',
                                                              REVERSE(PhysicalName)),
                                                  CHARINDEX('\',
                                                            REVERSE(PhysicalName))),
                                        @DBLogicalname, @DBNameTo) + ''',
'
        FROM    #FILE_LIST
        WHERE   Type = 'D';

        SELECT  @MoveSQL += N' MOVE N''' + LogicalName + ''' TO N'''
                + @DBLogPath + REPLACE(SUBSTRING(PhysicalName,
                                                 LEN(PhysicalName) + 2
                                                 - CHARINDEX('\',
                                                             REVERSE(PhysicalName)),
                                                 CHARINDEX('\',
                                                           REVERSE(PhysicalName))),
                                       @DBLogicalname, @DBNameTo) + ''',
'
        FROM    #FILE_LIST
        WHERE   Type = 'L';

        SELECT  @MoveSQL += N' MOVE N''' + LogicalName + ''' TO N'''
                + REPLACE(SUBSTRING(PhysicalName,
                                    LEN(PhysicalName) + 2 - CHARINDEX('\',
                                                              REVERSE(PhysicalName)),
                                    CHARINDEX('\', REVERSE(PhysicalName))),
                          @DBLogicalname, @DBNameTo) + ''',
'
        FROM    #FILE_LIST
        WHERE   Type NOT IN ('D', 'L');
    END;
    ELSE
    BEGIN
        SELECT  @MoveSQL += N' MOVE N''' + LogicalName + ''' TO N'''
                + @DBDataPath + SUBSTRING(PhysicalName,
                                          LEN(PhysicalName) + 2
                                          - CHARINDEX('\',
                                                      REVERSE(PhysicalName)),
                                          CHARINDEX('\', REVERSE(PhysicalName)))
                + ''',
'
        FROM    #FILE_LIST
        WHERE   Type = 'D';
              
        SELECT  @MoveSQL += ' MOVE N''' + LogicalName + ''' TO N'''
                + @DBLogPath + SUBSTRING(PhysicalName,
                                         LEN(PhysicalName) + 2 - CHARINDEX('\',
                                                              REVERSE(PhysicalName)),
                                         CHARINDEX('\', REVERSE(PhysicalName)))
                + ''',
'
        FROM    #FILE_LIST
        WHERE   Type = 'L';

              
        SELECT  @MoveSQL += N' MOVE N''' + LogicalName + ''' TO N'''
                + SUBSTRING(PhysicalName,
                            LEN(PhysicalName) + 2 - CHARINDEX('\',
                                                              REVERSE(PhysicalName)),
                            CHARINDEX('\', REVERSE(PhysicalName))) + ''',
'
        FROM    #FILE_LIST
        WHERE   Type NOT IN ('D', 'L');
    END;
    IF @KillActiveSession = 1
        AND @Exec = 1
    BEGIN
        PRINT 'Killing active connections to the "' + @DBNameTo + '" database';

              -- Create the sql to kill the active database connections
        SET @ExecSQL = '';
        SELECT  @ExecSQL = @ExecSQL + 'kill ' + CONVERT(CHAR(10), spid) + ' '
        FROM    master.dbo.sysprocesses
        WHERE   DB_NAME(dbid) = @DBNameTo
                AND dbid <> 0
                AND spid <> @@SPID;

        EXEC (@ExecSQL);
    END;

    SELECT  @ExecSQL = N'RESTORE DATABASE ' + QUOTENAME(@DBNameTo) + @CRLF
            + N' FROM DISK = ''' + @BackupFilePath + '''' + @CRLF
            + N' WITH FILE = 1,' + @CRLF + @MoveSQL
            + N' NOREWIND, NOUNLOAD, STATS = 5 ' + @REPLACE;
    BEGIN TRY
        IF @Exec = 1
        BEGIN
            IF @RemoveAvalibilityGroup IS NOT NULL
                EXEC master.sys.sp_executesql
                    @RemoveAvalibilityGroup;
            EXEC master.sys.sp_executesql
                @ExecSQL;
            PRINT 'Bazinga! Finish Restoring successfully!';
            SET @ExecSQL = N'EXEC ' + @DBNameTo
                + '.sys.sp_changedbowner ''sa'''; -- fix ownerships problems after transfer
            EXEC master.sys.sp_executesql
                @ExecSQL;
            PRINT 'Update DB owner to sa.';
--                   RESTORE DATABASE $CURSOR$$DBNAME$ WITH RECOVERY;
--DROP DATABASE EposRepository
                     --------------------------------------------------------------------------------------------
            IF @RemoveAvalibilityGroup IS NOT NULL
            BEGIN
                IF EXISTS ( SELECT TOP 1
                                    1
                            FROM    master.sys.configurations C
                            WHERE   C.name = 'show advanced options'
                                    AND C.value = 0 )
                BEGIN
                    RAISERROR ('Turn on "show advanced options"',0,1) WITH NOWAIT;
                    EXEC master.sys.sp_configure
                        'show advanced options',
                        1;
                    RECONFIGURE WITH OVERRIDE;
                    SET @showadvanced = 1;
                END;
                IF EXISTS ( SELECT TOP 1
                                    1
                            FROM    master.sys.configurations C
                            WHERE   C.name = 'xp_cmdshell'
                                    AND C.value = 0 )
                BEGIN
                    RAISERROR ('Turn on "xp_cmdshell"',0,1) WITH NOWAIT;
                    EXEC master.sys.sp_configure
                        'xp_cmdshell',
                        1;
                    RECONFIGURE WITH OVERRIDE;
                    SET @cmdshell = 1;
       
                END;
                INSERT  @cmdOutput
                        EXEC xp_cmdshell
                            @cmdForShell;

                SELECT  *
                FROM    @cmdOutput
                WHERE   line IS NOT NULL;


            END;

        END;
        ELSE
        BEGIN--Print
            IF @RemoveAvalibilityGroup IS NOT NULL
            BEGIN
                PRINT '---------------------------';
                EXEC dbo.PrintMax
                    @RemoveAvalibilityGroup;
            END;
            PRINT '---------------------------';
            EXEC dbo.PrintMax
                @ExecSQL;
            PRINT '---------------------------';
        END;
    END TRY
    BEGIN CATCH
        THROW;
        GOTO Cleanup;
    END CATCH;

    Cleanup:
    DROP TABLE #FILE_LIST;
    IF @cmdshell = 1
    BEGIN
        RAISERROR ('Turn off "xp_cmdshell"',0,1) WITH NOWAIT;
        EXEC master.sys.sp_configure
            'xp_cmdshell',
            0;
        RECONFIGURE WITH OVERRIDE;
    END;
    IF @showadvanced = 1
    BEGIN
        RAISERROR ('Turn off "show advanced options"',0,1) WITH NOWAIT;
        EXEC master.sys.sp_configure
            'show advanced options',
            0;
        RECONFIGURE WITH OVERRIDE;
    END;
END;]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[@DBNameTo]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[@RestoreDataPath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[@RestoreLogPath]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[#FILE_LIST]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[@BackupFilePath]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[PhysicalName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[Type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[LogicalName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[FileID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[@KillActiveSession]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[@Exec]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_RestoreDB].[@cmdOutput].[line]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_RestoreDB].[@cmdOutput]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[@cmdOutput].[line]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_RestoreDB].[#FILE_LIST]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[LogicalName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="500" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[PhysicalName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[Type]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[FileGroupName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[Size]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="20" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[MaxSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[FileID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[CreateLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[DropLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[UniqueID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[ReadOnlyLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[ReadWriteLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[BackupSizeInBytes]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[SourceBlockSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[filegroupid]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[loggroupguid]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[differentialbaseLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[differentialbaseGUID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[isreadonly]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[ispresent]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_RestoreDB].[#FILE_LIST].[TDEThumbpr]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[decimal]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_RestoreDB].[@DBNameTo]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_RestoreDB].[@BackupFilePath]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_RestoreDB].[@KillActiveSession]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_RestoreDB].[@Exec]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_RestoreDB].[@RestoreDataPath]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_RestoreDB].[@RestoreLogPath]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="224" />
				<Property Name="Length" Value="13380" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:           Sharon Rimer&#xD;&#xA;-- Create date: 13/01/2016&#xD;&#xA;-- Description:      Restore Backup file to server location&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE dbo.usp_RestoreDB&#xD;&#xA;    @DBNameTo sysname,&#xD;&#xA;    @BackupFilePath NVARCHAR(1000),&#xD;&#xA;    @KillActiveSession BIT = 0,&#xD;&#xA;    @Exec BIT = 0,&#xD;&#xA;    @RestoreDataPath NVARCHAR(1000) = NULL,&#xD;&#xA;    @RestoreLogPath NVARCHAR(1000) = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_SetOfflineDB]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;
    DECLARE 
        @CRLF VARCHAR(100)= '
',
        @ExecSQL NVARCHAR(MAX)= '',
		@Print NVARCHAR(2048);


	IF NOT EXISTS(select TOP 1 1 from sys.databases where [name] = @DatabaseName)
	BEGIN
	    SET @Print = 'No DB - ' + @DatabaseName + ' has been found on this server.';
		RAISERROR(@Print,10,1) WITH NOWAIT;
		RETURN -1;
	END

	IF @Exec = 1
	BEGIN
		SET @Print = 'Killing active connections to the "' + @DatabaseName + '" database';
		RAISERROR(@Print,10,1) WITH NOWAIT;

		-- Create the sql to kill the active database connections
		SET @ExecSQL = ''
		SELECT   @ExecSQL = @ExecSQL + 'kill ' + CONVERT(CHAR(10), spid) + ' '
		FROM     master.dbo.sysprocesses
		WHERE    DB_NAME(dbid) = @DatabaseName 
				 AND DBID <> 0 
				 AND spid <> @@spid

		EXEC (@ExecSQL);
		
	END
	
	SELECT	@ExecSQL = 'ALTER DATABASE ' + QUOTENAME(name) + ' SET OFFLINE WITH ROLLBACK IMMEDIATE;' 
	FROM	sys.databases
	WHERE	name = @DatabaseName;

	IF @Exec = 1
	BEGIN
		BEGIN TRY
			SET @Print = 'Set "' + @DatabaseName + '" database to offline';
			RAISERROR(@Print,10,1) WITH NOWAIT;
			EXEC master.sys.sp_executesql @ExecSQL
			SET @Print = 'Finish Seccessfuly!';
			RAISERROR(@Print,10,1) WITH NOWAIT;
		END TRY
		BEGIN CATCH
			THROW;
		END CATCH
	END
	ELSE
	BEGIN
		PRINT '---------------------------'
		EXEC [dbo].[PrintMax] @ExecSQL
		PRINT '---------------------------'
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_SetOfflineDB].[@DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetOfflineDB].[@Exec]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_SetOfflineDB].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_SetOfflineDB].[@Exec]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="183" />
				<Property Name="Length" Value="1725" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 13/01/2016&#xD;&#xA;-- Description:&#x9;Set Offline&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_SetOfflineDB]&#xD;&#xA;    @DatabaseName SYSNAME,&#xD;&#xA;&#x9;@Exec BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_SetTempDBFileToSameSize]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

    DECLARE 
        @CRLF NVARCHAR(100)= N'
',
        @ExecSQL NVARCHAR(MAX)= N'',
		@Print NVARCHAR(2048);
		SET @Print = N'Turn trace flage 1117 on!';
	
	IF @Size BETWEEN 100 AND 10000
	BEGIN
		IF OBJECT_ID('tempdb..#TRACESTATUS') IS NOT NULL DROP TABLE #TRACESTATUS;

		CREATE TABLE #TRACESTATUS
		(
		TraceFlag	INT,
		[Status] INT,
			[Global]	INT,
			[Session] INT,
		)
		SELECT @ExecSQL = N'dbcc TRACESTATUS(1117);' 
		INSERT INTO #TRACESTATUS EXEC (@ExecSQL);


		IF LEFT(CONVERT(NVARCHAR(1000),SERVERPROPERTY('ProductVersion')),2) < 13 -- SQL Server 2016
			AND NOT EXISTS (SELECT TOP 1 1 FROM #TRACESTATUS WHERE [Session] = 1 AND [Global] = 1)
		BEGIN
			PRINT @Print;
		END
		SET @ExecSQL += N'
USE [tempdb]
GO
CHECKPOINT;
CHECKPOINT;
CHECKPOINT;
CHECKPOINT;
CHECKPOINT;
CHECKPOINT;
GO
';
		SELECT	@ExecSQL += N'DBCC SHRINKFILE (N''' + [name] + N''' , ' + CONVERT(NVARCHAR(5),@Size) + N');
GO
'
		FROM	sys.master_files
		WHERE	database_id = 2
				AND [type] = 0
				AND [state] = 0;

		IF @Exec = 1
		BEGIN
			BEGIN TRY
				EXECUTE sys.sp_executesql @ExecSQL;
			
				SET @Print = N'';
				--sys.master_files.size(Stored values in pages): pages = MB * 128
				IF EXISTS (SELECT	TOP 1 1
				FROM	sys.master_files
				WHERE	database_id = 2
						AND [type] = 0
						AND [state] = 0
						AND size != @Size * 128)
				BEGIN
					SELECT	@Print += 'File ' + name + ' failed to shrink. Current size is ' + CONVERT(NVARCHAR(5),size/128) + N'MB.
	'
					FROM	sys.master_files
					WHERE	database_id = 2
							AND [type] = 0
							AND [state] = 0
							AND size != @Size * 128;
					PRINT @ExecSQL;
				END
				ELSE
				BEGIN
					SET	@Print = 'All data files in tempdb has been shrunk successfully!';
					PRINT @Print;
				END
			
			END TRY
			BEGIN CATCH
				THROW;
			END CATCH
		END
		ELSE
		BEGIN
			PRINT '---------------------------'
			EXEC [dbo].[PrintMax] @ExecSQL;
			PRINT '---------------------------'
		END
	END
	ELSE
		PRINT '@Size should be between 100MB to 10000MB';
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetTempDBFileToSameSize].[@Size]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS].[Session]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS].[Global]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_SetTempDBFileToSameSize].[@Exec]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS].[TraceFlag]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS].[Status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS].[Global]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_SetTempDBFileToSameSize].[#TRACESTATUS].[Session]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_SetTempDBFileToSameSize].[@Size]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_SetTempDBFileToSameSize].[@Exec]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="216" />
				<Property Name="Length" Value="2480" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 25/04/2017&#xD;&#xA;-- Description:&#x9;Set tempdb data files to be at the same size&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_SetTempDBFileToSameSize]&#xD;&#xA;    @Size SMALLINT,--MB&#xD;&#xA;&#x9;@Exec BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_SSRS_GetSubscriptionList]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN 
	SET NOCOUNT ON;
	DECLARE @ExecSQL NVARCHAR(MAX) = N'';
	DECLARE @state BIT = 0;
	DECLARE @ReportServerDB TABLE (DatabaseName sysname);
	INSERT @ReportServerDB
			EXEC sp_MSforeachdb 'SELECT TOP 1 ''?'' [DatabaseName]
FROM	[?].sys.database_principals DP
WHERE	DP.type = ''R'' AND DP.name = N''RSExecRole''
		AND ''?'' NOT IN (''master'',''msdb'',''ReportServerTempDB'')
		AND ''?'' NOT LIKE ''%TempDB''
OPTION  ( RECOMPILE );';

	DECLARE @DatabaseName sysname;

	DECLARE cuReportServerSSRSSub CURSOR LOCAL FAST_FORWARD READ_ONLY FOR SELECT DatabaseName FROM @ReportServerDB

	OPEN cuReportServerSSRSSub

	FETCH NEXT FROM cuReportServerSSRSSub INTO @DatabaseName

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @ExecSQL = N'SELECT  SUB.SubscriptionID,
		USR.UserName AS SubscriptionOwner ,
        SUB.ModifiedDate ,
        SUB.[Description] ,
        SUB.EventType ,
        SUB.DeliveryExtension ,
        SUB.LastStatus ,
        SUB.LastRunTime ,
        SCH.NextRunTime ,
        SCH.Name AS ScheduleName ,
        CAT.[Path] AS ReportPath ,
        CAT.[Description] AS ReportDescription
FROM    ' + QUOTENAME(@DatabaseName) + '.dbo.Subscriptions AS SUB
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.Users AS USR ON SUB.OwnerID = USR.UserID
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.[Catalog] AS CAT ON SUB.Report_OID = CAT.ItemID
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.ReportSchedule AS RS ON SUB.Report_OID = RS.ReportID
                                               AND SUB.SubscriptionID = RS.SubscriptionID
        INNER JOIN ' + QUOTENAME(@DatabaseName) + '.dbo.Schedule AS SCH ON RS.ScheduleID = SCH.ScheduleID
ORDER BY USR.UserName, CAT.[Path];';

  		IF @Exec = 1
		BEGIN
			EXEC master.sys.sp_executesql @ExecSQL;
		END
		ELSE
		BEGIN
			PRINT '---------------------------'
			EXEC [dbo].[PrintMax] @ExecSQL;
			PRINT '---------------------------'
		END
		FETCH NEXT FROM cuReportServerSSRSSub INTO @DatabaseName;
	END

	CLOSE cuReportServerSSRSSub;
	DEALLOCATE cuReportServerSSRSSub;


END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_SSRS_GetSubscriptionList].[@ReportServerDB].[DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SSRS_GetSubscriptionList].[@Exec]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_SSRS_GetSubscriptionList].[@ReportServerDB]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[usp_SSRS_GetSubscriptionList].[@ReportServerDB].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_SSRS_GetSubscriptionList].[@Exec]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="184" />
				<Property Name="Length" Value="2366" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 13/01/2016&#xD;&#xA;-- Description:&#x9;Get Sub List&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_SSRS_GetSubscriptionList]&#xD;&#xA;&#x9;@Exec BIT = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_WhoIsLocking]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;

	DECLARE @s VARCHAR(MAX)
	----DROP TABLE tempdb.dbo.WhoIsActive;

	IF OBJECT_ID('tempdb.dbo.WhoIsActive') IS NOT NULL
	BEGIN
		DROP TABLE tempdb.dbo.WhoIsActive;
	END
	EXEC [_Admin].dbo.sp_WhoIsActive 
    @find_block_leaders = 1, 
	@output_column_list= '[dd hh:mm:ss.mss],[session_id],[sql_text],[sql_command],[login_name],[wait_info],[tran_log_writes],[CPU],[tempdb_allocations],[tempdb_current],[blocking_session_id],[blocked_session_count],[reads],[writes],[physical_reads],[locks],[used_memory],[status],[tran_start_time],[open_tran_count],[percent_complete],[host_name],[database_name],[program_name],[additional_info],[start_time],[login_time],[request_id],[collection_time]',
    @sort_order = '[blocked_session_count] DESC',
    @format_output = 1, 
    @return_schema = 1, 
    @schema = @s OUTPUT

	SET @s = REPLACE(@s, '<table_name>', 'tempdb.dbo.WhoIsActive')

	EXEC(@s);  

	--TRUNCATE TABLE tempdb.dbo.WhoIsActive;
	BEGIN TRY
	EXEC [_Admin].dbo.sp_WhoIsActive 
		@find_block_leaders = 1, 
		@sort_order = '[blocked_session_count] DESC',
		@format_output = 1, 
		@destination_table = 'tempdb.dbo.WhoIsActive'
	END TRY
	BEGIN CATCH
		PRINT ERROR_MESSAGE()
		RETURN;
	END CATCH

	DECLARE @session_id	 INT;
	DECLARE @kill NVARCHAR(max);
	DECLARE @HTML NVARCHAR(max) = '';
	IF EXISTS (SELECT TOP 1 1 FROM tempdb.dbo.WhoIsActive WHERE blocking_session_id IS NOT NULL AND DATEDIFF(MINUTE,start_time,collection_time) > ISNULL(@LockInMinuts,10))
	BEGIN
		SELECT	TOP 1 
				session_id,login_name,wait_info,[host_name],
				[database_name],
				start_time,
				[dd hh:mm:ss.mss],
				REPLACE(REPLACE(CONVERT(NVARCHAR(max),sql_command),'<?query --',''),'--?>','')[sql_command],
				[Waiting]
		INTO	#Locking
		FROM	tempdb.dbo.WhoIsActive a
				OUTER APPLY(SELECT COUNT(1) [Waiting]FROM tempdb.dbo.WhoIsActive b WHERE b.session_id != a.session_id)ac
		WHERE	blocking_session_id IS NULL AND blocked_session_count > 0 AND DATEDIFF(MINUTE,start_time,collection_time) > ISNULL(@LockInMinuts,10);
		SELECT TOP 1 @session_id = session_id FROM #Locking WHERE [database_name] LIKE 'SP2013[_]PROD[_]SeminarWorks%';
	END

	IF @session_id IS NOT NULL
	BEGIN
	SET @kill = CONCAT('KILL ',@session_id,';');
	PRINT @kill
	EXEC (@kill);

	DECLARE @MailRecipiants NVARCHAR (255);
			DECLARE @copy_recipients NVARCHAR (255);
			SELECT	@MailRecipiants = 'eliza@openu.ac.il;erans@openu.ac.il;zoharbe@openu.ac.il;zohard@openu.ac.il',
					@copy_recipients = 'sharonri@openu.ac.il';
			DECLARE @MailSubject NVARCHAR (255) = N'';
			DECLARE @MailProfile sysname = (SELECT TOP 1 name FROM msdb.dbo.sysmail_profile);
		

			DECLARE @MailTable NVARCHAR (max) = N'';

			SET @MailSubject = N'Blocking Proccess Running on: ' + @@SERVERNAME +' | ' + convert (nvarchar (50), GETDATE(), 100) ;
		
	
	SELECT TOP 1 @HTML = CONCAT('<!DOCTYPE html>
<html>
<body>
<style type="text/css">
table.sample {
	font-family:Calibri;
	font-size:small;
	border-width: 1px;
	border-spacing: 0px;
	border-style: solid;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;}
table.sample th {
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
table.sample td {
	font-family:Calibri;
	font-size:12px;
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
</style>
<font face="Calibri (Body)">
<H1><p style=''font-size:18.0pt;font-family:"Bradley Hand ITC"''>' + @MailSubject + N'</p></H1>
<br/>
<br>Server			- ',@@SERVERNAME,'
<br>session_id		- ',session_id,'
<br>login_name		- ',login_name,'
<br>wait_info		- ',wait_info,'
<br>host_name		- ',[host_name],'
<br>database_name	- ',[database_name],'
<br>start_time		- ',start_time,'
<br>Duration		- ',[dd hh:mm:ss.mss],' (dd hh:mm:ss.mss)
<br>What is runinng	- ',sql_command,' 
<br>Waiting	Proccess- ',[Waiting],'<br/>

</font>
</body>
</html>') FROM #Locking

			EXEC msdb.dbo.sp_send_dbmail	
			@profile_name = @MailProfile,
			@recipients = @MailRecipiants,
			@copy_recipients = @copy_recipients,
			@subject = @MailSubject,
			@body = @HTML,
			@body_format = HTML,
			@exclude_query_output = 1;

			
END

TRUNCATE TABLE tempdb.dbo.WhoIsActive;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[@LockInMinuts]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[session_id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[database_name]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[login_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[wait_info]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[host_name]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[start_time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[dd hh:mm:ss.mss]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[sql_command]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_WhoIsLocking].[#Locking].[Waiting]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[usp_WhoIsLocking].[#Locking]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[session_id]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[login_name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[wait_info]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[host_name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[database_name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[start_time]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[dd hh:mm:ss.mss]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[sql_command]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[usp_WhoIsLocking].[#Locking].[Waiting]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_WhoIsLocking].[@LockInMinuts]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[10]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="187" />
				<Property Name="Length" Value="4603" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 1/11/2016&#xD;&#xA;-- Description:&#x9;Find Who Lock DB&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [dbo].[usp_WhoIsLocking] @LockInMinuts SMALLINT = 10&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[uspGetScheduleTimes]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;

	DECLARE @StartDTDate DATE;
	DECLARE @endDTDate DATE 
	SET @StartDTDate = @startDate;
	SET @endDTDate = @startDate;
-- Create a tally table. If you already have one of your own please use that instead.
    CREATE TABLE #tallyNumbers
        (
          num SMALLINT PRIMARY KEY CLUSTERED
        );
 
    DECLARE @index SMALLINT;
 
    SET @index = 1;
 
    WHILE @index <= 8640
        BEGIN
            INSERT  #tallyNumbers
                    ( num )
            VALUES  ( @index );
 
            SET @index = @index + 1;
        END;
 
-- Create a staging table for jobschedules
    CREATE TABLE #jobSchedules
        (
          rowID INT IDENTITY(1, 1)
                    PRIMARY KEY CLUSTERED ,
          serverName sysname NOT NULL ,
          jobName sysname NOT NULL ,
          jobDescription NVARCHAR(512) NOT NULL ,
          scheduleName sysname NOT NULL ,
          scheduleID INT NOT NULL ,
          categoryName sysname NOT NULL ,
          freq_type INT NOT NULL ,
          freq_interval INT NOT NULL ,
          freq_subday_type INT NOT NULL ,
          freq_subday_interval INT NOT NULL ,
          freq_relative_interval INT NOT NULL ,
          freq_recurrence_factor INT NOT NULL ,
          startDate DATE NOT NULL ,
          startTime TIME NOT NULL ,
          endDate DATE NOT NULL ,
          endTime TIME NOT NULL ,
          jobEnabled INT NOT NULL ,
          scheduleEnabled INT NOT NULL
        );
 
-- Popoulate the staging table for JobSchedules with SQL Server 2005+
    INSERT  #jobSchedules
            ( serverName ,
              jobName ,
              jobDescription ,
              scheduleName ,
              scheduleID ,
              categoryName ,
              freq_type ,
              freq_interval ,
              freq_subday_type ,
              freq_subday_interval ,
              freq_relative_interval ,
              freq_recurrence_factor ,
              startDate ,
              startTime ,
              endDate ,
              endTime ,
              jobEnabled ,
              scheduleEnabled
            )
            SELECT  srv.srvname ,
                    sj.name ,
                    COALESCE(sj.description, '') ,
                    ss.name ,
                    ss.schedule_id ,
                    sc.name ,
                    ss.freq_type ,
                    ss.freq_interval ,
                    ss.freq_subday_type ,
                    ss.freq_subday_interval ,
                    ss.freq_relative_interval ,
                    ss.freq_recurrence_factor ,
                    COALESCE(STR(ss.active_start_date, 8),
                             CONVERT(CHAR(8), GETDATE(), 112)) ,
                    STUFF(STUFF(REPLACE(STR(ss.active_start_time, 6), ' ', '0'),
                                3, 0, ':'), 6, 0, ':') ,
                    STR(ss.active_end_date, 8) ,
                    STUFF(STUFF(REPLACE(STR(ss.active_end_time, 6), ' ', '0'),
                                3, 0, ':'), 6, 0, ':') ,
                    sj.enabled ,
                    ss.enabled
            FROM    msdb..sysschedules AS ss
                    INNER JOIN msdb..sysjobschedules AS sjs ON sjs.schedule_id = ss.schedule_id
                    INNER JOIN msdb..sysjobs AS sj ON sj.job_id = sjs.job_id
                    INNER JOIN sys.sysservers AS srv ON srv.srvid = sj.originating_server_id
                    INNER JOIN msdb..syscategories AS sc ON sc.category_id = sj.category_id
            WHERE   ss.freq_type IN ( 1, 4, 8, 16, 32 )
            ORDER BY srv.srvname ,
                    sj.name ,
                    ss.name;

-- Only deal with jobs that has active start date before @endDate
    DELETE  FROM #jobSchedules
    WHERE   startDate > @endDate;

-- Only deal with jobs that has active end date after @startDate
    DELETE  FROM #jobSchedules
    WHERE   endDate < @startDate;

    CREATE TABLE #dayInformation
        (
          infoDate DATETIME PRIMARY KEY CLUSTERED ,
          weekdayName VARCHAR(9) NOT NULL ,
          statusCode INT NOT NULL ,
          lastDay TINYINT DEFAULT 0
        );
 

     INSERT  #dayInformation
                ( infoDate ,
                    weekdayName ,
                    statusCode
                )
		SELECT	I.infoDate,DATENAME(WEEKDAY, I.infoDate) [weekdayName],
				CASE WHEN number BETWEEN 1 AND 7
					THEN 1
					WHEN number BETWEEN 8 AND 14
					THEN 2
					WHEN number BETWEEN 15 AND 21
					THEN 4
					WHEN number BETWEEN 22 AND 28
					THEN 8
					ELSE 0
				END [statusCode]
		FROM	master.dbo.spt_values
				CROSS APPLY (SELECT @startDate - DAY(@startDate) +  number infoDate)I
		WHERE	type = 'P'
				AND number BETWEEN 1 AND DATEDIFF(DAY, @startDate - DAY(@startDate) + 1, DATEADD(MONTH, 1, @startDate - DAY(@startDate) + 1))
			
 
    UPDATE  di
    SET     di.statusCode = di.statusCode + 16
    FROM    #dayInformation AS di
            INNER JOIN ( SELECT DATEDIFF(MONTH, '19000101', infoDate) AS theMonth ,
                                DATEPART(DAY, MAX(infoDate)) - 6 AS theDay
                         FROM   #dayInformation
                         GROUP BY DATEDIFF(MONTH, '19000101', infoDate)
                       ) AS x ON x.theMonth = DATEDIFF(MONTH, '19000101',
                                                       di.infoDate)
    WHERE   DATEPART(DAY, di.infoDate) >= x.theDay;
 
    UPDATE  di
    SET     di.lastDay = 16
    FROM    #dayInformation AS di
            INNER JOIN ( SELECT DATEDIFF(MONTH, '19000101', infoDate) AS theMonth ,
                                MAX(infoDate) AS theDay
                         FROM   #dayInformation
                         GROUP BY DATEDIFF(MONTH, '19000101', infoDate)
                       ) AS x ON x.theMonth = DATEDIFF(MONTH, '19000101',
                                                       di.infoDate)
    WHERE   di.infoDate = x.theDay;
 
    UPDATE  #dayInformation
    SET     lastDay = DATEPART(DAY, infoDate)
    WHERE   DATEPART(DAY, infoDate) BETWEEN 1 AND 4;
 
-- Stage all individual schedule times
    CREATE TABLE #scheduleTimes
        (
          rowID INT NOT NULL ,
          infoDate DATETIME NOT NULL ,
          startTime DATETIME NOT NULL ,
          endTime DATETIME NOT NULL ,
          waitSeconds INT DEFAULT 0
        );
 
    CREATE CLUSTERED INDEX IX_rowID ON #scheduleTimes(rowID);

-- Insert one time only schedules
    INSERT  #scheduleTimes
            ( rowID ,
              infoDate ,
              startTime ,
              endTime
            )
            SELECT  rowID ,
                    startDate ,
                    startTime ,
                    endTime
            FROM    #jobSchedules
            WHERE   freq_type = 1
                    AND startDate BETWEEN @StartDTDate AND @endDTDate
					AND startTime BETWEEN CONVERT(TIME,@StartDate) AND CONVERT(TIME,@endDate);

-- Insert daily schedules
    INSERT  #scheduleTimes
            ( rowID ,
              infoDate ,
              startTime ,
              endTime ,
              waitSeconds
            )
            SELECT  js.rowID ,
                    di.infoDate ,
                    cast(di.infoDate as datetime) + cast(js.startTime as datetime) ,
                    cast(di.infoDate as datetime) + cast(js.endTime as datetime) ,
                    CASE js.freq_subday_type
                      WHEN 1 THEN 0
                      WHEN 2 THEN js.freq_subday_interval
                      WHEN 4 THEN 60 * js.freq_subday_interval
                      WHEN 8 THEN 3600 * js.freq_subday_interval
                    END
            FROM    #jobSchedules AS js
                    INNER JOIN #dayInformation AS di ON di.infoDate >= @startDate
                                                        AND di.infoDate <= @endDate
            WHERE   js.freq_type = 4
                    AND DATEDIFF(DAY, js.startDate, di.infoDate) % js.freq_interval = 0;
	--SELECT 'Insert daily schedules' [x],* FROM #scheduleTimes;
	-- Insert weekly schedules
    INSERT  #scheduleTimes
            ( rowID ,
              infoDate ,
              startTime ,
              endTime ,
              waitSeconds
            )
            SELECT  js.rowID ,
                    di.infoDate ,
                    cast(di.infoDate as datetime) + cast(js.startTime as datetime) ,
                    cast(di.infoDate as datetime) + cast(js.endTime as datetime) ,
                    CASE js.freq_subday_type
                      WHEN 1 THEN 0
                      WHEN 2 THEN js.freq_subday_interval
                      WHEN 4 THEN 60 * js.freq_subday_interval
                      WHEN 8 THEN 3600 * js.freq_subday_interval
                    END
            FROM    #jobSchedules AS js
                    INNER JOIN #dayInformation AS di ON di.infoDate BETWEEN @StartDTDate AND @endDTDate
            WHERE   js.freq_type = 8
                    AND 1 = CASE WHEN js.freq_interval & 1 = 1
                                      AND di.weekdayName = 'Sunday' THEN 1
                                 WHEN js.freq_interval & 2 = 2
                                      AND di.weekdayName = 'Monday' THEN 1
                                 WHEN js.freq_interval & 4 = 4
                                      AND di.weekdayName = 'Tuesday' THEN 1
                                 WHEN js.freq_interval & 8 = 8
                                      AND di.weekdayName = 'Wednesday' THEN 1
                                 WHEN js.freq_interval & 16 = 16
                                      AND di.weekdayName = 'Thursday' THEN 1
                                 WHEN js.freq_interval & 32 = 32
                                      AND di.weekdayName = 'Friday' THEN 1
                                 WHEN js.freq_interval & 64 = 64
                                      AND di.weekdayName = 'Saturday' THEN 1
                                 ELSE 0
                            END
                    AND ( DATEDIFF(DAY, js.startDate, di.infoDate) / 7 )
                    % js.freq_recurrence_factor = 0;
--SELECT 'Insert weekly schedules' [x],* FROM #scheduleTimes;
-- Insert monthly schedules
    INSERT  #scheduleTimes
            ( rowID ,
              infoDate ,
              startTime ,
              endTime ,
              waitSeconds
            )
            SELECT  js.rowID ,
                    di.infoDate ,
                    cast(di.infoDate as datetime) + cast(js.startTime as datetime) ,
                    cast(di.infoDate as datetime) + cast(js.endTime as datetime) ,
                    CASE js.freq_subday_type
                      WHEN 1 THEN 0
                      WHEN 2 THEN js.freq_subday_interval
                      WHEN 4 THEN 60 * js.freq_subday_interval
                      WHEN 8 THEN 3600 * js.freq_subday_interval
                    END
            FROM    #jobSchedules AS js
                    INNER JOIN #dayInformation AS di ON di.infoDate BETWEEN @StartDTDate AND @endDTDate
            WHERE   js.freq_type = 16
                    AND DATEPART(DAY, di.infoDate) = js.freq_interval
                    AND DATEDIFF(MONTH, js.startDate, di.infoDate)
                    % js.freq_recurrence_factor = 0;
--SELECT 'Insert monthly schedules' [x],* FROM #scheduleTimes;
 
-- Insert monthly relative schedules
    INSERT  #scheduleTimes
            ( rowID ,
              infoDate ,
              startTime ,
              endTime ,
              waitSeconds
            )
            SELECT  js.rowID ,
                    di.infoDate ,
                    cast(di.infoDate as datetime) + cast(js.startTime as datetime) ,
                    cast(di.infoDate as datetime) + cast(js.endTime as datetime) ,
                    CASE js.freq_subday_type
                      WHEN 1 THEN 0
                      WHEN 2 THEN js.freq_subday_interval
                      WHEN 4 THEN 60 * js.freq_subday_interval
                      WHEN 8 THEN 3600 * js.freq_subday_interval
                    END
            FROM    #jobSchedules AS js
                    INNER JOIN #dayInformation AS di ON di.infoDate BETWEEN @StartDTDate AND @endDTDate
            WHERE   js.freq_type = 32
                    AND 1 = CASE WHEN js.freq_interval = 1
                                      AND di.weekdayName = 'Sunday' THEN 1
                                 WHEN js.freq_interval = 2
                                      AND di.weekdayName = 'Monday' THEN 1
                                 WHEN js.freq_interval = 3
                                      AND di.weekdayName = 'Tuesday' THEN 1
                                 WHEN js.freq_interval = 4
                                      AND di.weekdayName = 'Wednesday' THEN 1
                                 WHEN js.freq_interval = 5
                                      AND di.weekdayName = 'Thursday' THEN 1
                                 WHEN js.freq_interval = 6
                                      AND di.weekdayName = 'Friday' THEN 1
                                 WHEN js.freq_interval = 7
                                      AND di.weekdayName = 'Saturday' THEN 1
                                 WHEN js.freq_interval = 8
                                      AND js.freq_relative_interval = di.lastDay
                                 THEN 1
                                 WHEN js.freq_interval = 9
                                      AND di.weekdayName NOT IN ( 'Sunday',
                                                              'Saturday' )
                                 THEN 1
                                 WHEN js.freq_interval = 10
                                      AND di.weekdayName IN ( 'Sunday',
                                                              'Saturday' )
                                 THEN 1
                                 ELSE 0
                            END
                    AND di.statusCode & js.freq_relative_interval = js.freq_relative_interval
                    AND DATEDIFF(MONTH, js.startDate, di.infoDate)
                    % js.freq_recurrence_factor = 0;
--SELECT 'Insert monthly relative schedules' [x],* FROM #scheduleTimes;
 
-- Get the daily recurring schedule times
    INSERT  #scheduleTimes
            ( rowID ,
              infoDate ,
              startTime ,
              endTime ,
              waitSeconds
            )
            SELECT  st.rowID ,
                    st.infoDate ,
                    DATEADD(SECOND, tn.num * st.waitSeconds, st.startTime) ,
                    st.endTime ,
                    st.waitSeconds
            FROM    #scheduleTimes AS st
                    CROSS JOIN #tallyNumbers AS tn
            WHERE   tn.num * st.waitSeconds <= DATEDIFF(SECOND, st.startTime,st.endTime)
                    AND st.waitSeconds > 0;
--SELECT 'Insert daily recurring schedules' [x],* FROM #scheduleTimes;
 
-- Present the result
    SELECT  js.scheduleID ,
            js.serverName ,
            js.jobName ,
            js.jobDescription ,
            js.scheduleName ,
            js.categoryName ,
            CONVERT(DATE,st.infoDate) infoDate,
            CONVERT(CHAR(8),st.startTime, 108) startTime
    FROM    #scheduleTimes AS st
            INNER JOIN #jobSchedules AS js ON js.rowID = st.rowID
	WHERE	st.startTime BETWEEN @startDate AND @endDate
			AND js.jobEnabled = 1
            AND js.scheduleEnabled = 1;
	
	
	SELECT	js.scheduleID ,
            js.serverName ,
            js.jobName ,
            js.jobDescription ,
            js.scheduleName ,
			'Will run ' + x.HowManyTime + ' times between ' + CONVERT(VARCHAR(25),@startDate,120) + ' and ' + CONVERT(VARCHAR(25),@endDate,120) + '. ' + 
			eX.DiffTime
	FROM	#jobSchedules AS js	
			CROSS APPLY (SELECT CONVERT(VARCHAR(10),COUNT_BIG(1)) [HowManyTime] FROM #scheduleTimes AS st WHERE js.rowID = st.rowID AND st.startTime BETWEEN @startDate AND @endDate)x
			CROSS APPLY (SELECT TOP 1 'Every ' + CONVERT(VARCHAR(10),DATEDIFF(MINUTE,st.startTime ,ix.startTime)) + ' minute' [DiffTime]
						 FROM	#scheduleTimes AS st 
								CROSS APPLY (SELECT TOP 1 ist.startTime 
											 FROM	#scheduleTimes AS ist 
											 WHERE	js.rowID = ist.rowID AND ist.startTime BETWEEN @startDate AND @endDate
													AND ist.startTime > st.startTime
											 )ix
						WHERE	js.rowID = st.rowID 
								AND st.startTime BETWEEN @startDate AND @endDate)eX
	WHERE	js.jobEnabled = 1
            AND js.scheduleEnabled = 1;

-- Clean up
    DROP TABLE    #jobSchedules,
              #dayInformation,
              #scheduleTimes,
              #tallyNumbers;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[smallint]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[@startDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#tallyNumbers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#tallyNumbers].[num]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[serverName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobDescription]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[categoryName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_interval]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_subday_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_subday_interval]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_relative_interval]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_recurrence_factor]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[startDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[startTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[endDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[endTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobEnabled]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleEnabled]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[@endDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[infoDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[weekdayName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[statusCode]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[infoDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[infoDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[statusCode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[lastDay]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[lastDay]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[infoDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[endTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[rowID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[waitSeconds]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[infoDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[rowID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[startTime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[endTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_subday_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_subday_interval]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_type]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[startDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_interval]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[weekdayName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_recurrence_factor]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_relative_interval]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[lastDay]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[statusCode]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[infoDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#tallyNumbers].[num]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[waitSeconds]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[endTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[serverName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobDescription]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[categoryName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[infoDate]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobEnabled]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleEnabled]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[rowID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[serverName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobDescription]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobEnabled]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleEnabled]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[uspGetScheduleTimes].[#tallyNumbers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#tallyNumbers].[num]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[smallint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[rowID]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[serverName]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobName]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobDescription]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="512" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleName]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleID]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[categoryName]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_type]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_interval]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_subday_type]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_subday_interval]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_relative_interval]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[freq_recurrence_factor]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[startDate]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[date]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[startTime]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="7" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[time]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[endDate]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[date]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[endTime]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Scale" Value="7" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[time]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[jobEnabled]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#jobSchedules].[scheduleEnabled]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[uspGetScheduleTimes].[#dayInformation]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[infoDate]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[weekdayName]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="9" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[statusCode]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#dayInformation].[lastDay]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[tinyint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[rowID]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[infoDate]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[startTime]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[endTime]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[uspGetScheduleTimes].[#scheduleTimes].[waitSeconds]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[uspGetScheduleTimes].[@startDate]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[uspGetScheduleTimes].[@endDate]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="140" />
				<Property Name="Length" Value="17250" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="/*&#xD;&#xA;    This code is blogged here&#xD;&#xA;    http://weblogs.sqlteam.com/peterl/archive/2008/10/10/Keep-track-of-all-your-jobs-schedules.aspx&#xD;&#xA;*/&#xD;&#xA;CREATE PROCEDURE dbo.uspGetScheduleTimes&#xD;&#xA;    (&#xD;&#xA;      @startDate DATETIME ,&#xD;&#xA;      @endDate DATETIME&#xD;&#xA;    )&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlAssembly" Name="[FileSystemHelper]">
			<Property Name="PermissionSet" Value="2" />
			<Relationship Name="AssemblySources">
				<Entry>
					<Element Type="SqlAssemblySource">
						<Property Name="Source">
							<Value><![CDATA[alue>
						</Property>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlContract" Name="[JobContract]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Messages">
				<Entry>
					<Element Type="SqlContractMessageSpecifier">
						<Property Name="SentBy" Value="3" />
						<Relationship Name="MessageType">
							<Entry>
								<References Name="[JobRequest]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlService" Name="[JobProcessingService]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Contracts">
				<Entry>
					<References Name="[JobContract]" />
				</Entry>
			</Relationship>
			<Relationship Name="Queue">
				<Entry>
					<References Name="[dbo].[JobProcessingQueue]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlMessageType" Name="[JobRequest]">
			<Property Name="ValidationMethod" Value="3" />
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlService" Name="[JobRequestService]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Queue">
				<Entry>
					<References Name="[dbo].[JobRequestQueue]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlSchema" Name="[Report]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[Report].[FK_Mail_MailRecipiantProcedure_Mail_MailRecipiant]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[Report].[Mail_MailRecipiantProcedure].[MailRecipiantID]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Report].[Mail_MailRecipiantProcedure]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant].[ID]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="5" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[Report].[FK_Mail_MailRecipiantProcedure_Mail_Procedure]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[Report].[Mail_MailRecipiantProcedure].[ProcedureID]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Report].[Mail_MailRecipiantProcedure]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[Report].[Mail_Procedure].[ID]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[Report].[Mail_Procedure]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="6" />
		</Element>
		<Element Type="SqlTable" Name="[Report].[Mail_MailRecipiant]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_MailRecipiant].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_MailRecipiant].[Name]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="30" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_MailRecipiant].[Email]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="50" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_MailRecipiant].[Category]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="7" />
		</Element>
		<Element Type="SqlTable" Name="[Report].[Mail_MailRecipiantProcedure]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_MailRecipiantProcedure].[ProcedureID]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_MailRecipiantProcedure].[MailRecipiantID]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="5" />
			<AttachedAnnotation Disambiguator="6" />
		</Element>
		<Element Type="SqlTable" Name="[Report].[Mail_Procedure]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_Procedure].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Report].[Mail_Procedure].[ProcedureName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="8" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[Report].[PK_Mail_MailRecipiant]">
			<Property Name="FillFactor" Value="90" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[Report].[Mail_MailRecipiant].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="7" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[Report].[PK_Mail_Procedure]">
			<Property Name="FillFactor" Value="90" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[Report].[Mail_Procedure].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Report].[Mail_Procedure]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="8" />
		</Element>
		<Element Type="SqlScalarFunction" Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiantProcedure]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_Procedure]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_Procedure].[ID]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiantProcedure].[ProcedureID]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant].[ID]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiantProcedure].[MailRecipiantID]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant].[Email]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_Procedure].[ProcedureName]" />
				</Entry>
				<Entry>
					<References Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName].[@ProcedureName]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant].[Email]" />
				</Entry>
				<Entry>
					<References Name="[Report].[Mail_MailRecipiant].[Category]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN	
	DECLARE @MailRecipiant VARCHAR(2000) = '';

	SELECT	@MailRecipiant += CONCAT(MR.EMail,';')
	FROM	[Report].Mail_MailRecipiantProcedure CL
			INNER JOIN [Report].Mail_Procedure P ON P.ID = CL.ProcedureID
			INNER JOIN [Report].Mail_MailRecipiant MR ON MR.ID = CL.MailRecipiantID
	WHERE	P.ProcedureName = @ProcedureName;

	IF	@MailRecipiant IS NULL OR @MailRecipiant = ''
		SELECT	@MailRecipiant += CONCAT(MR.EMail,';')
		FROM	[Report].Mail_MailRecipiant MR
		WHERE	MR.Category LIKE '%' + @ProcedureName + '%'
				AND MR.EMail != '';

	IF	@MailRecipiant IS NULL OR @MailRecipiant = ''
		SELECT	@MailRecipiant += CONCAT(MR.EMail,';')
		FROM	[Report].Mail_MailRecipiant MR
		WHERE	MR.Category like '%DBA%'
				AND MR.EMail != '';
		 
	RETURN @MailRecipiant;
END]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="244" />
							<Property Name="Length" Value="1157" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 29/04/2013&#xD;&#xA;-- Update date: 29/10/2015 Sand to DBA&#xD;&#xA;-- Description:&#x9;Get Mail Recipiant By Procedure Name&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE FUNCTION [Report].[ufn_Mail_GetMailRecipiantByProcedureName]&#xD;&#xA;(&#xD;&#xA;&#x9;@ProcedureName sysname&#xD;&#xA;)&#xD;&#xA;RETURNS VARCHAR(2000)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName].[@ProcedureName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="Length" Value="2000" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[varchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[Report].[usp_General_GetActiveJobLongRun]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN	
	SET NOCOUNT ON ;
	DECLARE @RC INT = 0;
	SELECT  j.name AS JobName ,
			ja.Start_execution_date StartExecutionDate,
			ISNULL(last_executed_step_id, 0) + 1 AS CurrentExecutedStepID ,
			js.step_name StepName,
			CONCAT(joa.Duration,' Min') Duration
	INTO	#ActiveJobs
	FROM    msdb.dbo.sysjobactivity ja
			LEFT JOIN msdb.dbo.sysjobhistory jh ON ja.job_history_id = jh.instance_id
			INNER JOIN msdb.dbo.sysjobs j ON ja.job_id = j.job_id
			INNER JOIN msdb.dbo.sysjobsteps js ON ja.job_id = js.job_id
											AND ISNULL(ja.last_executed_step_id, 0)
											+ 1 = js.step_id
			OUTER APPLY ( SELECT  DATEDIFF(MINUTE,ja.start_execution_date,GETDATE()) Duration ) joa
	WHERE   ja.session_id = ( SELECT TOP 1
										session_id
							  FROM      msdb.dbo.syssessions
							  ORDER BY  agent_start_date DESC
							)
			AND start_execution_date IS NOT NULL
			AND stop_execution_date IS NULL
			AND joa.Duration > 30
			AND J.name NOT IN ('_Admin_ :: TrackBlocking')
			AND J.name NOT LIKE 'collection_set%'
			AND J.name NOT LIKE 'sysutility_get%'
			AND j.category_id NOT BETWEEN 10 AND 20;
	SET @RC = @@ROWCOUNT;
	IF @SendMail = 0 
	BEGIN
		SELECT	*
		FROM	#ActiveJobs
	END
	ELSE IF @RC > 0 AND @SendMail = 1
	BEGIN
		--SELECT	* 
		--FROM	MSDB.dbo.sysoperators
		--WHERE	name = 'BI'

		DECLARE @MailRecipiants NVARCHAR (255);
		DECLARE @copy_recipients NVARCHAR (255);
		SELECT	@MailRecipiants = [Report].[ufn_Mail_GetMailRecipiantByProcedureName](NULL),
				@copy_recipients = [Report].[ufn_Mail_GetMailRecipiantByProcedureName]('BI');
		IF EXISTS (SELECT TOP 1 1 FROM MSDB.dbo.sysoperators WHERE	name = 'BI')
			SELECT	@MailRecipiants += [Report].[ufn_Mail_GetMailRecipiantByProcedureName]('BI');
		DECLARE @MailSubject NVARCHAR (255) = N'';
		DECLARE @MailProfile sysname = (SELECT TOP 1 name FROM msdb.dbo.sysmail_profile);
		DECLARE @MailBodey NVARCHAR (max) = N'';

		DECLARE @MailTable NVARCHAR (max) = N'';

		SET @MailSubject = N'Active Job Long & still Running on: ' + @@SERVERNAME +' | ' + convert (nvarchar (50), GETDATE(), 100) ;
		SET @MailTable = '<table class="sample">
<tr>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Job Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Start Execution Date</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Current Executed Step ID</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Step Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Duration</td>
</tr>';

    SELECT  @MailTable += '<tr><td>' + JobName 
			+ '</td><td>' + CONVERT(NVARCHAR(25),StartExecutionDate) 
			+ '</td><td>' + CONVERT(NVARCHAR(25),CurrentExecutedStepID)
            + '</td><td>' + StepName 
			+ '</td><td>' + Duration
			+ '</td></tr>'
    FROM    #ActiveJobs;

    SET @MailTable += '
</table>'

	SET @MailBodey+=
'
<!DOCTYPE html>
<html>
<body>
<style type="text/css">
table.sample {
	font-family:Calibri;
	font-size:small;
	border-width: 1px;
	border-spacing: 0px;
	border-style: solid;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;}
table.sample th {
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
table.sample td {
	font-family:Calibri;
	font-size:12px;
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
</style>
<font face="Calibri (Body)">
<H1><p style=''font-size:18.0pt;font-family:"Bradley Hand ITC"''>' + @MailSubject + N'</p></H1>
<br/>' + @MailTable  + '<br/>

</font>
</body>
</html>';

	EXEC msdb.dbo.sp_send_dbmail	
			@profile_name = @MailProfile,
			@recipients = @MailRecipiants,
			@copy_recipients = @copy_recipients,
			@subject = @MailSubject,
			@body = @MailBodey,
			@body_format = HTML,
			@exclude_query_output = 1;

	IF OBJECT_ID('tempdb..#ActiveJobs') IS NOT NULL DROP TABLE #ActiveJobs

	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Report].[usp_General_GetActiveJobLongRun].[@SendMail]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs]" />
				</Entry>
				<Entry>
					<References Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[JobName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[StartExecutionDate]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[CurrentExecutedStepID]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[StepName]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[Duration]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[JobName]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[StartExecutionDate]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[CurrentExecutedStepID]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[StepName]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Report].[usp_General_GetActiveJobLongRun].[#ActiveJobs].[Duration]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Report].[usp_General_GetActiveJobLongRun].[@SendMail]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="308" />
				<Property Name="Length" Value="4569" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 03/03/2015&#xD;&#xA;-- Update date: 08/03/2015 Send Mail&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;04/06/2015 Sharon add BI&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;10/11/2015 Sharon Not Replications&#xD;&#xA;-- Description:&#x9;Find Active Job Long Run&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Report].[usp_General_GetActiveJobLongRun] (@SendMail INT = 0)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Report].[usp_GetActiveReplicas]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN	
    SET NOCOUNT ON;
	
	DECLARE @MailRecipiants NVARCHAR (255);
	SELECT	@MailRecipiants = [Report].[ufn_Mail_GetMailRecipiantByProcedureName]('DBA');
	DECLARE @MailSubject NVARCHAR (255) = N'Additional Active Replicas On Server ' + @@SERVERNAME + ' with BI Replica.';
	DECLARE @MailProfile sysname = (SELECT TOP 1 name FROM msdb.dbo.sysmail_profile);
	DECLARE @MailBodey NVARCHAR (max) = N'';
	
	DECLARE @MailTable NVARCHAR (max) = N'';
	DECLARE @Replica TABLE ([Replica Name] sysname NOT NULL,
		[Databases] NVARCHAR(max) NOT NULL);

	IF EXISTS(SELECT  TOP 1 1 FROM master.sys.availability_groups g
	inner join master.sys.dm_hadr_availability_replica_states r
	on g.group_id = r.group_id
	where g.name = 'BI-DB' 
	and  is_local = 1
	AND r.role = 1) 
	BEGIN
		INSERT @Replica
		select	g.name,dbo.ufn_Util_clr_Conc(dhdrcs.database_name) [DatabaseName]
		fROM	master.sys.availability_groups g
				INNER JOIN master.sys.dm_hadr_availability_replica_states r on g.group_id = r.group_id
				INNER JOIN master.sys.dm_hadr_database_replica_cluster_states dhdrcs ON dhdrcs.replica_id = r.replica_id
		where	g.name != 'BI-DB' 
				and  r.is_local = 1
				AND r.role = 1
		GROUP BY g.name

	IF EXISTS (SELECT TOP 1 1 FROM @Replica)
	BEGIN
		

		SET @MailTable = '<table class="sample">
<tr>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Replica Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Databases</td>
</tr>';

    SELECT  @MailTable += CONCAT('<tr><td>',CONVERT(VARCHAR(50),[Replica Name])
			, '</td><td>' , [Databases] 
			, '</td></tr>')
    FROM    @Replica;

    SET @MailTable += '
</table>'

	SET @MailBodey+=
'
<!DOCTYPE html>
<html>
<body>
<style type="text/css">
table.sample {
	font-family:Calibri;
	font-size:small;
	border-width: 1px;
	border-spacing: 0px;
	border-style: solid;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;}
table.sample th {
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
table.sample td {
	font-family:Calibri;
	font-size:12px;
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
</style>
<font face="Calibri (Body)">
<H1><p style=''font-size:18.0pt;font-family:"Bradley Hand ITC"''>' + @MailSubject + N'</p></H1>
<br/>' + @MailTable  + '<br/>

</font>
</body>
</html>';

	EXEC msdb.dbo.sp_send_dbmail	
			@profile_name = @MailProfile,
			@recipients = @MailRecipiants,
			@subject = @MailSubject,
			@body = @MailBodey,
			@body_format = HTML,
			@exclude_query_output = 1;

	END
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[ufn_Util_clr_Conc]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetActiveReplicas].[@Replica].[Replica Name]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetActiveReplicas].[@Replica].[Databases]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Report].[usp_GetActiveReplicas].[@Replica]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetActiveReplicas].[@Replica].[Replica Name]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetActiveReplicas].[@Replica].[Databases]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="288" />
				<Property Name="Length" Value="3105" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 28/09/2014&#xD;&#xA;-- Update date: 29/10/2015 Sharon fix ufn of mail&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;29/11/2015 Sharon Fix Joins&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;13/12/2015 Sharon Conc&#xD;&#xA;-- Description:&#x9;&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Report].[usp_GetActiveReplicas]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Report].[usp_GetLongRunningSessionInfo]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN	
    SET NOCOUNT ON;
	DECLARE @HostName NVARCHAR(128)
	DECLARE @OnlyApp BIT = 1
	DECLARE @DatabaseName sysname 
	DECLARE @Mode INT
	DECLARE @TimeOn BIT = 1
	DECLARE @JobInfoOn BIT = 0
	DECLARE @OnlyRunnigProcessOn BIT = 0
	DECLARE @TimeFilter BIT = 1
	DECLARE @IncludeSystemDatabase BIT = 0
	DECLARE @IncludeAllUserDatabase BIT = 1
	DECLARE @ConsiderIgnorList BIT = 1
	DECLARE @FilterJob BIT = 1
	
	DECLARE @MailRecipiants NVARCHAR (255);
	SELECT	@MailRecipiants = [Report].[ufn_Mail_GetMailRecipiantByProcedureName]('DBA');
	DECLARE @MailSubject NVARCHAR (255) = N'Long Running Session Info';
	DECLARE @MailProfile sysname = (SELECT TOP 1 name FROM msdb.dbo.sysmail_profile);
	DECLARE @MailBodey NVARCHAR (max) = N'';
	DECLARE @IsKill BIT = 0;
	DECLARE @MailTable NVARCHAR (max) = N'';
	DECLARE @LongRunningQ TABLE (
		[dd hh:mm:ss.mss] VARCHAR(15),
		[SessionID] INT NULL,
		[Database Name] sysname NULL,
		[StoredProcedure] VARCHAR(255),
		[HostName] sysname,
		[LoginName] sysname NULL,
		[ProgramName] VARCHAR(255) NULL,
		[ConnectionMethud] sysname NULL,
		[Status] sysname NULL,
		[WaitType] VARCHAR(255) NULL,
		TransactionIsolationLevel NVARCHAR(max) NULL,
		[Command] NVARCHAR(max) NULL,
		CommandText NVARCHAR(max) NULL,
		KillThatMotherFuker NVARCHAR(25) NULL
		);


	INSERT @LongRunningQ
	EXECUTE [_Admin_].[usp_GetSessionInfo] 
			   @HostName
			  ,@OnlyApp
			  ,@DatabaseName
			  ,@Mode
			  ,@TimeOn
			  ,@JobInfoOn
			  ,@OnlyRunnigProcessOn
			  ,@TimeFilter
			  ,@IncludeSystemDatabase
			  ,@IncludeAllUserDatabase
			  ,@ConsiderIgnorList
			  ,@FilterJob

	IF EXISTS (SELECT TOP 1 1 FROM @LongRunningQ)
	BEGIN
		

		SET @MailTable = '<table class="sample">
<tr>
	
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Time</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Session ID</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Stored Procedure</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Host Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Login Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Program Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Connection Methud</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Status</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Wait Type</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Transaction Isolation Level</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Command</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">CommandText</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Database Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Additional Info</td>
</tr>';

    SELECT  @MailTable += CONCAT('<tr><td>' , [dd hh:mm:ss.mss] ,
			'</td><td>',CONVERT(VARCHAR(50),[SessionID])
			, '</td><td>' , StoredProcedure
			, '</td><td>' , [HostName]
			, '</td><td>' , [LoginName]
			, '</td><td>' , [ProgramName]
			, '</td><td>' , [ConnectionMethud]
            , '</td><td>' , [Status]
            , '</td><td>' , WaitType
			, '</td><td>' , TransactionIsolationLevel
			, '</td><td>' , [Command]
			, '</td><td>' , CommandText
			, '</td><td>' , [Database Name] 
			, '</td><td><font color="#FF0000">' , IIF(KillThatMotherFuker != '' AND @IsKill = 1,'Kill Session was activate','')
			, '</font></td></tr>')
    FROM    @LongRunningQ;

    SET @MailTable += '
</table>'

	SET @MailBodey+=
'
<!DOCTYPE html>
<html>
<body>
<style type="text/css">
table.sample {
	font-family:Calibri;
	font-size:small;
	border-width: 1px;
	border-spacing: 0px;
	border-style: solid;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;}
table.sample th {
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
table.sample td {
	font-family:Calibri;
	font-size:12px;
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
</style>
<font face="Calibri (Body)">
<H1><p style=''font-size:18.0pt;font-family:"Bradley Hand ITC"''>' + @MailSubject + N'</p></H1>
<br/>' + @MailTable  + '<br/>

</font>
</body>
</html>';

	EXEC msdb.dbo.sp_send_dbmail	
			@profile_name = @MailProfile,
			@recipients = @MailRecipiants,
			@subject = @MailSubject,
			@body = @MailBodey,
			@body_format = HTML,
			@exclude_query_output = 1;
	

	IF @IsKill = 1
	BEGIN
		DECLARE @Kill NVARCHAR(25)
	
		DECLARE cuKill CURSOR FAST_FORWARD READ_ONLY FOR SELECT KillThatMotherFuker FROM @LongRunningQ WHERE KillThatMotherFuker != ''
	
		OPEN cuKill
	
		FETCH NEXT FROM cuKill INTO @Kill
	
		WHILE @@FETCH_STATUS = 0
		BEGIN
			BEGIN TRY 
				EXEC @Kill;
			END TRY
			BEGIN CATCH
			
				THROW;
			
			END CATCH
			
			FETCH NEXT FROM cuKill INTO @Kill
		END
	
		CLOSE cuKill
		DEALLOCATE cuKill

		END
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[dd hh:mm:ss.mss]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[SessionID]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[StoredProcedure]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[HostName]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[LoginName]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[ProgramName]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[ConnectionMethud]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[Status]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[WaitType]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[TransactionIsolationLevel]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[Command]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[CommandText]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[Database Name]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[KillThatMotherFuker]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[dd hh:mm:ss.mss]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="15" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[SessionID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[Database Name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[StoredProcedure]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[HostName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[LoginName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[ProgramName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[ConnectionMethud]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[Status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[WaitType]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[TransactionIsolationLevel]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[Command]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[CommandText]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningSessionInfo].[@LongRunningQ].[KillThatMotherFuker]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="25" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="337" />
				<Property Name="Length" Value="5900" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 28/09/2014&#xD;&#xA;-- Update date: 29/10/2015 Sharon fix ufn of mail&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;06/12/2015 Sharon Add Columns&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;21/12/2015 Sharon 91875&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;22/12/2015 Sharon [IsKillSessionAllow]&#xD;&#xA;-- Description:&#x9;&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Report].[usp_GetLongRunningSessionInfo]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Report].[usp_GetLongRunningTranInfo]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN	
    SET NOCOUNT ON;
	
	DECLARE @MailRecipiants NVARCHAR (255);
	SELECT	@MailRecipiants = [Report].[ufn_Mail_GetMailRecipiantByProcedureName]('DBA');
	DECLARE @MailSubject NVARCHAR (255) = N'Long Running Tran';
	DECLARE @MailProfile sysname = (SELECT TOP 1 name FROM msdb.dbo.sysmail_profile);
	DECLARE @MailBodey NVARCHAR (max) = N'';

	DECLARE @MailTable NVARCHAR (max) = N'';
	DECLARE @LongRunningQ TABLE ([Session ID] INT NULL,
		[Database Name] sysname NULL,
		[command] NVARCHAR(max) NULL,
		statement_text NVARCHAR(max) NULL,
		command_text NVARCHAR(max) NULL,
		wait_type nVARCHAR(60) NULL,
		wait_time INT NULL,
		[MB used] FLOAT,
		[MB used system] FLOAT NULL,
		[MB reserved] FLOAT NULL,
		[MB reserved system] FLOAT NULL,
		[Record count] int NULL
		)
	INSERT @LongRunningQ
	SELECT b.session_id 'Session ID',
		   CAST(Db_name(a.database_id) AS VARCHAR(20)) 'Database Name',
		   c.command,
		   Substring(st.TEXT, ( c.statement_start_offset / 2 ) + 1,
		   ( (
		   CASE c.statement_end_offset
			WHEN -1 THEN Datalength(st.TEXT)
			ELSE c.statement_end_offset
		   END 
		   -
		   c.statement_start_offset ) / 2 ) + 1)                                                             
		   statement_text,
		   Coalesce(Quotename(Db_name(st.dbid)) + N'.' + Quotename(
		   Object_schema_name(st.objectid,
					st.dbid)) +
					N'.' + Quotename(Object_name(st.objectid, st.dbid)), '')    
		   command_text,
		   c.wait_type,
		   c.wait_time,
		   a.database_transaction_log_bytes_used / 1024.0 / 1024.0                 'MB used',
		   a.database_transaction_log_bytes_used_system / 1024.0 / 1024.0          'MB used system',
		   a.database_transaction_log_bytes_reserved / 1024.0 / 1024.0             'MB reserved',
		   a.database_transaction_log_bytes_reserved_system / 1024.0 / 1024.0      'MB reserved system',
		   a.database_transaction_log_record_count                           
		   'Record count'
	FROM   sys.dm_tran_database_transactions a
		   INNER JOIN sys.dm_tran_session_transactions b ON a.transaction_id = b.transaction_id
		   INNER JOIN sys.dm_exec_requests c ON c.database_id = a.database_id
			AND c.session_id = b.session_id
			AND c.transaction_id = a.transaction_id
		   CROSS APPLY sys.Dm_exec_sql_text(c.sql_handle) AS st 
	WHERE	a.database_id > 4
	
	ORDER  BY 'MB used' DESC;

	IF EXISTS (SELECT TOP 1 1 FROM @LongRunningQ)
	BEGIN
		

		SET @MailTable = '<table class="sample">
<tr>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Session ID</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Database Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Command</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Statement Text</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Command Text</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Wait Type</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">MB used</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">MB used system</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">MB reserved</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">MB reserved system</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Record count</td>
</tr>';

    SELECT  @MailTable += CONCAT('<tr><td>',CONVERT(VARCHAR(50),[Session ID])
			, '</td><td>' , [Database Name] 
			, '</td><td>' , [command]
            , '</td><td>' , statement_text 
			, '</td><td>' , command_text
			, '</td><td>' , dbo.ufn_Util_clr_Conc(wait_type + '(' + CONVERT(VARCHAR(50),wait_time) + ')
')
            , '</td><td>' , CONVERT(VARCHAR(50),SUM([MB used]))
			, '</td><td>' , CONVERT(VARCHAR(50),SUM([MB used system]))
			, '</td><td>' , CONVERT(VARCHAR(50),SUM([MB reserved]))
			, '</td><td>' , CONVERT(VARCHAR(50),SUM([MB reserved system]))
			, '</td><td>' , CONVERT(VARCHAR(50),SUM([Record count]))
			, '</td></tr>')
    FROM    @LongRunningQ
	GROUP BY [Session ID],[Database Name] ,[command],statement_text,command_text;

    SET @MailTable += '
</table>'

	SET @MailBodey+=
'
<!DOCTYPE html>
<html>
<body>
<style type="text/css">
table.sample {
	font-family:Calibri;
	font-size:small;
	border-width: 1px;
	border-spacing: 0px;
	border-style: solid;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;}
table.sample th {
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
table.sample td {
	font-family:Calibri;
	font-size:12px;
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
</style>
<font face="Calibri (Body)">
<H1><p style=''font-size:18.0pt;font-family:"Bradley Hand ITC"''>' + @MailSubject + N'</p></H1>
<br/>' + @MailTable  + '<br/>

</font>
</body>
</html>';

	EXEC msdb.dbo.sp_send_dbmail	
			@profile_name = @MailProfile,
			@recipients = @MailRecipiants,
			@subject = @MailSubject,
			@body = @MailBodey,
			@body_format = HTML;

	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[Session ID]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[Database Name]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[command]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[statement_text]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[command_text]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ufn_Util_clr_Conc]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[wait_type]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[wait_time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB used]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB used system]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB reserved]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB reserved system]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[Record count]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[Session ID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[Database Name]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[command]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[statement_text]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[command_text]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[wait_type]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="60" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[wait_time]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB used]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="53" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[float]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB used system]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="53" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[float]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB reserved]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="53" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[float]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[MB reserved system]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="53" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[float]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_GetLongRunningTranInfo].[@LongRunningQ].[Record count]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="288" />
				<Property Name="Length" Value="5824" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 28/09/2014&#xD;&#xA;-- Update date: 29/10/2015 Sharon fix ufn of mail&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;29/11/2015 Sharon Fix Joins&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;13/12/2015 Sharon Conc&#xD;&#xA;-- Description:&#x9;&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Report].[usp_GetLongRunningTranInfo]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Report].[usp_SetMaxDegreeOfParallelism]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN	
    SET NOCOUNT ON;
	
	DECLARE @MailRecipiants NVARCHAR (255);
	SELECT	@MailRecipiants = [Report].[ufn_Mail_GetMailRecipiantByProcedureName]('BI');
	DECLARE @MailSubject NVARCHAR (255) = @@SERVERNAME + N': max degree of parallelism, change back to 0.';
	DECLARE @MailProfile sysname = (SELECT TOP 1 name FROM msdb.dbo.sysmail_profile);
	DECLARE @MailBodey NVARCHAR (max) = N'';
	
	DECLARE @MailTable NVARCHAR (max) = N'';
	DECLARE @Replica TABLE ([Replica Name] sysname NOT NULL,
		[Databases] NVARCHAR(max) NOT NULL);

	IF EXISTS(SELECT  TOP 1 1 FROM sys.configurations WHERE name = 'max degree of parallelism' AND value != 0) 
	BEGIN
		EXEC sp_configure 'max degree of parallelism',0;
		RECONFIGURE WITH OVERRIDE;

		

	SET @MailBodey+=
'
<!DOCTYPE html>
<html>
<body>
<style type="text/css">
table.sample {
	font-family:Calibri;
	font-size:small;
	border-width: 1px;
	border-spacing: 0px;
	border-style: solid;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;}
table.sample th {
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
table.sample td {
	font-family:Calibri;
	font-size:12px;
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
</style>
<font face="Calibri (Body)">
<H1><p style=''font-size:18.0pt;font-family:"Bradley Hand ITC"''>' + @MailSubject + N'</p></H1>
<br/><br/>

</font>
</body>
</html>';

	EXEC msdb.dbo.sp_send_dbmail	
			@profile_name = @MailProfile,
			@recipients = @MailRecipiants,
			@subject = @MailSubject,
			@body = @MailBodey,
			@body_format = HTML,
			@exclude_query_output = 1;

	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Report].[usp_SetMaxDegreeOfParallelism].[@Replica]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_SetMaxDegreeOfParallelism].[@Replica].[Replica Name]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Report].[usp_SetMaxDegreeOfParallelism].[@Replica].[Databases]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="IsMax" Value="True" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Report]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="288" />
				<Property Name="Length" Value="2092" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 28/09/2014&#xD;&#xA;-- Update date: 29/10/2015 Sharon fix ufn of mail&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;29/11/2015 Sharon Fix Joins&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;13/12/2015 Sharon Conc&#xD;&#xA;-- Description:&#x9;&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Report].[usp_SetMaxDegreeOfParallelism]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlSchema" Name="[Schedule]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlCheckConstraint" Name="[Schedule].[CK_Schedule_Configuration_RunDailyHour_Between0_23]">
			<Property Name="CheckExpressionScript">
				<Value><![CDATA[[RunDailyHour]>=(0) AND [RunDailyHour]<=(23)]]></Value>
			</Property>
			<Relationship Name="CheckExpressionDependencies">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[RunDailyHour]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="9" />
		</Element>
		<Element Type="SqlCheckConstraint" Name="[Schedule].[CK_Schedule_Configuration_RunInterval]">
			<Property Name="CheckExpressionScript">
				<Value><![CDATA[[RunInterval]>=(10)]]></Value>
			</Property>
			<Relationship Name="CheckExpressionDependencies">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[RunInterval]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="10" />
		</Element>
		<Element Type="SqlDefaultConstraint" Name="[Schedule].[DF_Schedule_Configuration_IsActive]">
			<Property Name="DefaultExpressionScript">
				<Value><![CDATA[((1))]]></Value>
			</Property>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForColumn">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[IsActive]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="11" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[Schedule].[FK_Schedule_cl_ConfigurationMailListScheduleTask_Schedule_Configuration]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask].[ScheduleTaskID]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[ID]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="12" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[Schedule].[FK_Schedule_cl_ConfigurationMailListScheduleTask_Schedule_ConfigurationMailList]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask].[MailID]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[Schedule].[Schedule_ConfigurationMailList].[ID]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[Schedule].[Schedule_ConfigurationMailList]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="13" />
		</Element>
		<Element Type="SqlTable" Name="[Schedule].[Log_ScheduleTaskLog]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Log_ScheduleTaskLog].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Log_ScheduleTaskLog].[ScheduleTaskID]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Log_ScheduleTaskLog].[TaskStatus]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Log_ScheduleTaskLog].[StartDate]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Log_ScheduleTaskLog].[EndDate]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Log_ScheduleTaskLog].[EffectedRows]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Log_ScheduleTaskLog].[AdditionalInformation]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[Schedule].[PK_DataIntegrity_ExecSetup]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[Schedule].[Schedule_Configuration].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="14" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[Schedule].[PK_Schedule_ConfigurationMailList]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[Schedule].[Schedule_ConfigurationMailList].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[Schedule].[Schedule_ConfigurationMailList]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="15" />
		</Element>
		<Element Type="SqlTable" Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask].[MailID]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask].[ScheduleTaskID]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="12" />
			<AttachedAnnotation Disambiguator="13" />
		</Element>
		<Element Type="SqlTable" Name="[Schedule].[Schedule_Configuration]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_Configuration].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_Configuration].[Server]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_Configuration].[Database]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_Configuration].[StoredProcedure]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_Configuration].[RunInterval]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_Configuration].[RunDailyHour]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[smallint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_Configuration].[IsActive]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="11" />
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="14" />
			<AttachedAnnotation Disambiguator="9" />
			<AttachedAnnotation Disambiguator="10" />
		</Element>
		<Element Type="SqlTable" Name="[Schedule].[Schedule_ConfigurationMailList]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_ConfigurationMailList].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Schedule].[Schedule_ConfigurationMailList].[Mail]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="15" />
		</Element>
		<Element Type="SqlProcedure" Name="[Schedule].[usp_GetStatusMailDaily]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET NOCOUNT ON;
		DECLARE @MailRecipiants NVARCHAR (255);
		DECLARE @copy_recipients NVARCHAR (255);
		SELECT	@copy_recipients = 'Sharonri@openu.ac.il';
		DECLARE @MailSubject NVARCHAR (255) = N'';
		DECLARE @MailProfile sysname = (SELECT TOP 1 name FROM msdb.dbo.sysmail_profile);
		DECLARE @MailBodey NVARCHAR (max) = N'';

		DECLARE @MailTable NVARCHAR (max) = N'';

		SET @MailSubject = N'Faild Jobs over night: ' + @@SERVERNAME +' | ' + convert (nvarchar (50), GETDATE(), 100) ;
		SET @MailTable = '<table class="sample">
<tr>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Server Name</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Database</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Code</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Task Status</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">How many times</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Execution Date</td>
	<td style="background-color:#E6E6E6; color:#2E64FE; font-weight:bolder;font-size:14px;">Error</td>td>
</tr>';


/* declare variables */
DECLARE @Database sysname;
DECLARE @Code NVARCHAR(MAX);
DECLARE @Status sysname;
DECLARE @NOTimes INT;
DECLARE @Date DATETIME;
DECLARE @Error NVARCHAR(MAX);

DECLARE cuJobMailStatus CURSOR LOCAL FAST_FORWARD READ_ONLY FOR 
SELECT	c.[Database],c.StoredProcedure,l.TaskStatus,COUNT_BIG(1) [HowManyTimesTheJobHaveRun],MAX(l.StartDate) [At],l.AdditionalInformation [Error],REPLACE(dbo.ufn_Util_clr_Conc(DISTINCT ML.Mail),',',';') + ';'
FROM	Schedule.Log_ScheduleTaskLog l
		INNER JOIN Schedule.Schedule_Configuration c ON c.ID = l.ScheduleTaskID
		INNER JOIN Schedule.Schedule_cl_ConfigurationMailListScheduleTask CL ON CL.ScheduleTaskID = c.ID
		INNER JOIN  Schedule.Schedule_ConfigurationMailList ML ON CL.MailID = ML.ID
WHERE	ISNULL(c.Server,@@SERVERNAME) = @@SERVERNAME
		AND l.StartDate BETWEEN DATEADD(DAY, DATEDIFF(DAY, '19000101', DATEADD(DAY,-1,GETDATE())), '19000101') AND DATEADD(DAY, DATEDIFF(DAY, '19000101', DATEADD(DAY,-1,GETDATE())), '23:59:59')
		AND TaskStatus = N'Failed'
GROUP BY c.[Database],c.StoredProcedure,l.TaskStatus,l.AdditionalInformation

OPEN cuJobMailStatus

FETCH NEXT FROM cuJobMailStatus INTO @Database,@Code,@Status,@NOTimes,@Date,@Error,@MailRecipiants;

WHILE @@FETCH_STATUS = 0
BEGIN
    

    SELECT  @MailTable += CONCAT('<tr><td>' , @@SERVERNAME
			, '</td><td>' , @Database 
			, '</td><td>' , @Code
            , '</td><td>' , @Status
			, '</td><td>' , @NOTimes
			, '</td><td>' , @Date
            , '</td><td>' , @Error
			, '</td></tr>');

    SET @MailTable += '
</table>'

	SET @MailBodey+=
'
<!DOCTYPE html>
<html>
<body>
<style type="text/css">
table.sample {
	font-family:Calibri;
	font-size:small;
	border-width: 1px;
	border-spacing: 0px;
	border-style: solid;
	border-color: gray;
	border-collapse: collapse;
	background-color: white;}
table.sample th {
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
table.sample td {
	font-family:Calibri;
	font-size:12px;
	border-width: 1px;
	padding: 3px;
	border-style: solid;
	border-color: gray;
	background-color: white;
	}
</style>
<font face="Calibri (Body)">
<H1><p style=''font-size:18.0pt;font-family:"Bradley Hand ITC"''>' + @MailSubject + N'</p></H1>
<br/>' + @MailTable  + '<br/>

</font>
</body>
</html>';

	EXEC msdb.dbo.sp_send_dbmail	
			@profile_name = @MailProfile,
			@recipients = @MailRecipiants,
			@copy_recipients = @copy_recipients,
			@subject = @MailSubject,
			@body = @MailBodey,
			@body_format = HTML,
			@exclude_query_output = 1;


			
    FETCH NEXT FROM cuJobMailStatus INTO @Database,@Code,@Status,@NOTimes,@Date,@Error,@MailRecipiants;
END

CLOSE cuJobMailStatus;
DEALLOCATE cuJobMailStatus;

END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Log_ScheduleTaskLog]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[ID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Log_ScheduleTaskLog].[ScheduleTaskID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask].[ScheduleTaskID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[ID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_ConfigurationMailList]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_cl_ConfigurationMailListScheduleTask].[MailID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_ConfigurationMailList].[ID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[Database]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[StoredProcedure]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Log_ScheduleTaskLog].[TaskStatus]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Log_ScheduleTaskLog].[StartDate]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Log_ScheduleTaskLog].[AdditionalInformation]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[ufn_Util_clr_Conc]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_ConfigurationMailList].[Mail]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[Server]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Log_ScheduleTaskLog].[TaskStatus]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Log_ScheduleTaskLog].[AdditionalInformation]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="236" />
				<Property Name="Length" Value="4405" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:      Sharon&#xD;&#xA;-- Create date: 04/05/2017&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description: Create processing procedure for processing queue&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Schedule].[usp_GetStatusMailDaily]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Schedule].[usp_ProcessingQueueActivation]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET NOCOUNT ON;
 
  DECLARE @conversation_handle UNIQUEIDENTIFIER;
  DECLARE @message_body XML;
  DECLARE @message_type_name sysname;
 
  WHILE (1=1)
  BEGIN
 
    WAITFOR
    (
      RECEIVE TOP (1)
        @conversation_handle = conversation_handle,
        @message_body = CAST(message_body AS XML),
        @message_type_name = message_type_name
      FROM JobProcessingQueue
    ), TIMEOUT 5000;
 
    IF (@@ROWCOUNT = 0)
    BEGIN
      BREAK;
    END
 
    IF @message_type_name = N'JobRequest'
    BEGIN
      -- Handle complex long processing here
      -- For demonstration we'll pull the account number and send a reply back only
      DECLARE @JobNumber INT = @message_body.value('(JobRequest/JobNumber)[1]', 'INT');
      -- Build reply message and send back
      END CONVERSATION @conversation_handle;
	  EXEC [Schedule].[usp_ScheduleTask_RunJob] @JobNumber

    END
 
    -- If end dialog message, end the dialog
    ELSE IF @message_type_name = N'http://schemas.microsoft.com/SQL/ServiceBroker/EndDialog'
    BEGIN
      END CONVERSATION @conversation_handle;
    END
 
    -- If error message, log and end conversation
    ELSE IF @message_type_name = N'http://schemas.microsoft.com/SQL/ServiceBroker/Error'
    BEGIN
      -- Log the error code and perform any required handling here
      -- End the conversation for the error
      END CONVERSATION @conversation_handle;
    END
 
  END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[JobProcessingQueue]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[usp_ScheduleTask_RunJob]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="236" />
				<Property Name="Length" Value="1768" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:      Sharon&#xD;&#xA;-- Create date: 04/05/2017&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description: Create processing procedure for processing queue&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Schedule].usp_ProcessingQueueActivation&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Schedule].[usp_RequestQueueActivation]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
  SET NOCOUNT ON;
 
  DECLARE @conversation_handle UNIQUEIDENTIFIER;
  DECLARE @message_body XML;
  DECLARE @message_type_name sysname;
 
  WHILE (1=1)
  BEGIN
 
    WAITFOR
    (
      RECEIVE TOP (1)
        @conversation_handle = conversation_handle,
        @message_body = CAST(message_body AS XML),
        @message_type_name = message_type_name
      FROM JobRequestQueue
    ), TIMEOUT 5000;
 
    IF (@@ROWCOUNT = 0)
    BEGIN
      BREAK;
    END
 
    IF @message_type_name = N'JobRequest'
    BEGIN
      -- If necessary handle the reply message here
      DECLARE @JobNumber INT = @message_body.value('(JobRequest/JobNumber)[1]', 'INT');
      -- Build reply message and send back
      END CONVERSATION @conversation_handle;
	  IF @JobNumber IS NOT NULL EXEC [Schedule].[usp_ScheduleTask_RunJob] @JobNumber;
      -- Since this is all the work being done, end the conversation to send the EndDialog message
      END CONVERSATION @conversation_handle;
    END
 
    -- If end dialog message, end the dialog
    ELSE IF @message_type_name = N'http://schemas.microsoft.com/SQL/ServiceBroker/EndDialog'
    BEGIN
       END CONVERSATION @conversation_handle;
    END
 
    -- If error message, log and end conversation
    ELSE IF @message_type_name = N'http://schemas.microsoft.com/SQL/ServiceBroker/Error'
    BEGIN
       END CONVERSATION @conversation_handle;
    END
 
  END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[JobRequestQueue]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[usp_ScheduleTask_RunJob]" />
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="248" />
				<Property Name="Length" Value="1756" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:      Sharon&#xD;&#xA;-- Create date: 04/05/2017&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description: Create procedure for processing replies to the request queue&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Schedule].usp_RequestQueueActivation&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Schedule].[usp_ScheduleTask_ExecAll]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN  
    SET NOCOUNT ON;

    DECLARE @JobRequest TABLE (JobNumber INT NOT NULL);
	DECLARE @JobNumber INT;
    DECLARE @now TIME = CONVERT(TIME,GETDATE());
	DECLARE @MessageBody XML;
    
	;WITH hadr AS (
		SELECT DISTINCT
				dbcs.database_name AS DatabaseName,IIF(ISNULL(arstates.role, 3) = 1,ISNULL(dbcs.is_database_joined, 0),0) IsAccessable,AG.name
		FROM    master.sys.availability_groups AS AG
				LEFT OUTER JOIN master.sys.dm_hadr_availability_group_states AS agstates ON AG.group_id = agstates.group_id
				INNER JOIN master.sys.availability_replicas AS AR ON AG.group_id = AR.group_id
				INNER JOIN master.sys.dm_hadr_availability_replica_states AS arstates ON AR.replica_id = arstates.replica_id
																	  AND arstates.is_local = 1
				INNER JOIN master.sys.dm_hadr_database_replica_cluster_states AS dbcs ON arstates.replica_id = dbcs.replica_id
				LEFT OUTER JOIN master.sys.dm_hadr_database_replica_states AS dbrs ON dbcs.replica_id = dbrs.replica_id
                                                              AND dbcs.group_database_id = dbrs.group_database_id
	), DB AS (
		SELECT	D.name ,H.IsAccessable ,H.name AGname
		FROM	sys.databases D
				LEFT JOIN hadr H ON D.name = H.DatabaseName 
		WHERE	ISNULL(H.IsAccessable,1) = 1
				AND D.[state] = 0
	)
	INSERT @JobRequest
    SELECT  ES.ID
    FROM    [Schedule].[Schedule_Configuration]ES
            INNER JOIN DB D ON D.name = ES.[Database]
    WHERE   ES.[RunDailyHour] = DATEDIFF(hour, '00:00:00', @now)
            AND ISNULL(ES.Server,@@SERVERNAME) = @@SERVERNAME
            AND ES.IsActive = 1
	UNION ALL
    -- Run interval SPs
    SELECT  ES.ID
    FROM    [Schedule].[Schedule_Configuration] ES
            INNER JOIN DB D ON D.name = ES.[Database]
    WHERE   DATEDIFF(minute, '00:00:00', @now) % ES.[RunInterval] < 3 -- עד הפרש של 3 דקות
            AND ISNULL(ES.Server,@@SERVERNAME) = @@SERVERNAME
            AND ES.IsActive = 1;

	IF EXISTS (SELECT TOP 1 1 FROM @JobRequest)
	BEGIN
	    /* declare variables */
	    
	    DECLARE cuJobs CURSOR LOCAL FAST_FORWARD READ_ONLY FOR SELECT JobNumber FROM @JobRequest
	    
	    OPEN cuJobs
	    
	    FETCH NEXT FROM cuJobs INTO @JobNumber
	    
	    WHILE @@FETCH_STATUS = 0
	    BEGIN
	        
			SELECT @MessageBody = CONCAT('<JobRequest><JobNumber>',@JobNumber,'</JobNumber></JobRequest>');
			EXECUTE [Schedule].usp_SendBrokerMessage @MessageBody;
	        FETCH NEXT FROM cuJobs INTO @JobNumber
	    END
	    
	    CLOSE cuJobs
	    DEALLOCATE cuJobs
	END
       
    
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[Database]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[ID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[RunDailyHour]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[Server]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[IsActive]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[RunInterval]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[usp_ScheduleTask_ExecAll].[@JobRequest].[JobNumber]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[usp_SendBrokerMessage]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Schedule].[usp_ScheduleTask_ExecAll].[@JobRequest]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Schedule].[usp_ScheduleTask_ExecAll].[@JobRequest].[JobNumber]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[hadr]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[hadr].[DatabaseName]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[hadr].[IsAccessable]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[hadr].[name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[DB]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[DB].[name]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[DB].[IsAccessable]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Schedule].[usp_ScheduleTask_ExecAll].[CTE1].[DB].[AGname]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="199" />
				<Property Name="Length" Value="2851" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:      Sharon&#xD;&#xA;-- Create date: 04/05/2017&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description: Run on time&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Schedule].[usp_ScheduleTask_ExecAll]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Schedule].[usp_ScheduleTask_RunJob]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN  
    SET NOCOUNT ON;

    DECLARE @cmd NVARCHAR(MAX) = '';
    DECLARE @now TIME = CONVERT(TIME,GETDATE());

    SELECT  @cmd += N'

BEGIN TRY  
       SELECT @StartDate = GETDATE(); 

       EXEC ' + QUOTENAME(ES.[Database]) + N'.' + ES.[StoredProcedure] + N';
       SET @RC = @@ROWCOUNT;
       SELECT @EndDate = GETDATE();

       INSERT [Schedule].[Log_ScheduleTaskLog]
       (ScheduleTaskID, TaskStatus, StartDate, EndDate, EffectedRows, AdditionalInformation)
       VALUES (' + CONVERT(NVARCHAR(10),ES.ID) + N',''successfully'',@StartDate,@EndDate,@RC,NULL)
              
END TRY
BEGIN CATCH
       SELECT @EndDate = GETDATE();
       SELECT @err = ERROR_MESSAGE();
       INSERT [Schedule].[Log_ScheduleTaskLog] 
       (ScheduleTaskID, TaskStatus, StartDate, EndDate, EffectedRows, AdditionalInformation)
       VALUES (' + CONVERT(NVARCHAR(10),ES.ID) + N',''Failed'',@StartDate,GETDATE(),NULL,@err)

END CATCH
'
    FROM    [Schedule].[Schedule_Configuration]ES
            INNER JOIN sys.databases D WITH(NOLOCK) ON D.name = ES.[Database]
    WHERE   @JobID = ES.ID
            AND ES.IsActive = 1
            AND D.[state] = 0;

       
    SET @cmd = N'
DECLARE @RC INT = 0,
              @err NVARCHAR(2048) = '''',
              @StartDate DATETIME ,
              @EndDate DATETIME;
' + @cmd;
    EXEC sys.sp_executesql @cmd;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[time]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[Database]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[StoredProcedure]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[ID]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[usp_ScheduleTask_RunJob].[@JobID]" />
				</Entry>
				<Entry>
					<References Name="[Schedule].[Schedule_Configuration].[IsActive]" />
				</Entry>
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Schedule].[usp_ScheduleTask_RunJob].[@JobID]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="193" />
				<Property Name="Length" Value="1669" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:      Sharon&#xD;&#xA;-- Create date: 2017&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description: Run on time&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Schedule].[usp_ScheduleTask_RunJob] @JobID INT = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Schedule].[usp_SendBrokerMessage]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	DECLARE @FromService SYSNAME = 'JobRequestService',
			@ToService   SYSNAME = 'JobProcessingService',
			@Contract    SYSNAME = 'JobContract',
			@MessageType SYSNAME = 'JobRequest',
			@conversation_handle UNIQUEIDENTIFIER;
 
  BEGIN TRANSACTION;
 
  BEGIN DIALOG CONVERSATION @conversation_handle
    FROM SERVICE @FromService
    TO SERVICE @ToService
    ON CONTRACT @Contract
    WITH ENCRYPTION = OFF;
 
  SEND ON CONVERSATION @conversation_handle
    MESSAGE TYPE @MessageType(@MessageBody);
 
  COMMIT TRANSACTION;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Schedule].[usp_SendBrokerMessage].[@MessageBody]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Schedule].[usp_SendBrokerMessage].[@MessageBody]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlXmlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[xml]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Schedule]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="237" />
				<Property Name="Length" Value="882" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:      Sharon&#xD;&#xA;-- Create date: 04/05/2017&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description: Create the wrapper procedure for sending messages&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Schedule].usp_SendBrokerMessage &#xD;&#xA;&#x9;@MessageBody XML&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlSchema" Name="[Server]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[Server].[LongRunningQuery]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[DateTaken]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[Session ID]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[Database Name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[command]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[statement_text]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[command_text]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[wait_type]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="60" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[wait_time]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[MB used]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Precision" Value="53" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[float]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[MB used system]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Precision" Value="53" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[float]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[MB reserved]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Precision" Value="53" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[float]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[MB reserved system]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Precision" Value="53" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[float]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[LongRunningQuery].[Record count]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[Server].[SessionInfo]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[DateTaken]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[dd hh:mm:ss.mss]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="15" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[SessionID]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[Database Name]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[StoredProcedure]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="255" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[HostName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[LoginName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[ProgramName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="255" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[ConnectionMethud]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[Status]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[WaitType]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="255" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[TransactionIsolationLevel]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[Command]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[CommandText]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[SessionInfo].[KillThatMotherFuker]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="25" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[Server].[usp_App_GetOrphanedSQLFile]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;

	-- Get the set of fixed drives. Some drives you'll want to exclude. 
	if object_id('tempdb..#tmpDrives') is not null
		drop table #tmpDrives
 
	create table #tmpDrives
	(
		Drive        char(1) not null,
		MBFreeUnused int     not null
	)

	insert #tmpDrives  exec xp_fixeddrives

	delete from #tmpDrives
	 where Drive in ('C')

	-- Iterate through all the fixed drives, looking for database files. 
	-- Some files we'll want to delete. 
	if object_id('tempdb..#tmpOsFiles') is not null
		drop table #tmpOsFiles
 
	create table #tmpOsFiles
	(
		OsFile varchar(260) null
	)

	declare @Drive char(1)
	declare @Sql nvarchar(4000)

	declare cur cursor LOCAL FAST_FORWARD for
		select Drive from #tmpDrives

	open cur
	fetch next from cur into @Drive

	while @@fetch_status = 0
	begin
		raiserror(@Drive, 10, 1) with nowait

		set @Sql = 'dir ' + @Drive + ':\*.mdf /a-d /a-h /a-s /a-r /b /s'
		insert #tmpOsFiles  exec xp_cmdshell @Sql

		set @Sql = 'dir ' + @Drive + ':\*.ndf /a-d /a-h /a-s /a-r /b /s'
		insert #tmpOsFiles  exec xp_cmdshell @Sql

		set @Sql = 'dir ' + @Drive + ':\*.ldf /a-d /a-h /a-s /a-r /b /s'
		insert #tmpOsFiles  exec xp_cmdshell @Sql

		fetch next from cur into @Drive
	end

	close cur
	deallocate cur

	delete from #tmpOsFiles
	 where OsFile is null
		or OsFile = 'File Not Found'
		or OsFile like '%:\$RECYCLE_BIN\%' escape '~' 
		--or OsFile like '%:\Program Files\Microsoft SQL Server%' escape '~' 
		--or OsFile like '%:\SW_DVD9_SQL_Svr_Enterprise_Edtn_2008_R2_English_MLF_X16-29540%' escape '~'

	-- For each file, get the date modified and the size.  The dir command gives 
	-- use a line like this:10/08/2013  02:37 PM            228253 TLXPVSQL01_TSS_ERD.png
	alter table #tmpOsFiles add DtModified datetime null default(''),SizeMB     int      null default('')

	declare @Dir    nvarchar(260)
	declare @OsFile nvarchar(260)

	if object_id('tempdb..#tmpOsFileDetails') is not null
		drop table #tmpOsFileDetails
 
	create table #tmpOsFileDetails
	(
		OsFileDetails nvarchar(4000) null
	)

	declare cur cursor LOCAL FAST_FORWARD for
		select OsFile from #tmpOsFiles

	open cur

	fetch next from cur into @OsFile

	while @@fetch_status = 0
	begin
		set @Sql = 'dir "' + @OsFile + '" /-c'
		insert #tmpOsFileDetails  exec xp_cmdshell @Sql

		delete from #tmpOsFileDetails
		 where OsFileDetails is null
			or OsFileDetails like '%Volume in drive % is %'
			or OsFileDetails like '%Volume Serial Number is %'
			or OsFileDetails like '%1 File(s) %'
			or OsFileDetails like '%0 Dir(s) %'

		select @Dir = rtrim(ltrim(replace(OsFileDetails, 'Directory of', ''))) + '\'
		  from #tmpOsFileDetails
		 where OsFileDetails like '%Directory of %'

		delete from #tmpOsFileDetails
		 where OsFileDetails like '%Directory of %'
    
		update #tmpOsFiles
		   set DtModified = substring(ofd.OsFileDetails,  1, 20),
			   SizeMB     = cast(substring(ofd.OsFileDetails, 21, 19) as bigint) / 1024 / 1024
		  from #tmpOsFileDetails   ofd
		  join #tmpOsFiles         os
			on os.OsFile = @Dir + substring(ofd.OsFileDetails, 40, 4000)

		delete from #tmpOsFileDetails

		fetch next from cur into @OsFile
	end

	close cur
	deallocate cur
	-- Now list the OS files that don't have an entry in the instance.
	IF OBJECT_ID('tempdb..#Exeption') IS NOT NULL
	BEGIN	
		INSERT	#Exeption
		SELECT  @@SERVERNAME ServerName,
				'File' Type,
				os.OsFile +' Size(' + CONVERT(VARCHAR(10),os.SizeMB) + 'mb) last change on - ' + CONVERT(VARCHAR(10),os.DtModified) + '(' + CONVERT(VARCHAR(10),datediff(Day, os.DtModified, getdate())) + ')'  Message ,
				 NULL URL,
				'Minor' Severity,
				'Check this file if necessary' Action 
		FROM	 master.sys.master_files mf
				 right join #tmpOsFiles os on mf.physical_name = os.OsFile
		where	 mf.physical_name is null
		order by os.SizeMB desc;
	END
	ELSE
	BEGIN
 
		select os.*
			 , datediff(Day, os.DtModified, getdate()) as DaysOld
		  from master.sys.master_files   mf
	right join #tmpOsFiles               os
			on mf.physical_name = os.OsFile
		 where mf.physical_name is null
	  order by os.SizeMB desc;
	  select SUM(os.SizeMB) TotalSizeMB
		from master.sys.master_files   mf
			 right join #tmpOsFiles               os			on mf.physical_name = os.OsFile
		 where mf.physical_name is null
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[char]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpDrives]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpDrives].[Drive]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFiles]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFiles].[OsFile]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFileDetails]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFileDetails].[OsFileDetails]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFiles].[OsFile]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFileDetails].[OsFileDetails]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFiles].[OsFile]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpDrives]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpDrives].[Drive]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[char]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpDrives].[MBFreeUnused]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFiles]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFiles].[OsFile]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="260" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFileDetails]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_GetOrphanedSQLFile].[#tmpOsFileDetails].[OsFileDetails]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="506" />
				<Property Name="Length" Value="4987" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 19/01/2016&#xD;&#xA;-- Description:&#x9;Generates a list of MDF, NDF, and LDF files that do not have a matching      &#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;entry in the instance - that is, finds the orphaned ones.  You can exclude   &#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;specific drives, and specific folders.&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;https://www.toadworld.com/platforms/sql-server/b/weblog/archive/2015/04/20/find-orphaned-mdf-ndf-and-ldf-files-on-all-drives&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Server].[usp_App_GetOrphanedSQLFile]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Server].[usp_App_RunCheck]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	DECLARE @CPU_Core INT 
	IF OBJECT_ID('tempdb..#Exeption') IS NOT NULL DROP TABLE #Exeption;
	-- Collecte all errors from checks.
	CREATE TABLE #Exeption (
		ServerName sysname COLLATE SQL_Latin1_General_CP1_CI_AS,
		Type NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CI_AS,
		Message NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CI_AS,
		URL VARCHAR(512) COLLATE SQL_Latin1_General_CP1_CI_AS,
		Severity sysname COLLATE SQL_Latin1_General_CP1_CI_AS,
		Action NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CI_AS
	);
	-- Get VLF Counts for all databases on the instance (Query 25) (VLF Counts)
	-- (adapted from Michelle Ufford) 
	CREATE TABLE #VLFInfo (RecoveryUnitID int, FileID  int,
						   FileSize bigint, StartOffset bigint,
						   FSeqNo      bigint, [Status]    bigint,
						   Parity      bigint, CreateLSN   numeric(38));
	 
	CREATE TABLE #VLFCountResults(DatabaseName sysname, VLFCount int);
	 
	EXEC sp_MSforeachdb N'Use [?]; 

					INSERT INTO #VLFInfo 
					EXEC sp_executesql N''DBCC LOGINFO([?])WITH NO_INFOMSGS''; 
	 
					INSERT INTO #VLFCountResults 
					SELECT DB_NAME(), COUNT(*) 
					FROM #VLFInfo; 

					TRUNCATE TABLE #VLFInfo;'
	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Database' Type,
			'High VLF counts can affect write performance and they can make database restores and recovery take much longer. ' + DatabaseName + '(VLF:' + CONVERT(VARCHAR(10),VLFCount ) + ')' Message,
			NULL URL,
			'Minor' Severity,
			'Try to keep your VLF counts under 200 in most cases' Action  
	FROM	#VLFCountResults
	WHERE	VLFCount > 200
	ORDER BY VLFCount DESC;
	-- High VLF counts can affect write performance 
	-- and they can make database restores and recovery take much longer
	-- Try to keep your VLF counts under 200 in most cases	 
	DROP TABLE #VLFInfo;
	DROP TABLE #VLFCountResults;


	----– SQL Server Error log. This query might take a few seconds
	----– if you have not recycled your error log recently
	--CREATE TABLE #Manufacturer (LogDate DATETIME,ProcessInfo sysname,Text VARCHAR(4000))
	--INSERT #Manufacturer
	--EXEC xp_readerrorlog 0, 1, "Manufacturer";

	--SELECT TOP 1 1 FROM #Manufacturer WHERE Text LIKE '%VMware%'
	IF EXISTS(SELECT TOP 1 1 FROM sys.dm_os_sys_info WHERE virtual_machine_type = 1) /*HYPERVISOR*/
	BEGIN
		SELECT	@CPU_Core = cpu_count/hyperthread_ratio
		FROM	sys.dm_os_sys_info WITH (NOLOCK);

		INSERT	#Exeption
		SELECT  @@SERVERNAME ServerName,
				'CPU' Type,
				'CPU resources ratio of the physical cores is 1:' + CONVERT(VARCHAR(10), cpu_count / hyperthread_ratio) Message ,
				'http://www.vmware.com/files/pdf/solutions/SQL_Server_on_VMware-Best_Practices_Guide.pdf' URL,
				'Major' Severity,
				'Provide CPU resources by maintaining a 1:1 ratio of the physical cores' Action 
		FROM	sys.dm_os_sys_info WITH (NOLOCK) 
		WHERE	hyperthread_ratio != 1
				AND cpu_count / hyperthread_ratio > 1;
		--INSERT	#Exeption
		--SELECT  @@SERVERNAME ServerName,
		--		'Memory' Type,
		--		'CPU resources ratio of the physical cores is ' + CONVERT(VARCHAR(10),cpu_count/hyperthread_ratio ) + ':' + CONVERT(VARCHAR(10),hyperthread_ratio ) Message,
		--		'http://www.vmware.com/files/pdf/solutions/SQL_Server_on_VMware-Best_Practices_Guide.pdf' URL,
		--		'Major' Severity,
		--		'Provide CPU resources by maintaining a 1:1 ratio of the physical cores' Action 
		--FROM	sys.dm_os_sys_info WITH (NOLOCK) 
		--WHERE	hyperthread_ratio != 1	

	
		/*---------------------------------------------------------------------------------------------------
		4.3.4.2. Tier 1 SQL Server workloads 
		Achieving adequate performance is the primary goal. Consider setting the memory reservation equal to 
		the provisioned memory, to avoid ballooning or swapping. When calculating the amount of memory to 
		provision for the virtual machine, use the following formulas: 
		VM Memory = SQL Max Server Memory + ThreadStack + OS Mem + VM Overhead 
		ThreadStack = SQL Max Worker Threads * ThreadStackSize 
		ThreadStackSize	 = 1MB on x86 
						 = 2MB on x64 
						 = 4MB on IA64 
		OS Mem: 1GB for every 4 CPU Cores 

		*/
		DECLARE @OS_Mem FLOAT,
				@ThreadStack INT,
				@vCPU INT,
				@PhysicalMemory INT,
				@VMOverhead INT

		IF OBJECT_ID('[Tempdb].[dbo].[#_XPMSVER]') IS NOT NULL DROP TABLE [dbo].[#_XPMSVER]
		CREATE TABLE [dbo].[#_XPMSVER]([IDX] [int] NULL
		,[NAME] [varchar](100) NULL
		,[INT_VALUE] [float] NULL
		,[C_VALUE] [varchar](128) NULL ) ON [PRIMARY]
		INSERT INTO [#_XPMSVER]
		EXEC( 'master.dbo.xp_msver')
		DECLARE @PlatformType INT 
		SELECT	@PlatformType = CASE WHEN C_VALUE LIKE '%x86%' THEN 1
									 WHEN C_VALUE LIKE '%x64%' THEN 2
									 WHEN C_VALUE LIKE '%IA64%' THEN 4
				END
		FROM	[#_XPMSVER]
		WHERE	name = 'Platform'

			--OS Mem: 1GB for every 4 CPU Cores 
			SELECT	@OS_Mem = (cpu_count/hyperthread_ratio)/4.0,
					@vCPU = cpu_count,
					@PhysicalMemory = physical_memory_kb/1024 --MB
			FROM	sys.dm_os_sys_info WITH (NOLOCK);
	
			SELECT	@ThreadStack = max_workers_count * @PlatformType 
			FROM	sys.dm_os_sys_info WITH (NOLOCK);
	
			SELECT	@VMOverhead = mo.Memory_MB
			FROM	[Server].[VM_MemoryOverhead] mo
			WHERE	mo.vCPU = CASE WHEN @vCPU > 8 THEN 8 ELSE @vCPU END
					AND @PhysicalMemory BETWEEN VM_Memory_MB_From AND VM_Memory_MB_Till;

			INSERT	#Exeption
			SELECT  @@SERVERNAME ServerName,
					'Memory' Type,
					'Minimum Memory For This VM is ' + CONVERT(VARCHAR(50),@PhysicalMemory ) + 'MB and does not meet VM requirements: ' + CONVERT(VARCHAR(50),(CONVERT(BIGINT,value)) + @ThreadStack + @OS_Mem + @VMOverhead ) Message,
					'http://www.vmware.com/files/pdf/solutions/SQL_Server_on_VMware-Best_Practices_Guide.pdf' URL,
					'Major' Severity,
					'VM Memory = SQL Max Server Memory + ThreadStack + OS Mem + VM Overhead ' Action 
			FROM	sys.configurations WITH (NOLOCK)
			WHERE	name = 'max server memory (MB)'
					AND (CONVERT(BIGINT,value)) + @ThreadStack + @OS_Mem + @VMOverhead > @PhysicalMemory
					and value != '2147483647';
			---------------------------------------------------------------------------------------------------
	END

	-- Memory
	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Memory' Type,
			'Max server memory configure worng ' + CONVERT(varchar(25),C.value) + 'MB. Physical memory: ' + CONVERT(varchar(25),I.physical_memory_kb/1024) + 'MB. You should leave about 10-12% for OS.' Message,
			NULL URL,
			'Minor' Severity,
			'Configure max server memory' Action 
	FROM	sys.configurations C WITH (NOLOCK)
			CROSS JOIN sys.dm_os_sys_info I WITH (NOLOCK)
			CROSS APPLY (SELECT TOP 1 CASE WHEN value = 1 THEN 0.12 ELSE 0.1 END Factor FROM sys.configurations iC WITH (NOLOCK) WHERE	iC.name = 'clr enabled') uf
	WHERE	C.name = 'max server memory (MB)'
			AND C.value > CONVERT(INT,((I.physical_memory_kb - (CASE WHEN (I.physical_memory_kb * uf.Factor) < 4194304 THEN 4194304.0 ELSE I.physical_memory_kb * uf.Factor END))/1024))
	
	--Average Page Life Expectancy
/*
For those of you not familiar with Page Life Expectancy (PLE), this is the length
of time that a database page will stay in the buffer cache without references. 
Microsoft recommends a minimum target of 300 seconds for PLE, which is roughly (5) minutes.
I have to admit that even in my own environment, we rarely see PLE more than (3) to (4) minutes.
I wondered what would the average DBA do in a situation where they do not have the luxury of using
a 3rd party monitoring tool to capture (PLE)? In this post I decided to share a useful script that
I wrote that will sample the DMV sys.dm_os_performance_counters table to provide an average PLE 
captured in (1) minute intervals. I hope this query will prove useful for those DBA's that do not
have a 3rd party monitoring tool, or find themselves in a situation where they can only rely on 
a query to give them the results.
*/

/****************************************************************************** 
NOTES: 
 This script provides a sampling of PLE based on (1) minute intervals from 
 sys.dm_os_performance_counters. Originally written on December 29, 2012 
 by Akhamie Patrick
*******************************************************************************/ 


DECLARE @counter INT --This will be used to iterate the sampling loop for the PLE measure. 
SET @counter = 0 
CREATE TABLE #pleSample
    (
      CaptureTime DATETIME ,
      PageLifeExpectancy BIGINT
    ) 
WHILE @counter < 30 --Sampling will run approximately 1 minute. 
    BEGIN 
 	--Captures Page Life Expectancy from sys.dm_os_performance_counters 
        INSERT  INTO #pleSample
                ( CaptureTime ,
                  PageLifeExpectancy 
 	            )
                SELECT  CURRENT_TIMESTAMP ,
                        cntr_value
                FROM    sys.dm_os_performance_counters
                WHERE   [object_name] = N'SQLServer:Buffer Manager'
                        AND counter_name = N'Page life expectancy'
        SET @counter = @counter + 1 
        WAITFOR DELAY '000:00:02'
    END 
IF OBJECT_ID('tempdb..#PLE') IS NOT NULL DROP TABLE #PLE
--This query will return the average PLE based on a 1 minute sample. 
SELECT  AVG(PageLifeExpectancy) AS [AveragePageLifeExpectancy]
INTO	#PLE
FROM    #pleSample 
IF OBJECT_ID('tempdb..#pleSample') IS NOT NULL DROP TABLE #pleSample

	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName ,
			'Memory' Type ,
			'Page life expectancy(PLE) is to low - '
			+ CONVERT(VARCHAR(25), [AveragePageLifeExpectancy]) + 'sec. Physical memory: '
			+ CONVERT(VARCHAR(25), @PhysicalMemory) + 'MB' Message ,
			NULL URL ,
			'Minor' Severity ,
			'PLE is a good measurement of memory pressure. Higher PLE is better. Watch the trend, not the absolute value.(300 * 4GB(on MAX server mem))' Action 
	FROM    #PLE
			CROSS APPLY (	SELECT	CONVERT(INT,CASE WHEN CONVERT(INT,C.value)/1024.0 < (I.physical_memory_kb/1024.0/1024.0) THEN ((CONVERT(INT,C.value)/1024.0)/4) * 300 ELSE ((I.physical_memory_kb/1024.0/1024.0)/4) * 300 END )PLEvalue
								FROM	sys.configurations C WITH (NOLOCK) CROSS JOIN sys.dm_os_sys_info I WITH (NOLOCK)
								WHERE	C.name = 'max server memory (MB)')T
	WHERE   [AveragePageLifeExpectancy] < t.PLEvalue -- Seconds
	OPTION (RECOMPILE);
	IF OBJECT_ID('tempdb..#PLE') IS NOT NULL DROP TABLE #PLE;
	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Memory' Type,
			'"MAX_EVENTS_LIMIT" on XE is set to high(' + CONVERT(VARCHAR(15),ring_buffer_event_count)+ ')' Message,
			'http://www.sqlskills.com/blogs/jonathan/why-i-hate-the-ring_buffer-target-in-extended-events/?utm_source=rss&utm_medium=rss&utm_campaign=why-i-hate-the-ring_buffer-target-in-extended-events' URL,
			'Major' Severity,
			'Set "MAX_EVENTS_LIMIT" to less than ' + CONVERT(VARCHAR(15),ring_buffer_event_count) Action 
	FROM    ( SELECT    target_data.value('(RingBufferTarget/@eventCount)[1]',
										  'int') AS ring_buffer_event_count ,
						target_data.value('count(RingBufferTarget/event)', 'int') AS event_node_count
			  FROM      ( SELECT    CAST(target_data AS XML) AS target_data
						  FROM      sys.dm_xe_sessions AS s
									INNER JOIN sys.dm_xe_session_targets AS st ON s.address = st.event_session_address
						  WHERE     s.name = N'system_health'
									AND st.target_name = N'ring_buffer'
						) AS n
			) AS t
	WHERE	ring_buffer_event_count > 10000 -- MAX_EVENTS_LIMIT
	OPTION (RECOMPILE);


----------------------------- Server ---------------------------------
	--Service
	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Server' Type,
			servicename + ' startup state: ' + startup_type_desc Message,
			NULL URL,
			'Major' Severity,
			'Change service startup methud to Automatic' ACTION
	FROM    sys.dm_server_services WITH ( NOLOCK )
	WHERE   servicename LIKE 'SQL Server%'
			AND startup_type != 2 --Automatic
	UNION ALL 
	SELECT  @@SERVERNAME ServerName,
			'Server' Type,
			servicename + ' is in state: ' + status_desc Message,
			NULL URL,
			'Major' Severity,
			'Start Service' Action 
	FROM    sys.dm_server_services WITH ( NOLOCK )
	WHERE   servicename LIKE 'SQL Server%'
			AND status != 4 --Running
	UNION ALL 
	SELECT  @@SERVERNAME ServerName,
			'Server' Type,
			servicename + ' service account is differnt from agent service' Message,
			NULL URL,
			'Major' Severity,
			'Change Service account of agent service to ' + s.service_account Action 
	FROM    sys.dm_server_services s WITH ( NOLOCK )
			CROSS JOIN (SELECT	service_account
			            FROM	sys.dm_server_services WITH ( NOLOCK )
						WHERE   servicename LIKE 'SQL Server Agent%') t
	WHERE   servicename LIKE 'SQL Server (%'
			AND t.service_account != s.service_account
	OPTION  ( RECOMPILE );
	
	--configurations
	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Server' Type,
			CONVERT(varchar(40),C.Name) + ' configure worng ' Message,
			NULL URL,
			'Worning' Severity,
			'Turn on - ' + CONVERT(varchar(25),C.Name) Action 
	FROM	sys.configurations C WITH (NOLOCK)
	WHERE	C.name IN ('optimize for ad hoc workloads','backup compression default')
			AND C.value = 0
	OPTION  ( RECOMPILE );

	INSERT	#Exeption
	SELECT	@@SERVERNAME ServerName,
			'Server' Type,
			CONVERT(varchar(40),C.Name) + ' value(' + CONVERT(varchar(25),C.value) + ') !=  value_in_use(' + CONVERT(varchar(25),C.value_in_use) + ')' Message,
			NULL URL,
			'Worning' Severity,
			'Turn on - ' + CONVERT(varchar(25),C.Name) Action 
	FROM	sys.configurations C
	WHERE	C.value != C.value_in_use;
	--IF @@VERSION LIKE '%Microsoft SQL Server 2014%'
	--EXEC ('INSERT	#Exeption
	--SELECT	@@SERVERNAME ServerName,
	--		''Server'' Type,
	--		CONVERT(varchar(40),C.Name) + '' value('' + CONVERT(varchar(25),C.value) + '') !=  value_in_use('' + CONVERT(varchar(25),C.value_in_use) + '')'' Message,
	--		NULL URL,
	--		''Worning'' Severity,
	--		''Turn on - '' + CONVERT(varchar(25),C.Name) Action 
	--FROM	sys.configurations C
	--WHERE	C.value != C.value_in_use;');
-------------------------------------------------------------------------------------------
	--TempDB Configuration
	INSERT	#Exeption
	SELECT  TOP 1
			@@SERVERNAME ServerName,
			'Server' Type,
			'TempDB files has different sizes' Message,
			'http://www.confio.com/logicalread/sql-server-tempdb-best-practices-initial-sizing-w01/#.UzEbJfl_tCw' URL,
			'Worning' Severity,
			'Change initial size of tempdb' ACTION
	FROM	sys.master_files MF WITH (NOLOCK) 
			CROSS APPLY (SELECT TOP 1 size,file_id FROM sys.master_files WITH (NOLOCK) WHERE database_id = 2 AND type = 0)iMF
	WHERE	database_id = 2
			AND type = 0
			AND iMF.file_id != MF.file_id
			AND iMF.size != MF.size
	UNION ALL 
	SELECT  TOP 1
			@@SERVERNAME ServerName,
			'Server' Type,
			'TempDB files are lower then logical CPU count' Message,
			'http://www.confio.com/logicalread/sql-server-tempdb-best-practices-multiple-files-w01/#.UzEbCfl_tCw' URL,
			'Worning' Severity,
			'Use of multiple data files of tempdb' ACTION
	FROM	sys.dm_os_sys_info WITH (NOLOCK) 
			CROSS APPLY (SELECT	COUNT_BIG(1) TempDBcnt FROM	sys.master_files WITH (NOLOCK) WHERE	database_id = 2 AND type = 0) Tmp
	WHERE	cpu_count > Tmp.TempDBcnt

	-- Sustained values above 10 suggest further investigation in that area
	-- High Avg Task Counts are often caused by blocking or other resource contention
	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Server' Type,
			'Avg Task Count ' + CONVERT(varchar(25),AVG(current_tasks_count)) Message,
			NULL URL,
			'Worning' Severity,
			'High Avg Task Counts are often caused by blocking or other resource contention'  Action 
	FROM    sys.dm_os_schedulers WITH ( NOLOCK )
	WHERE   scheduler_id < 255
	HAVING AVG(current_tasks_count) > 10
	UNION ALL 
	-- High Avg Runnable Task Counts are a good sign of CPU pressure
	SELECT  @@SERVERNAME ServerName,
			'CPU' Type,
			'Avg Runnable Task Count ' + CONVERT(varchar(25),AVG(runnable_tasks_count)) Message,
			NULL URL,
			'Worning' Severity,
			'High Avg Runnable Task Counts are a good sign of CPU pressure'  Action 
	FROM    sys.dm_os_schedulers WITH ( NOLOCK )
	WHERE   scheduler_id < 255
	HAVING AVG(runnable_tasks_count) > 10
	UNION ALL 
	-- High Avg Pending DiskIO Counts are a sign of disk pressure
	SELECT  @@SERVERNAME ServerName,
			'CPU' Type,
			'Avg Pending DiskIO Count ' + CONVERT(varchar(25),AVG(pending_disk_io_count)) Message,
			NULL URL,
			'Worning' Severity,
			'High Avg Pending DiskIO Counts are a sign of disk pressure'  Action 
	FROM    sys.dm_os_schedulers WITH ( NOLOCK )
	WHERE   scheduler_id < 255
	HAVING AVG(pending_disk_io_count) > 10
	OPTION  ( RECOMPILE );
	----------------------------------------  TraceFlags  ----------------------------------------
    IF OBJECT_ID('tempdb..#TraceStatus') IS NOT NULL DROP TABLE #TraceStatus;
    CREATE TABLE #TraceStatus
    (
        TraceFlag VARCHAR(10) ,
        status BIT ,
        Global BIT ,
        Session BIT
    );
    INSERT  INTO #TraceStatus EXEC ( ' DBCC TRACESTATUS(-1) WITH NO_INFOMSGS')
	----------------------------------------  TraceFlags  ----------------------------------------
	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Server' Type,
			TS.Name Message,
			NULL URL,
			'Minor' Severity,
			'Turn Trace flag on' Action 
	FROM	(SELECT 'Is TF 1118(Immediately allocate an extent (8 pages)) On' Name,'1118' value --http://www.sqlskills.com/blogs/paul/misconceptions-around-tf-1118/
			UNION ALL 
			SELECT 'Is TF 1222(More info about deadlock) On' Name,'1222' value
			UNION ALL 
			SELECT 'Is TF 3226(Suppress the success messages from backups) On' Name,'3226' value
			UNION ALL 
			SELECT 'Is TF 3023(BACKUP WITH CHECKSUM) On' Name,'3023' value --http://www.sqlservercentral.com/blogs/nebraska-sql-from-dba_andy/2014/03/25/backup-checksums-and-trace-flag-3023/
			UNION ALL 
			SELECT 'Is TF 4199 On' Name,'4199' value) TS
			LEFT JOIN #TraceStatus GTS ON GTS.TraceFlag = TS.value
	WHERE	GTS.TraceFlag IS NULL
	
	--Error Log file
	DECLARE @NumErrorLogs INT;
	EXEC master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE',
		N'Software\Microsoft\MSSQLServer\MSSQLServer', N'NumErrorLogs',
		@NumErrorLogs OUTPUT

	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'Server' Type,
			'Number of Error Logs is -' + CONVERT(VARCHAR(10),ISNULL(@NumErrorLogs, -1))+ '. Change to 30 or more.' Message,
			NULL URL,
			'Minor' Severity,
			'/*Configure SQL Server Error Logs*/USE [master]
GO
EXEC xp_instance_regwrite N''HKEY_LOCAL_MACHINE'',
    N''Software\Microsoft\MSSQLServer\MSSQLServer'', N''NumErrorLogs'', REG_DWORD,
    30
GO' Action 
	WHERE	ISNULL(@NumErrorLogs, -1) < 30;

	INSERT	#Exeption
	SELECT  @@SERVERNAME ServerName,
			'JOB' Type,
			'JobName: ' + JobName + ' That run on ' + CONVERT(VARCHAR(25),RunDateTime) + ' took - ' + CONVERT(VARCHAR(25),RunDurationMinutes) + ' minutes' Message,
			NULL URL,
			'Minor' Severity,
			NULL Action 
	FROM	(SELECT  j.name AS 'JobName' ,
					rdm.RunDateTime,
					rdm.RunDurationMinutes,
					ROW_NUMBER() OVER (PARTITION BY j.name ORDER BY rdm.RunDateTime DESC) RN
			FROM    msdb.dbo.sysjobs j
					INNER JOIN msdb.dbo.sysjobhistory h ON j.job_id = h.job_id
					CROSS APPLY (SELECT msdb.dbo.agent_datetime(run_date, run_time) AS 'RunDateTime',( ( h.run_duration / 10000 * 3600 + ( h.run_duration / 100 ) % 100 * 60
						+ run_duration % 100 + 31 ) / 60 ) RunDurationMinutes)rdm
			WHERE   j.enabled = 1  --Only Enabled Jobs
					AND rdm.RunDateTime > DATEADD(DAY,-3,GETDATE())
					AND rdm.RunDurationMinutes > 55)t
	WHERE	T.RN = 1;

	-- Storage
	INSERT	#Exeption
	SELECT	@@SERVERNAME ServerName,
			'Storage' Type,
			'Reads are averaging longer than ' + CASE Type WHEN 1 THEN '10' WHEN 99 THEN '10' ELSE '20' END + 'ms on drive - ' + [Drive] + CASE Type WHEN 1 THEN '(LOG files)' WHEN 99 THEN '(TempDB)' ELSE '(DATA files)' END + ' - ' + CONVERT(VARCHAR(20),RL.[Read Latency]) Message,
			'http://technet.microsoft.com/en-us/library/aa995945(v=exchg.80).aspx' URL,
			'Major' Severity,
						CASE Type WHEN 1 THEN 
			'Transaction log drives
The drive that hosts the transaction log should have average write latencies below 10 ms. Spikes in write latencies should be under 50ms. Writes to the transaction log are synchronous. This means that, before a thread in the Store.exe process can perform another task, the thread must wait for the write to complete. Having low write latencies for the transaction logs is important to server performance. The average Read latency to the transaction log drives should be below 20 ms. Spikes in read latency should be under 50ms. Database Log Record Stalls per second should be less than 10. Database Log Threads Waiting should be less than 10.
Ordinarily, Exchange servers do not read from the transaction logs. Therefore, the read latencies to that drive do not matter. However, because the transaction log write latencies are so important to Exchange performance, it is recommended that, on large servers, you do not use the drives that host transaction logs for any other purpose. In this case, the rate of reads (as measured by LogicalDisk\Disk Reads/sec) should be minimal compared to the rate of writes (LogicalDisk\Disk Writes/sec). The Exchange Server Analyzer will detect if the ratio of reads to writes on the transaction log drive is greater than 0.10 (more than one read for every ten writes).
If there are more than 0.10 reads for every write, you should identify which application is reading from the transaction log drive, and then prevent this action from occurring.' 
			WHEN 99 THEN 
'TEMP and TMP drives   The latency for the drives that contain the TEMP and TMP directories should have read and write latencies below 10 ms. The maximum value for the read or write latency should be below 50 ms.' 
			ELSE 
			'Database drives
The acceptable latency for the drives that contain Exchange database files ( *edb, and *stm files) are as below (higher values indicate a disk bottleneck):
The maximum value for Logical Disk\Avg. Disk sec/Read on a database drive should be less than 50 ms. (0.050 seconds)
The average value for Logical Disk\Avg. Disk sec/Read on a database drive should be less than 20 ms. (0.020 seconds)' 
			END + '
---------------------------------------------------------------------------------------------------------------------------------------
If you are running a RAID-5 disk array, you may want to change to a RAID-10 disk array to improve the available supported IOPS of the disk subsystem.
To improve the available supported IOPS, consider adding additional disks to your disk system.
' Action
	FROM    ( SELECT    LEFT(mf.physical_name, 2) AS Drive ,CASE WHEN MF.database_id = 2  THEN 99 ELSE MF.type END [type],
						SUM(num_of_reads) AS num_of_reads ,
						SUM(io_stall_read_ms) AS io_stall_read_ms ,
						SUM(num_of_writes) AS num_of_writes ,
						SUM(io_stall_write_ms) AS io_stall_write_ms ,
						SUM(num_of_bytes_read) AS num_of_bytes_read ,
						SUM(num_of_bytes_written) AS num_of_bytes_written ,
						SUM(io_stall) AS io_stall
			  FROM      sys.dm_io_virtual_file_stats(NULL, NULL) AS vfs
						INNER JOIN sys.master_files AS mf WITH ( NOLOCK ) ON vfs.database_id = mf.database_id
									AND vfs.file_id = mf.file_id
			  WHERE		MF.database_id NOT IN (1,3,4) -- Master,MSDB,Model
			  GROUP BY  LEFT(mf.physical_name, 2),CASE WHEN MF.database_id = 2  THEN 99 ELSE MF.type END
			) AS tab
			CROSS APPLY (SELECT 
				CASE WHEN num_of_reads = 0 THEN 0 ELSE ( io_stall_read_ms / num_of_reads ) END AS [Read Latency],
				CASE WHEN io_stall_write_ms = 0 THEN 0 ELSE ( io_stall_write_ms / num_of_writes ) END AS [Write Latency] , 
				CASE WHEN ( num_of_reads = 0 AND num_of_writes = 0 ) THEN 0 ELSE ( io_stall / ( num_of_reads + num_of_writes ) ) END AS [Overall Latency] ,
				CASE WHEN num_of_reads = 0 THEN 0 ELSE ( num_of_bytes_read / num_of_reads ) END AS [Avg Bytes/Read] ,
				CASE WHEN io_stall_write_ms = 0 THEN 0 ELSE ( num_of_bytes_written / num_of_writes ) END AS [Avg Bytes/Write] ,
				CASE WHEN ( num_of_reads = 0 AND num_of_writes = 0 ) THEN 0 ELSE ( ( num_of_bytes_read + num_of_bytes_written ) / ( num_of_reads + num_of_writes ) ) END AS [Avg Bytes/Transfer])RL

	WHERE	(tab.type IN (1,99) AND RL.[Read Latency] > 10)
			OR
			(tab.type != 1 AND RL.[Read Latency] > 20)
	UNION ALL 
	SELECT	@@SERVERNAME ServerName,
			'Storage' Type,
			'Writes are averaging longer than ' + CASE Type WHEN 1 THEN '10' WHEN 99 THEN '10' ELSE '20' END + 'ms on drive - ' + [Drive] + CASE Type WHEN 1 THEN '(LOG files)' WHEN 99 THEN '(TempDB)' ELSE '(DATA files)' END + ' - ' + CONVERT(VARCHAR(20),RL.[Write Latency]) Message,
			'http://technet.microsoft.com/en-us/library/aa995945(v=exchg.80).aspx' URL,
			'Major' Severity,
			CASE Type WHEN 1 THEN 
			'Transaction log drives
The drive that hosts the transaction log should have average write latencies below 10 ms. Spikes in write latencies should be under 50ms. Writes to the transaction log are synchronous. This means that, before a thread in the Store.exe process can perform another task, the thread must wait for the write to complete. Having low write latencies for the transaction logs is important to server performance. The average Read latency to the transaction log drives should be below 20 ms. Spikes in read latency should be under 50ms. Database Log Record Stalls per second should be less than 10. Database Log Threads Waiting should be less than 10.
Ordinarily, Exchange servers do not read from the transaction logs. Therefore, the read latencies to that drive do not matter. However, because the transaction log write latencies are so important to Exchange performance, it is recommended that, on large servers, you do not use the drives that host transaction logs for any other purpose. In this case, the rate of reads (as measured by LogicalDisk\Disk Reads/sec) should be minimal compared to the rate of writes (LogicalDisk\Disk Writes/sec). The Exchange Server Analyzer will detect if the ratio of reads to writes on the transaction log drive is greater than 0.10 (more than one read for every ten writes).
If there are more than 0.10 reads for every write, you should identify which application is reading from the transaction log drive, and then prevent this action from occurring.' 
			WHEN 99 THEN 
'TEMP and TMP drives   The latency for the drives that contain the TEMP and TMP directories should have read and write latencies below 10 ms. The maximum value for the read or write latency should be below 50 ms.' 
			ELSE 
			'Database drives
The acceptable latency for the drives that contain Exchange database files ( *edb, and *stm files) are as below (higher values indicate a disk bottleneck):
The maximum value for Logical Disk\Avg. Disk sec/Read on a database drive should be less than 50 ms. (0.050 seconds)
The average value for Logical Disk\Avg. Disk sec/Read on a database drive should be less than 20 ms. (0.020 seconds)' 
			END + '
---------------------------------------------------------------------------------------------------------------------------------------
If you are running a RAID-5 disk array, you may want to change to a RAID-10 disk array to improve the available supported IOPS of the disk subsystem.
To improve the available supported IOPS, consider adding additional disks to your disk system.
' Action
	FROM    ( SELECT    LEFT(mf.physical_name, 2) AS Drive ,CASE WHEN MF.database_id = 2  THEN 99 ELSE MF.type END [type],
						SUM(num_of_reads) AS num_of_reads ,
						SUM(io_stall_read_ms) AS io_stall_read_ms ,
						SUM(num_of_writes) AS num_of_writes ,
						SUM(io_stall_write_ms) AS io_stall_write_ms ,
						SUM(num_of_bytes_read) AS num_of_bytes_read ,
						SUM(num_of_bytes_written) AS num_of_bytes_written ,
						SUM(io_stall) AS io_stall
			  FROM      sys.dm_io_virtual_file_stats(NULL, NULL) AS vfs
						INNER JOIN sys.master_files AS mf WITH ( NOLOCK ) ON vfs.database_id = mf.database_id
													AND vfs.file_id = mf.file_id
			  WHERE		MF.database_id NOT IN (1,3,4) -- Master,MSDB,Model
			  GROUP BY  LEFT(mf.physical_name, 2),CASE WHEN MF.database_id = 2  THEN 99 ELSE MF.type END
			) AS tab
			CROSS APPLY (SELECT 
				CASE WHEN num_of_reads = 0 THEN 0 ELSE ( io_stall_read_ms / num_of_reads ) END AS [Read Latency],
				CASE WHEN io_stall_write_ms = 0 THEN 0 ELSE ( io_stall_write_ms / num_of_writes ) END AS [Write Latency] , 
				CASE WHEN ( num_of_reads = 0 AND num_of_writes = 0 ) THEN 0 ELSE ( io_stall / ( num_of_reads + num_of_writes ) ) END AS [Overall Latency] ,
				CASE WHEN num_of_reads = 0 THEN 0 ELSE ( num_of_bytes_read / num_of_reads ) END AS [Avg Bytes/Read] ,
				CASE WHEN io_stall_write_ms = 0 THEN 0 ELSE ( num_of_bytes_written / num_of_writes ) END AS [Avg Bytes/Write] ,
				CASE WHEN ( num_of_reads = 0 AND num_of_writes = 0 ) THEN 0 ELSE ( ( num_of_bytes_read + num_of_bytes_written ) / ( num_of_reads + num_of_writes ) ) END AS [Avg Bytes/Transfer])RL

	WHERE	(tab.type IN (1,99) AND RL.[Write Latency] > 10)
			OR
			(tab.type != 1 AND RL.[Write Latency] > 20)
	OPTION  ( RECOMPILE );

	INSERT	#Exeption
	SELECT  DISTINCT
			@@SERVERNAME ServerName,
			'Storage' Type,
			vs.volume_mount_point + ' has ' + CAST(CAST(vs.available_bytes AS FLOAT) / CAST(vs.total_bytes AS FLOAT)  * 100 AS VARCHAR(50)) + '% free space.' Message,
			NULL URL,
			'Minor' Severity,
			'Check what files located in ' + vs.volume_mount_point Action 
	FROM    sys.master_files AS f WITH ( NOLOCK )
			CROSS APPLY sys.dm_os_volume_stats(f.database_id, f.[file_id]) AS vs
	WHERE	CAST(CAST(vs.available_bytes AS FLOAT) / CAST(vs.total_bytes AS FLOAT) AS DECIMAL(18,2)) < 0.1
	OPTION  ( RECOMPILE );

	--Your SQL Data and Log Drives Need a 1024Kb Starting offset, and a 64Kb Block Size
	/*
	so there’s only one disk (Disk #0). You’re only interested in the Partition #0 for each disk, because that’s the partition at the start of the disk (which contains the partition offset). My laptop has a proper starting offset: 1048576 bytes = 1048576/1024 = 1024KB.
	*/
	DECLARE @PS VARCHAR(4000) = 'powershell.exe "get-wmiobject win32_diskpartition | select name, startingoffset | foreach{$_.name+''|''+$_.startingoffset/1024+''*''}"'

	DECLARE @output TABLE ( line VARCHAR(255) );
	BEGIN TRY 
		INSERT  @output 
		EXEC xp_cmdshell @PS;
	END TRY
	BEGIN CATCH
		--{TODO: }
	END CATCH

	INSERT	#Exeption
	SELECT	@@SERVERNAME ServerName,
			'Storage' Type,
			'"Starting Offset" on ' + RTRIM(LTRIM(SUBSTRING(line, 1, CHARINDEX('|', line) - 1))) + ' is - ' + SO.StartingOffset + 'Kb' Message,
			'http://technet.microsoft.com/en-us/library/cc966412.aspx
http://www.midnightdba.com/Jen/2014/04/decree-set-your-partition-offset-and-block-size-make-sql-server-faster/' URL,
			'Minor' Severity,
			'Ask your SAN guy to change the drive "Starting Offset" to 1024Kb' Action
	FROM    @output
			CROSS APPLY (SELECT TOP 1 RTRIM(LTRIM(SUBSTRING(line, CHARINDEX('|', line) + 1,
									( CHARINDEX('*', line) - 1)
									- CHARINDEX('|', line)))) AS [StartingOffset]) SO
	WHERE	line IS NOT NULL
			AND line LIKE '%Partition #0%'
			AND SO.StartingOffset != '1024'
	ORDER BY 1;
	
	--64kb Block Size
	DECLARE @cmd NVARCHAR(max) = ''
	SELECT	 @cmd +=  '
INSERT  @output 
exec master..xp_cmdshell ''echo 1 > ' + t.physical_name + ':\TestFile.txt''
INSERT  @output 
exec master..xp_cmdshell ''dir ' + t.physical_name + ':\TestFile.txt''

SELECT	@BlockSize = REPLACE(REPLACE(SUBSTRING(line,charINDEX('')'',line)+1,LEN(line)-5),'' '',''''),''bytes'','''')
FROM	@output
WHERE	line LIKE ''%1 File%''

INSERT  @output 
exec master..xp_cmdshell ''del ' + t.physical_name + ':\TestFile.txt''

INSERT	#Exeption
SELECT	@@SERVERNAME ServerName,
		''Storage'' Type,
		''The block size on drive:' + t.physical_name + ':\ is '' + CONVERT(VARCHAR(25),@BlockSize) + ''kb.'' Message,
		''http://technet.microsoft.com/en-us/library/cc966412.aspx
http://www.midnightdba.com/Jen/2014/04/decree-set-your-partition-offset-and-block-size-make-sql-server-faster/'' URL,
		''Minor'' Severity,
		''Ask your System guy to change the block size from '' + CONVERT(VARCHAR(25),@BlockSize) + ''kb to 64kb FOR all your data and log files on drive:' + t.physical_name + ''' Action
WHERE	@BlockSize < 64 


DELETE FROM @output;
'
	FROM	(SELECT	DISTINCT SUBSTRING(physical_name,1,1) physical_name
    		 FROM	sys.master_files WITH (NOLOCK))t

	SELECT @cmd = '
DECLARE @output TABLE ( line VARCHAR(255) );
DECLARE @BlockSize INT

' + @cmd;
	BEGIN TRY 
		EXECUTE sys.sp_executesql @cmd;
	END TRY
	BEGIN CATCH
	END CATCH

	----------------------------------------------
	--cleanUP
	DELETE FROM @output;
	----------------------------------------------
	--All you’re looking for is Bytes Per Cluster. On my laptop, it’s 4096 bytes. Hey, I don’t have dedicated SQL drives on here. 
	--But what you want to see is Bytes Per Cluster : 65536.  Again, that’s 65536 bytes / 1024 = 64KB, 
	--which is what you want for the disks that will hold SQL data and log files.
	DECLARE @svrName VARCHAR(255)
	DECLARE @sql VARCHAR(400)
	--by default it will take the current server name, we can the set the server name as well
	SET @svrName = @@SERVERNAME
	SET @sql = 'powershell.exe -c "Get-WmiObject -ComputerName '
		+ QUOTENAME(@svrName, '''')
		+ ' -Class Win32_Volume -Filter ''DriveType = 3'' | select name,Label,BlockSize | foreach{$_.name+''|''+$_.label+''^''+$_.BlockSize/1024+''*''}"'
		
	--inserting disk name, total space and free space value in to temporary table
	BEGIN TRY 
		INSERT  @output
		EXEC xp_cmdshell @sql
	END TRY
	BEGIN CATCH
		--{TODO: }
	END CATCH

	DECLARE @DISKS TABLE
		(
			id INT IDENTITY ,
			[DiskName] VARCHAR(10) ,
			[Label] VARCHAR(200),
			[BlockSize] VARCHAR(200)
		)

	INSERT  INTO @DISKS
			SELECT  RTRIM(LTRIM(SUBSTRING(line, 1, CHARINDEX('|', line) - 1))) AS drivename ,
					RTRIM(LTRIM(SUBSTRING(line, CHARINDEX('&', line) + 1,
											( CHARINDEX('^', line) - 1 )
											- CHARINDEX('&', line)))) AS 'Label',
					RTRIM(LTRIM(SUBSTRING(line, CHARINDEX('^', line) + 1,
											( CHARINDEX('*', line) - 1)
											- CHARINDEX('^', line)))) AS [BlockSize]
			FROM    @output
			WHERE   line LIKE '[A-Z][:]%'
			ORDER BY drivename

	INSERT	#Exeption
	SELECT	@@SERVERNAME ServerName,
			'Storage' Type,
			'"Block Size" on ' + DiskName + ' is - ' + [BlockSize] + 'Kb' Message,
			'http://technet.microsoft.com/en-us/library/cc966412.aspx
http://www.midnightdba.com/Jen/2014/04/decree-set-your-partition-offset-and-block-size-make-sql-server-faster/' URL,
			'Minor' Severity,
			'Ask from you SAN guy to set DATA and Log Drives to change the "Blok Size" to 64Kb Block Size' Action
	FROM    @DISKS
	WHERE	[BlockSize] < 64;
	--------------------------------------------------------
	DECLARE @command VARCHAR(255)

	SET @command = 'dir "%SystemRoot%\system32\config\software"'

	INSERT INTO @output
	EXEC master.dbo.xp_cmdshell @command;

	INSERT	#Exeption
	SELECT	@@SERVERNAME ServerName,
			'Server' Type,
			'Serious bug in SQL Server 2012 SP1, due to msiexec process keep running. registry file grow to 2GB' Message,
			'http://connect.microsoft.com/SQLServer/feedback/details/770630/msiexec-exe-processes-keep-running-after-installation-of-sql-server-2012-sp1' URL,
			'Minor' Severity,
			'http://rusanu.com/2013/02/15/registry-bloat-after-sql-server-2012-sp1-installation/' Action
	FROM    @output
			CROSS APPLY (SELECT LTRIM(
					REPLACE(
						SUBSTRING(line, CHARINDEX(')', line) + 1, LEN(line))
					, ',', '')
				) TrimLine) TL
	WHERE   line LIKE '%File(s)%bytes'
			AND CONVERT (INT,CONVERT (INT,SUBSTRING(TL.TrimLine,0,CHARINDEX(' ', TL.TrimLine)))/1048576.0/128) = 2 -- 2GB
			AND SERVERPROPERTY('productversion') > '11.0.3000.0'

		BEGIN TRY
        	EXEC [Server].[usp_App_GetOrphanedSQLFile];
        END TRY
        BEGIN CATCH
        	PRINT 'Error on [Server].[usp_App_GetOrphanedSQLFile]'
        END CATCH

	SELECT	* 
	FROM	#Exeption
	ORDER BY Type,Severity
/* TODO -- צריך להכניס את הבדיקה הזאת כאשר מצאנו בלוג עדות לכך שיה את מספרי האררורים 
/*
--18272 --3634
The operating system returned the error '3(The system cannot find the path specified.)' while attempting 'DeleteFile' on 'D:\SQL\BACKUP\RestoreCheckpointDB23.CKP'.
During restore restart, an I/O error occurred on checkpoint file 'D:\SQL\BACKUP\RestoreCheckpointDB24.CKP' (operating system error 3(The system cannot find the path specified.)). The statement is proceeding but cannot be restarted. Ensure that a valid storage location exists for the checkpoint file.
*/

DECLARE @instance_name NVARCHAR(200) ,
		@system_instance_name NVARCHAR(200) ,
		@registry_key NVARCHAR(512)

SET @instance_name = COALESCE(CONVERT(NVARCHAR(20), SERVERPROPERTY('InstanceName')),'MSSQLSERVER');
EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE',N'Software\Microsoft\Microsoft SQL Server\Instance Names\SQL',@instance_name, @system_instance_name OUTPUT;
SET @registry_key = N'Software\Microsoft\Microsoft SQL Server\' + @system_instance_name + '\MSSQLServer';
DECLARE @BackupDirectory VARCHAR(100) 
--Default Backup Directory Path Check
EXEC master..xp_regread @rootkey='HKEY_LOCAL_MACHINE', 
  @key=@registry_key, 
  @value_name='BackupDirectory', 
  @BackupDirectory=@BackupDirectory OUTPUT 
SELECT @BackupDirectory -- CHECK IF THE PATH EXISTS!!
/* --How to Fix
EXEC master..xp_regwrite 
     @rootkey='HKEY_LOCAL_MACHINE', 
     @key=@registry_key, 
     @value_name='BackupDirectory', 
     @type='REG_SZ', 
     @value= -- HERE YOU NEED TO WRITE THE NEW PATH
*/
--Default Log Path Check
DECLARE @DefaultLog VARCHAR(100) 
EXEC master..xp_regread @rootkey='HKEY_LOCAL_MACHINE', 
  @key=@registry_key, 
  @value_name='DefaultLog', 
  @DefaultLog=@DefaultLog OUTPUT 
SELECT @DefaultLog-- CHECK IF THE PATH EXISTS!!
/* --How to Fix
EXEC master..xp_regwrite 
     @rootkey='HKEY_LOCAL_MACHINE', 
     @key=@registry_key, 
     @value_name='DefaultLog', 
     @type='REG_SZ', 
     @value='L:\SQL\Log'
*/



*/
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#Exeption]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#VLFCountResults]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#VLFCountResults].[DatabaseName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#VLFCountResults].[VLFCount]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#VLFInfo]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#_XPMSVER]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#_XPMSVER].[C_VALUE]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#_XPMSVER].[NAME]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Server].[VM_MemoryOverhead]" />
				</Entry>
				<Entry>
					<References Name="[Server].[VM_MemoryOverhead].[Memory_MB]" />
				</Entry>
				<Entry>
					<References Name="[Server].[VM_MemoryOverhead].[vCPU]" />
				</Entry>
				<Entry>
					<References Name="[Server].[VM_MemoryOverhead].[VM_Memory_MB_From]" />
				</Entry>
				<Entry>
					<References Name="[Server].[VM_MemoryOverhead].[VM_Memory_MB_Till]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#pleSample]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#pleSample].[CaptureTime]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#pleSample].[PageLifeExpectancy]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#PLE]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#PLE].[AveragePageLifeExpectancy]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[xml]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#TraceStatus]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#TraceStatus].[TraceFlag]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[decimal]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[float]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[@output].[line]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[@DISKS].[DiskName]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[@DISKS].[BlockSize]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_GetOrphanedSQLFile]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#Exeption].[Type]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_App_RunCheck].[#Exeption].[Severity]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[#Exeption]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#Exeption].[ServerName]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#Exeption].[Type]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#Exeption].[Message]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#Exeption].[URL]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="512" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#Exeption].[Severity]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#Exeption].[Action]">
									<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="4000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[#VLFInfo]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[RecoveryUnitID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[FileID]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[FileSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[StartOffset]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[FSeqNo]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[Status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[Parity]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFInfo].[CreateLSN]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="38" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[numeric]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[#VLFCountResults]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFCountResults].[DatabaseName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#VLFCountResults].[VLFCount]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[#_XPMSVER]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#_XPMSVER].[IDX]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#_XPMSVER].[NAME]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="100" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#_XPMSVER].[INT_VALUE]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Precision" Value="53" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[float]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#_XPMSVER].[C_VALUE]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[#pleSample]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#pleSample].[CaptureTime]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[datetime]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#pleSample].[PageLifeExpectancy]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bigint]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[#TraceStatus]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#TraceStatus].[TraceFlag]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="10" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#TraceStatus].[status]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#TraceStatus].[Global]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[#TraceStatus].[Session]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[@output]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[@output].[line]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="255" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[@DISKS]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[@DISKS].[id]">
									<Property Name="IsNullable" Value="False" />
									<Property Name="IsIdentity" Value="True" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[@DISKS].[DiskName]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="10" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[@DISKS].[Label]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_App_RunCheck].[@DISKS].[BlockSize]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="200" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_App_RunCheck].[#PLE]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Server].[usp_App_RunCheck].[#PLE].[AveragePageLifeExpectancy]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="221" />
				<Property Name="Length" Value="38827" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 20/03/2014&#xD;&#xA;-- Description:&#x9;Server smell&#xD;&#xA;--{TODO: physical_memory_kb only in 2012}&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Server].[usp_App_RunCheck]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Server].[usp_GetLongRunningTranInfo]">
			<Property Name="BodyScript">
				<Value><![CDATA[ 
BEGIN	
    SET NOCOUNT ON;

	SELECT GETDATE() [DateTaken],b.session_id 'Session ID',
		   CAST(Db_name(a.database_id) AS VARCHAR(20)) 'Database Name',
		   c.command,
		   Substring(st.TEXT, ( c.statement_start_offset / 2 ) + 1,
		   ( (
		   CASE c.statement_end_offset
			WHEN -1 THEN Datalength(st.TEXT)
			ELSE c.statement_end_offset
		   END 
		   -
		   c.statement_start_offset ) / 2 ) + 1)                                                             
		   statement_text,
		   Coalesce(Quotename(Db_name(st.dbid)) + N'.' + Quotename(
		   Object_schema_name(st.objectid,
					st.dbid)) +
					N'.' + Quotename(Object_name(st.objectid, st.dbid)), '')    
		   command_text,
		   c.wait_type,
		   c.wait_time,
		   a.database_transaction_log_bytes_used / 1024.0 / 1024.0                 'MB used',
		   a.database_transaction_log_bytes_used_system / 1024.0 / 1024.0          'MB used system',
		   a.database_transaction_log_bytes_reserved / 1024.0 / 1024.0             'MB reserved',
		   a.database_transaction_log_bytes_reserved_system / 1024.0 / 1024.0      'MB reserved system',
		   a.database_transaction_log_record_count                           
		   'Record count'
	FROM   sys.dm_tran_database_transactions a
		   INNER JOIN sys.dm_tran_session_transactions b ON a.transaction_id = b.transaction_id
		   INNER JOIN sys.dm_exec_requests c ON c.database_id = a.database_id
			AND c.session_id = b.session_id
			AND c.transaction_id = a.transaction_id
		   CROSS APPLY sys.Dm_exec_sql_text(c.sql_handle) AS st 
	WHERE	a.database_id > 4
	
	ORDER  BY 'MB used' DESC;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="288" />
				<Property Name="Length" Value="1969" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 28/09/2014&#xD;&#xA;-- Update date: 29/10/2015 Sharon fix ufn of mail&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;29/11/2015 Sharon Fix Joins&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;13/12/2015 Sharon Conc&#xD;&#xA;-- Description:&#x9;&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Server].[usp_GetLongRunningTranInfo]&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Server].[usp_GetSessionInfo]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
    SET NOCOUNT ON;
	DECLARE @SQLVer2012andUP BIT = 0
	--http://www.brentozar.com/archive/2015/05/sql-server-version-detection/
	CREATE TABLE #checkversion (
		version nvarchar(128),
		common_version AS SUBSTRING(version, 1, CHARINDEX('.', version) + 1 ),
		major AS PARSENAME(CONVERT(VARCHAR(32), version), 4),
		minor AS PARSENAME(CONVERT(VARCHAR(32), version), 3),
		build AS PARSENAME(CONVERT(varchar(32), version), 2),
		revision AS PARSENAME(CONVERT(VARCHAR(32), version), 1)
	);

	INSERT INTO #checkversion (version)
	SELECT CAST(SERVERPROPERTY('ProductVersion') AS NVARCHAR(128)) ;
	IF EXISTS(SELECT TOP 1 1 FROM #checkversion WHERE major >= 11)
		SET @SQLVer2012andUP = 1;
	DECLARE @IsKillAllow BIT = 0;
	DECLARE @DomainName sysname = 'OPENU';
	DECLARE @DateTaken datetime = GETDATE();
	----------------------------------------------------------------
	IF @ConsiderIgnorList = 1
	BEGIN
	    CREATE TABLE #IgnoreProgram (program_name VARCHAR(1000) NOT NULL);
		INSERT #IgnoreProgram
		        ( program_name )
		VALUES  ( '_Admin_ :: TrackBlocking'),
				('Update_Statistics'),
				('_Admin_ :: UpdateIndexStats')
		CREATE TABLE #IgnoreUsers (LoginName VARCHAR(1000) NOT NULL);
		--INSERT #IgnoreUsers
		--        ( LoginName )
		--SELECT	IIF(IL.IsSQLLogin = 0,SS.DomainName + '\' + IL.LoginName + '-svc',IL.LoginName) 
		--FROM	_Admin_.SessionInfo_IgnoreLogin IL
		--		INNER JOIN DBSetup.Security_Server SS ON SS.ID = IL.ServerID
		--WHERE	SS.ServerName = @@ServerName;

		SELECT	@IsKillAllow = 0
	END

	DECLARE @DBID INT;
	IF ISNULL(@Mode,0) IN (0,2)
	BEGIN
	DECLARE @sql NVARCHAR(max) = N'';
	DECLARE @KILL NVARCHAR(max) = N'';
	IF ISNULL(@Mode,0) = 0
		SELECT @sql += N'
SELECT  @DateTaken [DateTaken],' + CASE WHEN @TimeFilter = 1 OR @TimeOn = 1 THEN N'DTON.[dd hh:mm:ss.mss],' ELSE N'' END + N'
s.session_id
' + CASE WHEN @SQLVer2012andUP = 1 THEN N',DB_NAME(s.database_id)DatabaseName' ELSE N'' END + N'
,Coalesce(Quotename(Db_name(t.dbid)) + N''.'' + Quotename(
		   Object_schema_name(t.objectid,
					t.dbid)) +
					N''.'' + Quotename(Object_name(t.objectid, t.dbid)), '''') [StoredProcedure]
,host_name
,login_name
' + IIF(@TimeFilter = 0,',login_time','')	+ '
,' + CASE WHEN @JobInfoOn = 1 OR @ConsiderIgnorList = 1 THEN N'Program.program_name' ELSE N'program_name' END+ N'
,client_interface_name
,s.status
,r.wait_type 
,CASE s.transaction_isolation_level
          WHEN 0 THEN ''Unspecified''
          WHEN 1 THEN ''ReadUncomitted''
          WHEN 2 THEN ''Readcomitted''
          WHEN 3 THEN ''Repeatable''
          WHEN 4 THEN ''Serializable''
          WHEN 5 THEN ''Snapshot''
        END AS TRANSACTION_ISOLATION_LEVEL
' + IIF(@TimeFilter = 0,'
,tdt.database_transaction_begin_time
,CASE tdt.database_transaction_type
    WHEN 1 THEN ''Read/write transaction''
    WHEN 2 THEN ''Read only transaction''
    WHEN 3 THEN ''System transaction''
END TransactionType 
,CASE tdt.database_transaction_state
    WHEN 1 THEN ''Transaction not initialized''
    WHEN 3 THEN ''Transaction has not generated by any log''
    WHEN 4 THEN ''Transaction has generated by log''
    WHEN 5 THEN ''Transaction Prepared''
    WHEN 10 THEN ''Transaction Committed''
    WHEN 11 THEN ''Transaction Rolled back''
    WHEN 12 THEN ''Transaction committed and log generated''
END TransactionState
,s.Reads
,s.Writes','') + '
,r.Command
,t.Text
,''''  [KillThatMotherFuker]
' + IIF(@TimeFilter = 0,',r.Arithabort
,r.Ansi_Null_dflt_on
,r.Ansi_Defaults
,r.Ansi_Warnings
,r.Ansi_Padding
,r.Ansi_Nulls
,r.Concat_null_yields_null
,r.Deadlock_priority
,r.Lock_timeout','') 
	IF @Mode = 2 
		SELECT @sql += N'SET @KILL = '''';
SELECT @KILL += ''KILL '' + CONVERT(VARCHAR(5),s.session_id) + '';
'''
SELECT @sql +=
'
FROM    sys.dm_exec_sessions s
		INNER JOIN sys.dm_exec_requests r ON R.session_id = S.session_id
		LEFT JOIN sys.dm_tran_session_transactions tst ON tst.session_id = S.session_id
		LEFT JOIN sys.dm_tran_database_transactions tdt ON tst.transaction_id = tdt.transaction_id
			AND S.database_id = tdt.database_id
		CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) AS t
		LEFT JOIN SYS.databases D ON D.database_id = S.database_id
		OUTER APPLY (SELECT [dbo].[ufn_Util_clr_RegexReplace](login_name,''([\W\w]*)\\([\W\w0-9]*)'',''$1'',0) Domain)KILLU
		'
		SELECT @sql += CASE WHEN @TimeFilter = 1 OR @TimeOn = 1 THEN N'OUTER APPLY (SELECT COALESCE(
							CASE
								WHEN
								(
									s.is_user_process = 0
									AND r.total_elapsed_time >= 0
								) THEN
									DATEADD
									(
										ms,
										1000 * (DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())) / 500) - DATEPART(ms, DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())),
										DATEADD(second, -(r.total_elapsed_time / 1000), GETDATE())
									)
							END,
							NULLIF(COALESCE(r.start_time, r.start_time/*sp.last_request_end_time*/), CONVERT(DATETIME, ''19000101'', 112)),
							(
								SELECT TOP(1)
									DATEADD(second, -(ms_ticks / 1000), GETDATE())
								FROM sys.dm_os_sys_info
							)
						) AS start_time )Y

	OUTER APPLY (SELECT CASE
						WHEN DATEDIFF(day, y.start_time, GETDATE()) > 24 THEN
							DATEDIFF(second, GETDATE(), y.start_time)
						ELSE DATEDIFF(ms, y.start_time, GETDATE())
					END AS elapsed_time)N
	OUTER APPLY (SELECT CASE MAX(LEN(CONVERT (VARCHAR, CASE
                                                              WHEN N.elapsed_time < 0
                                                              THEN ( -1
                                                              * N.elapsed_time )
                                                              / 86400
                                                              ELSE N.elapsed_time
                                                              / 86400000
                                                              END))) OVER ( )
                                  WHEN 1 THEN 2
                                  ELSE MAX(LEN(CONVERT (VARCHAR, CASE
                                                              WHEN N.elapsed_time < 0
                                                              THEN ( -1
                                                              * N.elapsed_time )
                                                              / 86400
                                                              ELSE N.elapsed_time
                                                              / 86400000
                                                              END))) OVER ( )
                                END AS max_elapsed_length)X
		CROSS APPLY (SELECT CASE WHEN elapsed_time < 0
                         THEN RIGHT(REPLICATE(''0'', max_elapsed_length)
                                    + CONVERT(VARCHAR, ( -1 * elapsed_time )
                                    / 86400), max_elapsed_length)
                              + RIGHT(CONVERT(VARCHAR, DATEADD(SECOND,
                                                              ( -1
                                                              * elapsed_time ),
                                                              0), 120), 9)
                              + ''.000''
                         ELSE RIGHT(REPLICATE(''0'', max_elapsed_length)
                                    + CONVERT(VARCHAR, elapsed_time / 86400000),
                                    max_elapsed_length)
                              + RIGHT(CONVERT(VARCHAR, DATEADD(SECOND,
                                                              elapsed_time
                                                              / 1000, 0), 120),
                                      9) + ''.'' + RIGHT(''000''
                                                       + CONVERT(VARCHAR, elapsed_time
                                                       % 1000), 3)
                    END AS [dd hh:mm:ss.mss])DTON' ELSE N'' END 
SELECT @sql += CASE WHEN @JobInfoOn = 1 OR @ConsiderIgnorList = 1 THEN N'
	LEFT JOIN (SELECT  j.name AS JobName ,
			ja.Start_execution_date StartExecutionDate,
			ISNULL(last_executed_step_id, 0) + 1 AS CurrentExecutedStepID ,
			js.step_name StepName,
			CONCAT(joa.Duration,'' Min'') Duration,
			SUBSTRING(JAjid.job_id,7,2) +
    SUBSTRING(JAjid.job_id,5,2) +
    SUBSTRING(JAjid.job_id,3,2) +
    SUBSTRING(JAjid.job_id,1,2) +
    SUBSTRING(JAjid.job_id,12,2) +
    SUBSTRING(JAjid.job_id,10,2) +
    SUBSTRING(JAjid.job_id,17,2) +
    SUBSTRING(JAjid.job_id,15,2) +
    SUBSTRING(JAjid.job_id,20,4) +
    SUBSTRING(JAjid.job_id,25,12) JobIDSt
	FROM    msdb.dbo.sysjobactivity ja
			CROSS APPLY (SELECT TOP 1 CAST(jA.job_id AS VARCHAR(50)) AS job_id)JAjid
			LEFT JOIN msdb.dbo.sysjobhistory jh ON ja.job_history_id = jh.instance_id
			INNER JOIN msdb.dbo.sysjobs j ON ja.job_id = j.job_id
			INNER JOIN msdb.dbo.sysjobsteps js ON ja.job_id = js.job_id
											AND ISNULL(ja.last_executed_step_id, 0)
											+ 1 = js.step_id
			OUTER APPLY ( SELECT  DATEDIFF(MINUTE,ja.start_execution_date,GETDATE()) Duration ) joa
	WHERE   ja.session_id = ( SELECT TOP 1
										session_id
							  FROM      msdb.dbo.syssessions
							  ORDER BY  agent_start_date DESC
							)
			AND start_execution_date IS NOT NULL
			AND stop_execution_date IS NULL)JOB ON JOB.JobIDSt = SUBSTRING(S.program_name,CHARINDEX(''0x'',s.program_name)+2,32)
	CROSS APPLY (SELECT IIF(job.JobName IS NULL,program_name,''Job:: ''+ job.JobName + ''('' + job.Duration +'')'') program_name,
						IIF(job.JobName IS NULL,program_name,job.JobName) ProgramFilterName)Program' ELSE N'' END 
SELECT @sql +=
'
		
WHERE	s.session_id > 50
		AND s.session_id != @@SPID
		AND S.database_id != DB_ID(''UNIT'')'
		IF @HostName IS NOT NULL SELECT @sql+= N'
		AND S.host_name = '''+@HostName+''' ';
		IF @OnlyApp = 1 SELECT @sql+= N'
		AND S.program_name NOT IN (''dbForge SQL Complete Express'',''Microsoft SQL Server Management Studio'',''Microsoft SQL Server Management Studio - Query'',''Microsoft SQL Server Management Studio - Transact-SQL IntelliSense'') ';
		IF @OnlyRunnigProcessOn = 1 SELECT @sql+= N'
		AND s.status = ''running'' ';
		IF @IncludeSystemDatabase = 0 SELECT @sql+= N'
		AND S.database_id > 4 ';
		IF @TimeFilter = 1 SELECT @sql+= N'
		AND DTON.[dd hh:mm:ss.mss] > ''00 00:00:30.000''';
		IF @ConsiderIgnorList = 1 SELECT @sql+= N'
		AND Program.ProgramFilterName NOT IN (SELECT [program_name] FROM #IgnoreProgram)
		AND login_name NOT IN (SELECT LoginName FROM #IgnoreUsers)
		AND ISNULL(Object_name(t.objectid, t.dbid),'''') NOT LIKE ''usp_SSIS%''';
		IF @FilterJob = 1 SELECT @sql+= N'
		AND S.program_name NOT LIKE ''%JOB%''';
		IF @SQLVer2012andUP = 1
		BEGIN
			IF @DatabaseName IS NOT NULL AND @IncludeAllUserDatabase = 0
			BEGIN
				SELECT @sql+= N'
		AND S.database_id = @DBID';
				SELECT @DBID = DB_ID(@DatabaseName);
			END
		END
		BEGIN TRY 
		
			EXEC sp_executesql @sql,N'@DateTaken datetime,@DBID INT, @KILL NVARCHAR(max) OUT', @DateTaken = @DateTaken ,@DBID = @DBID ,@KILL = @KILL OUTPUT
			--EXEC [dbo].[PrintMax] @sql;
			IF @Mode = 2
				EXEC [dbo].[PrintMax] @KILL
		END TRY
		BEGIN CATCH
			
			EXEC [dbo].[PrintMax] @sql;
			THROW;
		END CATCH
		
		
	END

	IF @Mode = 1
        SELECT  r.session_id ,
                r.command ,
                CONVERT(NUMERIC(6, 2), r.percent_complete) AS [Percent Complete] ,
                CONVERT(VARCHAR(20), DATEADD(ms, r.estimated_completion_time,
                                             GETDATE()), 20) AS [ETA Completion Time] ,
                CONVERT(NUMERIC(10, 2), r.total_elapsed_time / 1000.0 / 60.0) AS [Elapsed Min] ,
                CONVERT(NUMERIC(10, 2), r.estimated_completion_time / 1000.0
                / 60.0) AS [ETA Min] ,
                CONVERT(NUMERIC(10, 2), r.estimated_completion_time / 1000.0
                / 60.0 / 60.0) AS [ETA Hours] ,
                CONVERT(VARCHAR(1000), ( SELECT SUBSTRING(text,
                                                          r.statement_start_offset
                                                          / 2,
                                                          CASE
                                                              WHEN r.statement_end_offset = -1
                                                              THEN 1000
                                                              ELSE ( r.statement_end_offset
                                                              - r.statement_start_offset )
                                                              / 2
                                                          END)
                                         FROM   sys.dm_exec_sql_text(sql_handle)
                                       ))[text]
        FROM    sys.dm_exec_requests r
        WHERE   command IN ( 'RESTORE DATABASE', 'BACKUP DATABASE' );
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[#checkversion].[version]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[#checkversion]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[#checkversion].[version]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[#checkversion].[major]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@ConsiderIgnorList]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[#IgnoreProgram]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[#IgnoreProgram].[program_name]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@Mode]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@TimeFilter]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@TimeOn]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@JobInfoOn]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@HostName]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@OnlyApp]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@OnlyRunnigProcessOn]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@IncludeSystemDatabase]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@FilterJob]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@DatabaseName]" />
				</Entry>
				<Entry>
					<References Name="[Server].[usp_GetSessionInfo].[@IncludeAllUserDatabase]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[numeric]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_GetSessionInfo].[#checkversion]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_GetSessionInfo].[#checkversion].[version]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="128" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[nvarchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Server].[usp_GetSessionInfo].[#checkversion].[common_version]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[SUBSTRING(version, 1, CHARINDEX('.', version) + 1 )]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Server].[usp_GetSessionInfo].[#checkversion].[major]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(VARCHAR(32), version), 4)]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Server].[usp_GetSessionInfo].[#checkversion].[minor]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(VARCHAR(32), version), 3)]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Server].[usp_GetSessionInfo].[#checkversion].[build]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(varchar(32), version), 2)]]></Value>
									</Property>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[Server].[usp_GetSessionInfo].[#checkversion].[revision]">
									<Property Name="ExpressionScript">
										<Value><![CDATA[PARSENAME(CONVERT(VARCHAR(32), version), 1)]]></Value>
									</Property>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_GetSessionInfo].[#IgnoreProgram]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_GetSessionInfo].[#IgnoreProgram].[program_name]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_GetSessionInfo].[#IgnoreUsers]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_GetSessionInfo].[#IgnoreUsers].[LoginName]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1000" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@HostName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@OnlyApp]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[1]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@Mode]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@TimeOn]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@JobInfoOn]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@OnlyRunnigProcessOn]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@TimeFilter]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@IncludeSystemDatabase]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@IncludeAllUserDatabase]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@ConsiderIgnorList]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Server].[usp_GetSessionInfo].[@FilterJob]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="351" />
				<Property Name="Length" Value="13847" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 09/02/2015&#xD;&#xA;-- Update date: 11/02/2015 @@SPID&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;06/12/2015 Sharon Add Columns&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;21/12/2015 Sharon 91875&#xD;&#xA;-- Description:&#x9;Mode :: &#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;0 - GET Transaction IsolationLevel&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;1 - GET Percent Complete&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Server].[usp_GetSessionInfo]&#xD;&#xA;    @HostName NVARCHAR(128) = NULL ,&#xD;&#xA;    @OnlyApp bit = 1,&#xD;&#xA;&#x9;@DatabaseName sysname,&#xD;&#xA;&#x9;@Mode INT = 0 ,&#xD;&#xA;&#x9;@TimeOn BIT = 0,&#xD;&#xA;&#x9;@JobInfoOn BIT = 0 ,&#xD;&#xA;&#x9;@OnlyRunnigProcessOn BIT = 0 ,&#xD;&#xA;&#x9;@TimeFilter BIT = 0 ,&#xD;&#xA;&#x9;@IncludeSystemDatabase BIT = 0 ,&#xD;&#xA;&#x9;@IncludeAllUserDatabase BIT = 0 ,&#xD;&#xA;&#x9;@ConsiderIgnorList BIT = 0,&#xD;&#xA;&#x9;@FilterJob BIT = 0&#xD;&#xA;&#x9;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[Server].[usp_Shipping_SetEnvironment]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN	
	SET NOCOUNT ON;
	DECLARE @schedule_id INT;
	DECLARE @ERR NVARCHAR(2048);

	IF NOT EXISTS (	SELECT TOP 1 1 FROM SYS.configurations c WHERE C.name = 'cost threshold for parallelism' AND c.[value] = 50)
	BEGIN
    	EXEC sp_configure 'cost threshold for parallelism' , 50
		RECONFIGURE WITH OVERRIDE
    END
	IF NOT EXISTS (	SELECT TOP 1 1 FROM SYS.configurations c WHERE C.name = 'optimize for ad hoc workloads' AND c.[value] = 1)
	BEGIN
		EXEC sp_configure 'optimize for ad hoc workloads' , 1
		RECONFIGURE WITH OVERRIDE
	END
	IF NOT EXISTS (	SELECT TOP 1 1 FROM SYS.configurations c WHERE C.name = 'remote admin connections' AND c.[value] = 1)
	BEGIN
		EXEC sp_configure 'remote admin connections' , 1
		RECONFIGURE WITH OVERRIDE
	END

	DECLARE @MaxServerMemory INT,
			@Operator sysname = 'DBA';
	-- Make: Designate a Fail-Safe Operator - http://msdn.microsoft.com/en-us/library/ms175514.aspx
	EXEC master.dbo.sp_MSsetalertinfo @failsafeoperator=@Operator, @notificationmethod=1
	--Set Operator Mail Recipiant
	DECLARE @MailRecipiant NVARCHAR(2048);
	SET  @Operator = 'BI';
	SELECT @MailRecipiant = Report.ufn_Mail_GetMailRecipiantByProcedureName(@Operator)
	IF NOT EXISTS(SELECT TOP 1 1 FROM [msdb].[dbo].[sysoperators] WHERE name = @Operator)
	BEGIN
    	EXEC msdb.dbo.sp_add_operator @name=@Operator, 
		@enabled=1, 
		@pager_days=0, 
		@email_address=@MailRecipiant;
    END
	ELSE
	BEGIN
		EXEC msdb.dbo.sp_update_operator @name=@Operator, 
			@enabled=1, 
			@pager_days=0, 
			@email_address=@MailRecipiant, 
			@pager_address=N'', 
			@netsend_address=N'';
	END
	SET  @Operator = 'DBA';
	SELECT @MailRecipiant = Report.ufn_Mail_GetMailRecipiantByProcedureName(@Operator)
	IF NOT EXISTS(SELECT TOP 1 1 FROM [msdb].[dbo].[sysoperators] WHERE name = @Operator)
	BEGIN
    	EXEC msdb.dbo.sp_add_operator @name=@Operator, 
		@enabled=1, 
		@pager_days=0, 
		@email_address=@MailRecipiant;
    END
	ELSE
	BEGIN
		EXEC msdb.dbo.sp_update_operator @name=@Operator, 
			@enabled=1, 
			@pager_days=0, 
			@email_address=@MailRecipiant, 
			@pager_address=N'', 
			@netsend_address=N'';
	END
	--Error Log file
	DECLARE @NumErrorLogs INT;
	SELECT @NumErrorLogs = [dbo].ufn_get_default_path (0,'NumErrorLogs');
	IF ISNULL(@NumErrorLogs,6) < 30
	BEGIN
		
		DECLARE @instance_name NVARCHAR(200) ,
				@system_instance_name NVARCHAR(200) ,
				@registry_key NVARCHAR(512) ,
				@path NVARCHAR(260) ;

		SET @instance_name = COALESCE(CONVERT(NVARCHAR(20), SERVERPROPERTY('InstanceName')),'MSSQLSERVER');

		BEGIN TRY
		EXEC master.dbo.xp_regread N'HKEY_LOCAL_MACHINE',N'Software\Microsoft\Microsoft SQL Server\Instance Names\SQL',@instance_name, @system_instance_name OUTPUT;
		SET @registry_key = N'Software\Microsoft\Microsoft SQL Server\' + @system_instance_name + '\MSSQLServer';

		EXEC master.dbo.xp_instance_regwrite N'HKEY_LOCAL_MACHINE', @registry_key, N'NumErrorLogs', REG_DWORD, 30;
		END TRY
		BEGIN CATCH
			SET @ERR = ERROR_MESSAGE();
			RAISERROR(@ERR,0,1)WITH NOWAIT
		END CATCH
	END
	------------------------------------------------------
	--  create alerts & error messages                  --
	------------------------------------------------------
	-- add Low System Disk Space Alert and Notification
	IF NOT EXISTS (SELECT name FROM msdb.dbo.sysalerts WHERE name = N'Low System Disk Space Notification')	
	BEGIN
		EXEC msdb.dbo.sp_add_alert @name=N'Low System Disk Space Notification', 
			@message_id=0, 
			@severity=0, 
			@enabled=1, 
			@delay_between_responses=10800, 
			@include_event_description_in=1, 
			@database_name=N'', 
			@notification_message=N'', 
			@event_description_keyword=N'', 
			@performance_condition=N'', 
			@wmi_namespace=N'\\.\root\CIMV2', 
			@wmi_query=N'SELECT * FROM __instancemodificationevent within 3600 WHERE targetinstance isa ''CIM_LogicalDisk'' and targetinstance.freespace < 3221225472 and targetinstance.name=''C:''', 
			@job_id=N'00000000-0000-0000-0000-000000000000';

		EXEC msdb.dbo.sp_add_notification @alert_name=N'Low System Disk Space Notification', @operator_name=@Operator, @notification_method = 1;
	END 

	IF EXISTS (SELECT name FROM msdb.dbo.sysalerts WHERE name = N'Low Disk Space Notification')	
	BEGIN
		EXEC msdb.dbo.sp_delete_alert @name=N'Low Disk Space Notification'
	END



	IF OBJECT_ID('tempdb..#DriveSpace') IS NOT NULL DROP TABLE #DriveSpace
	CREATE TABLE #DriveSpace
		  (
			DriveLetter CHAR(1) not null
		  , FreeSpace VARCHAR(10) not null
		   )

	INSERT INTO #DriveSpace
	EXEC master.dbo.xp_fixeddrives

	IF EXISTS (SELECT TOP 1 1 FROM #DriveSpace WHERE DriveLetter = 'D')
	AND NOT EXISTS (SELECT name FROM msdb.dbo.sysalerts WHERE name = N'Low DATA Disk Space Notification')		
		BEGIN
			EXEC msdb.dbo.sp_add_alert @name=N'Low DATA Disk Space Notification', 
					@message_id=0, 
					@severity=0, 
					@enabled=1, 
					@delay_between_responses=10800, 
					@include_event_description_in=1, 
					@category_name=N'[Uncategorized]', 
					@wmi_namespace=N'\\.\root\CIMV2', 
					@wmi_query=N'SELECT * FROM __instancemodificationevent within 3600 WHERE targetinstance isa ''CIM_LogicalDisk'' and targetinstance.freespace < 3221225472 and targetinstance.name=''D:''', 
					@job_id=N'00000000-0000-0000-0000-000000000000'

			EXEC msdb.dbo.sp_add_notification 
				@alert_name = N'Low DATA Disk Space Notification',
				@operator_name = N'DBA', 
				@notification_method = 1
		END
	IF EXISTS (SELECT TOP 1 1 FROM #DriveSpace WHERE DriveLetter = 'F')
	AND NOT EXISTS (SELECT name FROM msdb.dbo.sysalerts WHERE name = N'Low BACKUP Disk Space Notification')		
		BEGIN
			EXEC msdb.dbo.sp_add_alert @name=N'Low BACKUP Disk Space Notification', 
					@message_id=0, 
					@severity=0, 
					@enabled=1, 
					@delay_between_responses=10800, 
					@include_event_description_in=1, 
					@category_name=N'[Uncategorized]', 
					@wmi_namespace=N'\\.\root\CIMV2', 
					@wmi_query=N'SELECT * FROM __instancemodificationevent within 3600 WHERE targetinstance isa ''CIM_LogicalDisk'' and targetinstance.freespace < 3221225472 and targetinstance.name=''F:''', 
					@job_id=N'00000000-0000-0000-0000-000000000000'

			EXEC msdb.dbo.sp_add_notification 
				@alert_name = N'Low BACKUP Disk Space Notification',
				@operator_name = N'DBA', 
				@notification_method = 1
		END
	IF EXISTS (SELECT TOP 1 1 FROM #DriveSpace WHERE DriveLetter = 'L')
	AND NOT EXISTS (SELECT name FROM msdb.dbo.sysalerts WHERE name = N'Low LOG Disk Space Notification')		
		BEGIN
			EXEC msdb.dbo.sp_add_alert @name=N'Low LOG Disk Space Notification', 
					@message_id=0, 
					@severity=0, 
					@enabled=1, 
					@delay_between_responses=10800, 
					@include_event_description_in=1, 
					@category_name=N'[Uncategorized]', 
					@wmi_namespace=N'\\.\root\CIMV2', 
					@wmi_query=N'SELECT * FROM __instancemodificationevent within 3600 WHERE targetinstance isa ''CIM_LogicalDisk'' and targetinstance.freespace < 3221225472 and targetinstance.name=''L:''', 
					@job_id=N'00000000-0000-0000-0000-000000000000'

			EXEC msdb.dbo.sp_add_notification 
				@alert_name = N'Low LOG Disk Space Notification',
				@operator_name = @Operator, 
				@notification_method = 1
		END
	IF EXISTS (SELECT TOP 1 1 FROM #DriveSpace WHERE DriveLetter = 'U')
	AND NOT EXISTS (SELECT name FROM msdb.dbo.sysalerts WHERE name = N'Low AUDIT Disk Space Notification')		
		BEGIN
			EXEC msdb.dbo.sp_add_alert @name=N'Low AUDIT Disk Space Notification', 
					@message_id=0, 
					@severity=0, 
					@enabled=1, 
					@delay_between_responses=10800, 
					@include_event_description_in=1, 
					@category_name=N'[Uncategorized]', 
					@wmi_namespace=N'\\.\root\CIMV2', 
					@wmi_query=N'SELECT * FROM __instancemodificationevent within 3600 WHERE targetinstance isa ''CIM_LogicalDisk'' and targetinstance.freespace < 3221225472 and targetinstance.name=''U:''', 
					@job_id=N'00000000-0000-0000-0000-000000000000'

			EXEC msdb.dbo.sp_add_notification 
				@alert_name = N'Low AUDIT Disk Space Notification',
				@operator_name =@Operator, 
				@notification_method = 1

		END


	--New Alerts 23/10/2013
	DECLARE @AlertName sysname 

	
	SET @AlertName = N'Severity 019';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=0,
		@severity=19,
		@enabled=1,
		@delay_between_responses=60,
		@include_event_description_in=1,
		@job_id=N'00000000-0000-0000-0000-000000000000';
	
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Severity 020';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=0,
		@severity=20,
		@enabled=1,
		@delay_between_responses=60,
		@include_event_description_in=1,
		@job_id=N'00000000-0000-0000-0000-000000000000';
	
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END
	IF EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName AND enabled = 1)
	BEGIN
		EXEC msdb.dbo.sp_update_alert
			 @name = @AlertName,
			 @enabled = 0 ;
	END

	SET @AlertName = N'Severity 021';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=0,
		@severity=21,
		@enabled=1,
		@delay_between_responses=60,
		@include_event_description_in=1,
		@job_id=N'00000000-0000-0000-0000-000000000000';
	
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Severity 022';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=0,
		@severity=22,
		@enabled=1,
		@delay_between_responses=60,
		@include_event_description_in=1,
		@job_id=N'00000000-0000-0000-0000-000000000000';
	
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Severity 023';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=0,
		@severity=23,
		@enabled=1,
		@delay_between_responses=60,
		@include_event_description_in=1,
		@job_id=N'00000000-0000-0000-0000-000000000000';
	
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Severity 024';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=0,
		@severity=24,
		@enabled=1,
		@delay_between_responses=60,
		@include_event_description_in=1,
		@job_id=N'00000000-0000-0000-0000-000000000000';
	
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Severity 025';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=0,
		@severity=25,
		@enabled=1,
		@delay_between_responses=60,
		@include_event_description_in=1,
		@job_id=N'00000000-0000-0000-0000-000000000000';
	
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Error Number 823';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
		@message_id=823,
			@severity=0,
			@enabled=1,
			@delay_between_responses=60,
			@include_event_description_in=1,
			@job_id=N'00000000-0000-0000-0000-000000000000'
		
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Error Number 824';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
			@message_id=824,
			@severity=0,
			@enabled=1,
			@delay_between_responses=60,
			@include_event_description_in=1,
			@job_id=N'00000000-0000-0000-0000-000000000000'
		
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	SET @AlertName = N'Error Number 825';
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysalerts WHERE name = @AlertName)
	BEGIN

		EXEC msdb.dbo.sp_add_alert @name=@AlertName,
			@message_id=825,
			@severity=0,
			@enabled=1,
			@delay_between_responses=60,
			@include_event_description_in=1,
			@job_id=N'00000000-0000-0000-0000-000000000000'
		
		EXEC msdb.dbo.sp_add_notification @alert_name=@AlertName, @operator_name=@Operator, @notification_method = 1;
	END

	


	------------------------------------------------------
	--  create jobs                                     --
	------------------------------------------------------
	
	DECLARE @jobId BINARY(16),
			@job_id UNIQUEIDENTIFIER, 
			@ReturnCode INT = 0

	
	SELECT @job_id = job_id FROM msdb.dbo.sysjobs_view WHERE name = N'_Admin_ :: CycleErrorLog'
	IF NOT @job_id IS null
		EXEC msdb.dbo.sp_delete_job @job_id = @job_id, @delete_unused_schedule = 1
	SET @job_id = NULL;
	-- add category
	IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE  name = @Operator AND category_class = 1) 
		BEGIN
			EXEC msdb.dbo.sp_add_category @class = N'JOB',@type = N'LOCAL',@name = @Operator
		END

	
---------------------------------------------------------------------------------------------------------------------

	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysjobs WHERE name = '_Admin_ :: CycleErrorLog')
	BEGIN
		SET @jobId = null
		EXEC  msdb.dbo.sp_add_job 
				@job_name=N'_Admin_ :: CycleErrorLog', 
				@enabled=1, 
				@notify_level_eventlog=0, 
				@notify_level_email=0, 
				@notify_level_netsend=0, 
				@notify_level_page=0, 
				@delete_level=0, 
				@description=N'sp_cycle_errorlog.', 
				@category_name=@Operator, 
				@owner_login_name=N'sa', 
				@job_id = @jobId OUTPUT

		EXEC msdb.dbo.sp_add_jobstep 
				@job_id=@jobId, 
				@step_name=N'CycleErrorLog', 
				@step_id=1, 
				@cmdexec_success_code=0, 
				@on_success_action=1, 
				@on_success_step_id=0, 
				@on_fail_action=2, 
				@on_fail_step_id=0, 
				@retry_attempts=0, 
				@retry_interval=0, 
				@os_run_priority=0, @subsystem=N'TSQL', 
				@command=N'EXEC sp_cycle_errorlog;', 
				@database_name=N'master', 
				@flags=0

		EXEC msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1

		EXEC msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'MidNight', 
				@enabled=1, 
				@freq_type=4, 
				@freq_interval=1, 
				@freq_subday_type=1, 
				@freq_subday_interval=0, 
				@freq_relative_interval=0, 
				@freq_recurrence_factor=0, 
				@active_start_date=20140331, 
				@active_end_date=99991231, 
				@active_start_time=1, 
				@active_end_time=235959, 
				@schedule_uid=N'994a993a-227f-463f-9742-f2cba8623403'

		BEGIN TRY 
			EXEC msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = @@servername
		END TRY
		BEGIN CATCH
		END CATCH
	END
---------------------------------------------------------------------------------------------------------------------
	IF NOT EXISTS(SELECT TOP 1 1 FROM msdb.dbo.sysjobs WHERE name = '_Admin_ :: GetActiveJobLongRun')
	BEGIN
		SET @jobId = null
		-- _Admin_ :: Data Integrity :: ExecAll
		EXEC  msdb.dbo.sp_add_job @job_name=N'_Admin_ :: GetActiveJobLongRun', 
				@enabled=1, 
				@notify_level_eventlog=0, 
				@notify_level_email=2, 
				@notify_level_netsend=0, 
				@notify_level_page=0, 
				@delete_level=0, 
				@description=N'Run all Data Integrity SPs', 
				@category_name=@Operator, 
				@owner_login_name=N'sa', 
				@notify_email_operator_name=@Operator, @job_id = @jobId OUTPUT

		EXEC msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'GetActiveJobLongRun', 
				@step_id=1, 
				@cmdexec_success_code=0, 
				@on_success_action=1, 
				@on_success_step_id=0, 
				@on_fail_action=2, 
				@on_fail_step_id=0, 
				@retry_attempts=0, 
				@retry_interval=0, 
				@os_run_priority=0, @subsystem=N'TSQL', 
				@command=N'DECLARE @SendMail int = 1
EXECUTE  [Report].[usp_General_GetActiveJobLongRun] @SendMail', 
				@database_name=N'_Admin', 
				@flags=0

		EXEC msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1

		
		EXEC msdb.dbo.sp_add_jobschedule @job_id = @jobId, @name=N'EveryMorning', 
				@enabled=1, 
				@freq_type=4, 
				@freq_interval=1, 
				@freq_subday_type=1, 
				@freq_subday_interval=0, 
				@freq_relative_interval=0, 
				@freq_recurrence_factor=1, 
				@active_start_date=20150308, 
				@active_end_date=99991231, 
				@active_start_time=70000, 
				@active_end_time=235959, @schedule_id = @schedule_id OUTPUT
		BEGIN TRY 
			EXEC msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = @@servername
		END TRY
		BEGIN CATCH
		END CATCH
	END
---------------------------------------------------------------------------------------------------------------------
	RETURN 1;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[binary]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Report].[ufn_Mail_GetMailRecipiantByProcedureName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[ufn_get_default_path]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Server].[usp_Shipping_SetEnvironment].[#DriveSpace]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[Server].[usp_Shipping_SetEnvironment].[#DriveSpace].[DriveLetter]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[Server].[usp_Shipping_SetEnvironment].[#DriveSpace]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_Shipping_SetEnvironment].[#DriveSpace].[DriveLetter]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="1" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[char]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[Server].[usp_Shipping_SetEnvironment].[#DriveSpace].[FreeSpace]">
									<Property Name="IsNullable" Value="False" />
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Property Name="Length" Value="10" />
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[varchar]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="330" />
				<Property Name="Length" Value="17982" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: &lt;Create Date,,&gt;&#xD;&#xA;-- Update date: 18/02/2014 Sharon Alert Change.&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;19/10/2014 Sharon Fail-Safe&#xD;&#xA;-- Description:&#x9;Create Customs Support Environment&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;exec this SP after _Admin restore&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [Server].[usp_Shipping_SetEnvironment]&#x9;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlTable" Name="[Server].[VM_MemoryOverhead]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[VM_MemoryOverhead].[VM_Memory_MB_From]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[VM_MemoryOverhead].[VM_Memory_MB_Till]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[VM_MemoryOverhead].[vCPU]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[Server].[VM_MemoryOverhead].[Memory_MB]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Precision" Value="53" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[float]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Server]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlAssembly" Name="[SP_execute]">
			<Property Name="PermissionSet" Value="3" />
			<Relationship Name="AssemblySources">
				<Entry>
					<Element Type="SqlAssemblySource">
						<Property Name="Source">
							<Value><![CDATA[alue>
						</Property>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlSchema" Name="[SSIS]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[SSIS].[FK_PackageHierarchy_PackageHierarchy_Parent]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[Parent_PackageHierarchy]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[SSIS].[PackageHierarchy]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[ID]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[SSIS].[PackageHierarchy]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="16" />
		</Element>
		<Element Type="SqlTable" Name="[SSIS].[JobExecuteInfo]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[JobName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[StepID]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[StepName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[FullDateTime]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[JobDuration]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[PackageRunDuration]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[ElapsedTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="35" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[MessageTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[MessageDescription]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="250" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[MessageSourceDescription]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[Message]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[MessageExecutionStatus]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="50" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[MessageGenerated]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="4000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[PackageName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[PackageStartTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[PackageEndTime]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[JobExecuteInfo].[RunNumber]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="17" />
		</Element>
		<Element Type="SqlTable" Name="[SSIS].[Package]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[Package].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[Package].[PackageName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="250" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[Package].[Order]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="18" />
		</Element>
		<Element Type="SqlTable" Name="[SSIS].[PackageHierarchy]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[PackageHierarchy].[ID]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[PackageHierarchy].[PackageName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="250" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[PackageHierarchy].[executable_name]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="250" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[PackageHierarchy].[Parent_PackageHierarchy]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[PackageHierarchy].[SheardEndConector]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="19" />
			<AttachedAnnotation Disambiguator="16" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[SSIS].[PK_JobExecuteInfo]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[SSIS].[JobExecuteInfo].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="17" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[SSIS].[PK_Package]">
			<Property Name="FillFactor" Value="90" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[SSIS].[Package].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[SSIS].[Package]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="18" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[SSIS].[PK_PackageHierarchy]">
			<Property Name="FillFactor" Value="90" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[SSIS].[PackageHierarchy].[ID]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[SSIS].[PackageHierarchy]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="19" />
		</Element>
		<Element Type="SqlTable" Name="[SSIS].[TMP_ReportDetail]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportDetail].[computer]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportDetail].[Date]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[date]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportDetail].[PackageName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1024" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportDetail].[StepName]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1024" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportDetail].[DuarationInMinute]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[SSIS].[TMP_ReportTotal]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportTotal].[computer]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportTotal].[Date]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[date]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportTotal].[PackageName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="1024" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[SSIS].[TMP_ReportTotal].[DuarationInMinute]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[SSIS].[ups_GetJobExecuteInfo]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	IF @Mode IS NULL SET @Mode = 0;
    DECLARE @job_id UNIQUEIDENTIFIER 
	DECLARE @Run_id UNIQUEIDENTIFIER = NEWID();
	DECLARE @JOBstart_execution_date DATETIME,
			@JOBstop_execution_date DATETIME,
			@Error nvarchar(2048)
    --search for job_id if none was provided
    SELECT  @job_id = COALESCE(@job_id,job_id)
    FROM    msdb.dbo.sysjobs 
    WHERE   name like '%' + @job_name + '%';

	IF @Date IS NULL
	BEGIN
		SELECT  TOP 1 @JOBstart_execution_date = t1.start_execution_date
				,@JOBstop_execution_date = t1.stop_execution_date
		FROM    msdb.dbo.sysjobactivity t1
		WHERE   t1.job_id = COALESCE(@job_id,t1.job_id)--If no job_id detected, return last run job
		ORDER  BY   last_executed_step_date DESC;
    END
	ELSE
	BEGIN
    	SELECT  @JOBstart_execution_date = min(msdb.dbo.agent_datetime(run_date, run_time))
				,@JOBstop_execution_date = MAX(msdb.dbo.agent_datetime(run_date, run_time))
		FROM    msdb.dbo.sysjobhistory  t1
		WHERE   t1.job_id = COALESCE(@job_id,t1.job_id)--If no job_id detected, return last run job
				AND CONVERT(date, RTRIM(run_date)) = @Date;
    END


	--Dynamic SQL
	DECLARE @SELECT NVARCHAR(MAX) = N'';
	DECLARE @FROM NVARCHAR(MAX) = N'';
	DECLARE @WHERE NVARCHAR(MAX) = N'';

	SELECT @SELECT = N'SELECT  t1.name as JobName
		,t2.step_id as StepID
		,CASE WHEN t2.step_name = ''(Job outcome)'' THEN ''**** Total Status ****'' else t2.step_name end as StepName,

		DT.FullDateTime,
		' + IIF(@Mode = 0 ,N'dt.JobDurationHHMMSS',N't2.run_duration') + '   [JobDuration],
		' + IIF(@Mode != 0 ,N'CAT.[PKG_RunDuration],',N'') 
		  + IIF(@Mode IN (4,5)  ,N'EM.[Elapsed time],EM.message_time,   EM.message_desc,   EM.message_source_desc,   EM.message,',N'') + 
		N'
		CASE t2.run_status WHEN 0 THEN ''Failed''
							WHEN 1 THEN ''Succeeded'' 
							WHEN 2 THEN ''Retry'' 
							WHEN 3 THEN ''Cancelled'' 
							WHEN 4 THEN ''In Progress'' 
							END as ExecutionStatus
		,t2.message as MessageGenerated  
		' + IIF(@Mode != 0 ,N',CAT.package_name,
		CONVERT(DATETIME,CAT.start_time) [PKG_StartTime],
		CONVERT(DATETIME,CAT.end_time ) [PKG_EndTime]',N'') + 
		IIF(@Mode = 2,N'
		,CAT.execution_id,
   CAT.folder_name,
   CAT.project_name,
   CAT.package_name,
   CAT.environment_name,
   CAT.project_lsn
,   CAT.executed_as_name
,   CAT.use32bitruntime
,   CAT.created_time
,   CAT.start_time
,   CAT.end_time
,   CAT.caller_name
,   CAT.stopped_by_name
,   CAT.server_name
,   CAT.total_physical_memory_kb
,   CAT.available_physical_memory_kb
,   CAT.total_page_file_kb
,   CAT.available_page_file_kb
,   CAT.cpu_count
,   CAT.name
,   CAT.last_deployed_time
,   CAT.validation_status
,   CAT.package_id
,   CAT.[PKG_Name]
,   CAT.version_major
,   CAT.version_minor
,   CAT.version_build
,   CAT.version_comments
,   CAT.[PKG_ValidationStatus]
',N'') + ',@Run_id [RunID]'
			--,CAT.* --'load_stg.dtsx' 'load_stg.dtsx'
    SELECT @FROM = N'
FROM    msdb.dbo.sysjobs t1
			INNER JOIN    msdb.dbo.sysjobhistory t2 ON t1.job_id = t2.job_id 
			CROSS APPLY (SELECT TOP 1 CONVERT(CHAR(10), CAST(STR(t2.run_date,8, 0) AS DATETIME), 121) as RunDate,
            STUFF(STUFF(RIGHT(''000000'' + CAST ( t2.run_time AS VARCHAR(6 ) ) ,6),5,0,'':''),3,0,'':'') as RunTime,
			CONVERT(CHAR(10), CAST(STR(t2.run_date,8, 0) AS DATETIME), 121)  + '' '' + STUFF(STUFF(RIGHT(''000000'' + CAST ( t2.run_time AS VARCHAR(6 ) ) ,6),5,0,'':''),3,0,'':'') + ''.000'' FullDateTime ,
			JobDurationHHMMSS = STUFF(STUFF(REPLACE(STR(t2.run_duration,7,0),'' '',''0''),4,0,'':''),7,0,'':'')
			)DT  
			' + IIF(@Mode != 0 ,N'outer apply (SELECT TOP 1
    E.execution_id,
   E.folder_name,
   E.project_name,
   E.package_name,
   E.environment_name,
   E.project_lsn
,   E.executed_as_name
,   E.use32bitruntime
,   E.created_time
,   E.start_time
,   E.end_time
,   E.caller_name
,   E.stopped_by_name
,   E.server_name
,   E.total_physical_memory_kb
,   E.available_physical_memory_kb
,   E.total_page_file_kb
,   E.available_page_file_kb
,   E.cpu_count
,   F.name
,   P.last_deployed_time
,   P.validation_status
,   PKG.package_id
,   PKG.name [PKG_Name]
,   PKG.version_major
,   PKG.version_minor
,   PKG.version_build
,   PKG.version_comments
,   PKG.validation_status [PKG_ValidationStatus]
,	DATEDIFF(MINUTE,E.start_time,E.end_time)[PKG_RunDuration]
FROM	SSISDB.catalog.executions AS E
		INNER JOIN ssisdb.catalog.folders AS F ON F.name = E.folder_name
		INNER JOIN SSISDB.catalog.projects AS P ON P.folder_id = F.folder_id
                                 AND P.name = E.project_name
		INNER JOIN SSISDB.catalog.packages AS PKG ON PKG.project_id = P.project_id
                                   AND PKG.name = E.package_name
WHERE	convert(Datetime,start_time) >= DT.FullDateTime--DATEADD(MINUTE,-5,DT.FullDateTime)
		AND (LOWER(E.package_name) = LOWER(t2.step_name+ ''.dtsx'') COLLATE DATABASE_DEFAULT 
			 OR LOWER(E.package_name) = LOWER(replace(t2.step_name,'' '',''_'')+ ''.dtsx'') COLLATE DATABASE_DEFAULT)
ORDER BY E.execution_id ASC
)Cat',N'') 
 SELECT @FROM += IIF(@Mode IN (4,5),N'

OUTER APPLY (SELECT TOP 1 O.operation_id
			 FROM	SSISDB.catalog.event_messages em
					INNER JOIN SSISDB.catalog.operations o on em.operation_id=o.operation_id
			WHERE	o.object_name = ''OP_ETL''
					AND EM.package_name = CAT.package_name
			ORDER BY O.operation_id DESC
			)OID
		OUTER APPLY (SELECT
   CONVERT(DATETIME,OM.message_time) message_time
,   EM.message_desc
,   D.message_source_desc
,   OM.message
,SUBSTRING(OM.message,charindex(''Elapsed time:'',OM.message) + 13,12)[Elapsed time]
FROM
    SSISDB.catalog.operation_messages AS OM
    INNER JOIN
        SSISDB.catalog.operations AS O
        ON O.operation_id = OM.operation_id
    INNER JOIN
    (
        VALUES
            (-1,''Unknown'')
        ,   (120,''Error'')
        ,   (110,''Warning'')
        ,   (70,''Information'')
        ,   (10,''Pre-validate'')
        ,   (20,''Post-validate'')
        ,   (30,''Pre-execute'')
        ,   (40,''Post-execute'')
        ,   (60,''Progress'')
        ,   (50,''StatusChange'')
        ,   (100,''QueryCancel'')
        ,   (130,''TaskFailed'')
        ,   (90,''Diagnostic'')
        ,   (200,''Custom'')
        ,   (140,''DiagnosticEx Whenever an Execute Package task executes a child package, it logs this event. The event message consists of the parameter values passed to child packages.  The value of the message column for DiagnosticEx is XML text.'')
        ,   (400,''NonDiagnostic'')
        ,   (80,''VariableValueChanged'')
    ) EM (message_type, message_desc) ON EM.message_type = OM.message_type
    INNER JOIN
    (
        VALUES
            (10,''Entry APIs, such as T-SQL and CLR Stored procedures'')
        ,   (20,''External process used to run package (ISServerExec.exe)'')
        ,   (30,''Package-level objects'')
        ,   (40,''Control Flow tasks'')
        ,   (50,''Control Flow containers'')
        ,   (60,''Data Flow task'')
    ) D (message_source_type, message_source_desc) ON D.message_source_type = OM.message_source_type
WHERE
    OM.operation_id =  OID.operation_id ' + IIF(@Mode = 4 , N'AND OM.message_type = 40' , N'' ) +N')EM
	',N'')
	SELECT @WHERE = N'
WHERE	--Filter on the most recent job_id
        t1.job_id = @job_id 
        --Filter out job steps that do not fall between start_execution_date and stop_execution_date
        AND DT.FullDateTime BETWEEN @JOBstart_execution_date AND @JOBstop_execution_date
ORDER BY t2.step_id ASC'+ IIF(@Mode IN (4,5),N',EM.message_time ASC',N'')

	SELECT @SELECT += @FROM + @WHERE;
	
	begin try
		EXEC sp_executesql @SELECT ,N'@job_id UNIQUEIDENTIFIER ,@JOBstart_execution_date DATETIME,@JOBstop_execution_date DATETIME,@Run_id UNIQUEIDENTIFIER',@job_id = @job_id,
		@JOBstart_execution_date = @JOBstart_execution_date, @JOBstop_execution_date = @JOBstop_execution_date,@Run_id = @Run_id;
		PRINT @SELECT
	END TRY
	BEGIN CATCH
		SET @Error = ERROR_MESSAGE()
		EXEC [dbo].[PrintMax] @SELECT;
		RAISERROR(@Error,16,1);
	END CATCH
	
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[ups_GetJobExecuteInfo].[@Mode]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[SSIS].[ups_GetJobExecuteInfo].[@job_name]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[ups_GetJobExecuteInfo].[@Date]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[ups_GetJobExecuteInfo].[@job_name]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA['Daily ETL']]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[ups_GetJobExecuteInfo].[@Mode]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[ups_GetJobExecuteInfo].[@Date]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[date]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="523" />
				<Property Name="Length" Value="8898" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon Rimer&#xD;&#xA;-- Create date: 12/01/2016&#xD;&#xA;-- Update date: 19/01/2016 - Sharon SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;&#xD;&#xA;-- Description:&#x9;0 - Only Job Info&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;1 - Job + Catalog&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;2 - Job + Catalog Detail&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;3 - Job + Catalog Detail (Only imported columns)&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;4 - Job + Catalog Detail + Packege Detail(without error msg) &#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;5 - Job + Catalog Detail + Packege Detail (All msg types)&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [SSIS].[ups_GetJobExecuteInfo]&#xD;&#xA;&#x9;@job_name  VARCHAR(256) = 'Daily ETL',&#xD;&#xA;&#x9;@Mode int = 0,&#xD;&#xA;&#x9;@Date DATE = NULL&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[SSIS].[usp_AnalizeLastRun]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;

	DECLARE @RunNumber uniqueidentifier
	SELECT	TOP 1 @RunNumber = RunNumber
    FROM	SSIS.JobExecuteInfo JEI
	WHERE	JEI.FullDateTime BETWEEN format(@RunDate,'yyyyMMdd 21:30:00.000') AND format(@RunDate,'yyyyMMdd 22:30:00.000');
WITH CTE AS (
	SELECT	JEI.JobName,JEI.StepID,JEI.StepName,
			CONVERT(nvarchar(MAX),REPLACE(JEI.PackageName,'.dtsx','') + '::>' + CONVERT(nvarchar(20),PH.ID)) [Hierarchy],
			1 [Level],
			DATEDIFF(MINUTE,JEI.PackageStartTime,JEI.MessageTime)[AggDuration],PH.executable_name,
			JEI.FullDateTime,JEI.JobDuration,JEI.PackageRunDuration,JEI.ElapsedTime,JEI.MessageTime,JEI.MessageDescription,JEI.MessageSourceDescription,JEI.Message,JEI.MessageExecutionStatus,JEI.MessageGenerated,JEI.PackageName,JEI.PackageStartTime,JEI.PackageEndTime,
			PH.ID,PH.Parent_PackageHierarchy
    FROM	SSIS.JobExecuteInfo JEI
			INNER JOIN SSIS.PackageHierarchy PH ON PH.PackageName = JEI.PackageName COLLATE DATABASE_DEFAULT 
				AND JEI.message LIKE PH.[executable_name] + '%' COLLATE DATABASE_DEFAULT 
	WHERE	PH.Parent_PackageHierarchy IS NULL
			AND JEI.RunNumber = @RunNumber
			--AND PH.ID NOT IN (SELECT [SheardEndConector] FROM SSIS.PackageHierarchy WHERE [SheardEndConector] IS NOT NULL)
	UNION ALL 
	SELECT	JEI.JobName,JEI.StepID,JEI.StepName,
			c.[Hierarchy] + '>' + CONVERT(nvarchar(20),PH.ID) [Hierarchy],
			C.[Level] + 1 [Level],
			DATEDIFF(MINUTE,JEI.PackageStartTime,JEI.MessageTime)[AggDuration],PH.executable_name,
			JEI.FullDateTime,JEI.JobDuration,JEI.PackageRunDuration,JEI.ElapsedTime,JEI.MessageTime,JEI.MessageDescription,JEI.MessageSourceDescription,JEI.Message,JEI.MessageExecutionStatus,JEI.MessageGenerated,JEI.PackageName,JEI.PackageStartTime,JEI.PackageEndTime,
			PH.ID,PH.Parent_PackageHierarchy
    FROM	CTE C 
			INNER JOIN SSIS.JobExecuteInfo JEI ON C.PackageName = JEI.PackageName
				AND JEI.RunNumber = @RunNumber
			INNER JOIN SSIS.PackageHierarchy PH ON PH.PackageName = JEI.PackageName COLLATE DATABASE_DEFAULT 
				AND JEI.message LIKE PH.[executable_name] + '%' COLLATE DATABASE_DEFAULT 
				AND PH.Parent_PackageHierarchy = C.ID
	WHERE	PH.Parent_PackageHierarchy IS NOT NULL
			--
)	SELECT	*,MAX([AggDuration]) OVER(PARTITION BY C.PackageName)
    FROM	CTE c
	ORDER BY C.StepID ASC,IIF(C.message	LIKE '%:Finished,%',999,C.Parent_PackageHierarchy) ASC
	
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[uniqueidentifier]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[RunNumber]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[FullDateTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_AnalizeLastRun].[@RunDate]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[PackageName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[Message]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[executable_name]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[JobName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[StepID]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[StepName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[ID]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageStartTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[FullDateTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[JobDuration]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageRunDuration]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[ElapsedTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageDescription]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageSourceDescription]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[Message]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageExecutionStatus]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageGenerated]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageEndTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[Parent_PackageHierarchy]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[RunNumber]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[PackageName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[RunNumber]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[PackageName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[Message]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[executable_name]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[Parent_PackageHierarchy]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[ID]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[JobName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[StepID]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[StepName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[Hierarchy]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[ID]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[Level]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageStartTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[FullDateTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[JobDuration]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageRunDuration]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[ElapsedTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageDescription]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageSourceDescription]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[Message]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageExecutionStatus]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[MessageGenerated]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageEndTime]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[PackageName]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[StepID]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[JobExecuteInfo].[Message]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[PackageHierarchy].[Parent_PackageHierarchy]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[JobName]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[JobName]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[StepID]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[StepID]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[StepName]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[StepName]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[Hierarchy]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[Level]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[AggDuration]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[executable_name]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[PackageHierarchy].[executable_name]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[FullDateTime]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[FullDateTime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[JobDuration]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[JobDuration]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[PackageRunDuration]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[PackageRunDuration]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[ElapsedTime]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[ElapsedTime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[MessageTime]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[MessageTime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[MessageDescription]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[MessageDescription]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[MessageSourceDescription]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[MessageSourceDescription]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[Message]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[Message]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[MessageExecutionStatus]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[MessageExecutionStatus]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[MessageGenerated]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[MessageGenerated]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[PackageName]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[PackageName]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[PackageStartTime]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[PackageStartTime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[PackageEndTime]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[JobExecuteInfo].[PackageEndTime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[ID]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[PackageHierarchy].[ID]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[SSIS].[usp_AnalizeLastRun].[CTE1].[CTE].[Parent_PackageHierarchy]">
									<Relationship Name="ExpressionDependencies">
										<Entry>
											<References Name="[SSIS].[PackageHierarchy].[Parent_PackageHierarchy]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[usp_AnalizeLastRun].[@RunDate]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="181" />
				<Property Name="Length" Value="2623" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 19/01/2016&#xD;&#xA;-- Description:&#x9;&lt;Description,,&gt;&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [SSIS].[usp_AnalizeLastRun]&#xD;&#xA;&#x9;@RunDate datetime&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[SSIS].[usp_GetLogSSIS]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
	DECLARE @CMD NVARCHAR(MAX) = N'';
	IF @Mode IS NULL
	BEGIN
		PRINT '@Mode ::
0 :: Single Output 
1 :: 2 Output for the screen
2 :: Load to external table SSIS.TMP_ReportTotal + SSIS.TMP_ReportDetail for Tobulu Report - last 7 days
3 :: Same as 0 without 0 in column [DuarationInMinute]
		'
		RETURN -1;
	END

	IF @Mode = 2
	BEGIN
		SELECT @EndDate = CONVERT(DATE,GETDATE()) ,@RunDate = FORMAT(DATEADD(DAY,-7,CONVERT(DATE,GETDATE())),'yyyy-MM-dd 23:59:59');
		IF OBJECT_ID('SSIS.TMP_ReportTotal') IS NULL
		CREATE TABLE [SSIS].[TMP_ReportTotal](
			[computer] [nvarchar](128) NOT NULL,
			[Date] [date] NULL,
			[PackageName] [nvarchar](1024) NOT NULL,
			[DuarationInMinute] [int] NULL
		) ON [PRIMARY];
		IF OBJECT_ID('SSIS.TMP_ReportDetail') IS NULL
		CREATE TABLE [SSIS].[TMP_ReportDetail](
			[computer] [nvarchar](128) NOT NULL,
			[Date] [date] NULL,
			[PackageName] [nvarchar](1024) NOT NULL,
			[StepName] [nvarchar](1024) NULL,
			[DuarationInMinute] [int] NULL
		) ON [PRIMARY];

		TRUNCATE TABLE SSIS.TMP_ReportTotal;
		TRUNCATE TABLE SSIS.TMP_ReportDetail;
	END
	SET @CMD = N'
IF OBJECT_ID(''[' + @DatabaseName + '].[dbo].[sysssislog]'') IS NOT NULL
BEGIN
SELECT lo.[id]
		,lo.[computer]
		,' + CASE WHEN @Mode IN (0,3) THEN N'IIF(loO.[source]!=lo.[source],loO.[source] + '' :: '' + lo.[source],lo.[source]) [source]' ELSE N'lo.[source]' END + N' 
		,lo.[starttime]
		,post.[endtime]
		,datediff(MINUTE,lo.[starttime],post.[endtime]) [DuarationInMinute]
		,lo.[message] + ISNULL(post.[message],'''')' + CASE WHEN @Mode IN (0,3) THEN N'+ ISNULL(''Error: '' + Err.[message],'''')' ELSE N'' END + N'[message]
	' + CASE WHEN @Mode IN (1,2) THEN N',post.ID AS [EndID]
	INTO #SSIS_TEMP
		' ELSE N'' END + 
		'
	FROM	' + CASE WHEN @Mode IN (1,2) THEN N'[' + @DatabaseName + '].[dbo].[sysssislog] lo
		INNER JOIN [SSIS].[Package] P ON P.PackageName = lo.[source] COLLATE Hebrew_CI_AS
		' WHEN @Mode IN (0,3) THEN N'[SSIS].[Package] P 
		INNER JOIN [' + @DatabaseName + '].[dbo].[sysssislog] loO ON P.PackageName = loO.[source] COLLATE Hebrew_CI_AS
		INNER JOIN [' + @DatabaseName + '].[dbo].[sysssislog] lo ON loO.executionid = lo.executionid
		OUTER APPLY(SELECT TOP 1 * FROM [' + @DatabaseName + '].[dbo].[sysssislog] p WHERE lo.[source] = p.[source] AND lo.[executionid] = p.[executionid] AND lo.[sourceid] = p.[sourceid] AND p.[event]=''OnError'')Err
		' ELSE N'' END + 
		'OUTER APPLY(SELECT TOP 1 * FROM [' + @DatabaseName + '].[dbo].[sysssislog] p WHERE lo.[source] = p.[source] AND lo.[executionid] = p.[executionid] AND lo.[sourceid] = p.[sourceid] AND p.[event]=''OnPostExecute'')post
	WHERE ' + CASE WHEN @Mode IN (0,3) THEN N'loO.[starttime]' ELSE N'lo.[starttime]' END + N'BETWEEN @RunDate AND ' + IIF(@EndDate IS NULL,N'DATEADD(DAY,1,@RunDate)',N'@EndDate') + N'
		AND lo.[event]=''OnPreExecute''
		' + IIF(@Mode = 3,N'AND datediff(MINUTE,lo.[starttime],post.[endtime]) > 0
		',N'') + N'
		' + CASE WHEN @Mode IN (0,3) THEN N'AND loO.[event]=''OnPreExecute''
	ORDER BY lo.[id] ASC;' ELSE N'' END + 
		'

	' + CASE WHEN @Mode IN (1,2) THEN N'
	' + IIF(@Mode = 2,N'INSERT SSIS.TMP_ReportTotal',N'') + N'
	SELECT [computer],CONVERT(DATE,starttime)[Date],source [PackageName],[DuarationInMinute]' + IIF(@Mode = 2,N',FT.Local_Table',N'') + N'
	FROM #SSIS_TEMP
	ORDER BY 2 ASC;
	' + IIF(@Mode = 2,N'
	INSERT SSIS.TMP_ReportDetail',N'') + N'
	SELECT	T.[computer],CONVERT(DATE,T.starttime)[Date],t.source [PackageName],st.source [StepName],st.[DuarationInMinute]
	FROM	#SSIS_TEMP T
			OUTER APPLY(SELECT	TOP 5  lo.[id]
								,lo.[computer]
								,lo.[source]
								,lo.[starttime]
								,post.[endtime]
								,datediff(MINUTE,lo.[starttime],post.[endtime]) [DuarationInMinute]
								,lo.[message] + ISNULL(post.[message],'''')[message]
								,CONVERT(INT,IIF(ISNUMERIC([dbo].[ufn_Util_clr_RegexReplace](lo.source,''(Pre_load_Table )([\d]+),([\d]+)'',''$2'',1)) = 1,[dbo].[ufn_Util_clr_RegexReplace](lo.source,''(Pre_load_Table )([\d]+),([\d]+)'',''$2'',1),NULL)) [FromTable]
								,CONVERT(INT,IIF(ISNUMERIC([dbo].[ufn_Util_clr_RegexReplace](lo.source,''(Pre_load_Table )([\d]+),([\d]+)'',''$3'',1)) = 1,[dbo].[ufn_Util_clr_RegexReplace](lo.source,''(Pre_load_Table )([\d]+),([\d]+)'',''$3'',1),NULL)) [ToTable]
						FROM	[' + @DatabaseName + '].[dbo].[sysssislog] lo
								OUTER APPLY(select top 1 * from [' + @DatabaseName + '].[dbo].[sysssislog] p where lo.[source] = p.[source] and lo.[executionid] = p.[executionid] and lo.[sourceid] = p.[sourceid]
								and p.[event]=''OnPostExecute'')post
						WHERE	lo.[id] BETWEEN T.ID AND T.EndID
								AND T.source != LO.source
								and lo.[event]=''OnPreExecute''
						ORDER BY 	datediff(MINUTE,lo.[starttime],post.[endtime]) DESC
				) ST
			OUTER APPLY (SELECT [dbo].[ufn_Util_clr_Conc](CONVERT(VARCHAR(5),T.RowNum) + ''::'' + T.[Local_Table])[Local_Table] FROM [OP_STG].[dbo].[tblOracleTables] T WHERE T.RowNum BETWEEN ST.[FromTable] AND ST.[ToTable])FT
			' ELSE N'' END + 
			'
	END
	ELSE
	BEGIN
		PRINT ''Database - ' + @DatabaseName + ' Does not contein table [dbo].[sysssislog]'';
	END'
	if exists(SELECT TOP 1 1 FROM SYS.DATABASES WHERE NAME = @DatabaseName)
	BEGIN
		EXEC sp_executesql @CMD ,N'@RunDate datetime,@EndDate datetime',@RunDate = @RunDate, @EndDate = @EndDate ;
		EXEC [dbo].[PrintMax] @CMD
	END
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_GetLogSSIS].[@Mode]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_GetLogSSIS].[@EndDate]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_GetLogSSIS].[@RunDate]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportTotal]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[PRIMARY]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportTotal].[computer]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportTotal].[Date]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportTotal].[PackageName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportTotal].[DuarationInMinute]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportDetail]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportDetail].[computer]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportDetail].[Date]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportDetail].[PackageName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportDetail].[StepName]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportDetail].[DuarationInMinute]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportTotal]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[TMP_ReportDetail]" />
				</Entry>
				<Entry>
					<References Name="[SSIS].[usp_GetLogSSIS].[@DatabaseName]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[PrintMax]" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[usp_GetLogSSIS].[@RunDate]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[usp_GetLogSSIS].[@EndDate]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[usp_GetLogSSIS].[@DatabaseName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[SSIS].[usp_GetLogSSIS].[@Mode]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[0]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[SSIS]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="408" />
				<Property Name="Length" Value="5972" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="-- =============================================&#xD;&#xA;-- Author:&#x9;&#x9;Sharon&#xD;&#xA;-- Create date: 19/01/2016&#xD;&#xA;-- Description:&#x9;@Mode&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;0 :: Single Output &#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;1 :: 2 Output for the screen&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;2 :: Load to external table SSIS.TMP_ReportTotal + SSIS.TMP_ReportDetail for Tobulu Report - last 7 days&#xD;&#xA;--&#x9;&#x9;&#x9;&#x9;3 :: Same as 0 without 0 in column [DuarationInMinute]&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE PROCEDURE [SSIS].[usp_GetLogSSIS]&#xD;&#xA;&#x9;@RunDate datetime,&#xD;&#xA;&#x9;@EndDate datetime,&#xD;&#xA;&#x9;@DatabaseName sysname,&#xD;&#xA;&#x9;@Mode int = 0&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlSchema" Name="[Utility]">
			<Relationship Name="Authorizer">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[Utility].[ufn_DATEDIFF2String]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Utility].[ufn_DATEDIFF2String].[@Start]" />
				</Entry>
				<Entry>
					<References Name="[Utility].[ufn_DATEDIFF2String].[@End]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[date]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
            DECLARE @S VARCHAR(max);
            IF DATEDIFF(DAY,@Start,ISNULL(@End,GETDATE())) = 0
            BEGIN
                        SET @S = 'ToDay';
                RETURN @S;
            END
    SELECT         @S = CASE WHEN [Y].[Years] IS NULL THEN 'Never Been Activated ***' ELSE 
                                                CASE WHEN [Y].[Years] > 0 THEN CAST([Y].[Years] AS varchar(4)) +' Year' + IIF([Y].[Years] = 1,' ' , 's ') ELSE '' END +
                                                CASE WHEN [M].[Months] > 0 THEN CAST([M].[Months] AS varchar(2)) +' Month' + IIF([M].[Months] = 1,' ' , 's ') ELSE '' END +
                                                CASE WHEN [D].[Days] > 0 THEN CAST([D].[Days] AS varchar(2)) +' Day' + IIF([D].[Days] = 1,' ' , 's ')  ELSE '' END
                                    
                                    END 
    FROM           (SELECT            ISNULL(@End,DATEADD(s, 86399, CONVERT(DATETIME,CONVERT(DATE,GETDATE()))))CurrentDay,@Start [FromDate])CD
                                    CROSS APPLY (SELECT YEAR(CD.CurrentDay) - YEAR(CD.FromDate) - (CASE WHEN MONTH(CD.CurrentDay) - MONTH(CD.FromDate) < 0 THEN 1 ELSE 0 END) [Years])Y
                                    CROSS APPLY (SELECT DATEDIFF(MONTH,DATEADD(YEAR,Y.Years,CD.FromDate),CD.CurrentDay) - (CASE WHEN DAY(CD.CurrentDay) - DAY(CD.FromDate) < 0 THEN 1 ELSE 0 END) [Months])M
                                    CROSS APPLY (SELECT DATEDIFF(DAY,DATEADD(MONTH,M.Months,DATEADD(YEAR,Y.Years,CD.FromDate)),CD.CurrentDay)[Days])D
    RETURN @S;
END;]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="226" />
							<Property Name="Length" Value="1962" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="&#xD;&#xA;-- =============================================&#xD;&#xA;-- Author:                      Sharon&#xD;&#xA;-- Create date: 19/05/2016&#xD;&#xA;-- Update date: &#xD;&#xA;-- Description:   DATEDIFF to String&#xD;&#xA;-- =============================================&#xD;&#xA;CREATE FUNCTION [Utility].[ufn_DATEDIFF2String]&#xD;&#xA;    (&#xD;&#xA;      @Start DATETIME ,&#xD;&#xA;      @End DATETIME&#xD;&#xA;    )&#xD;&#xA;RETURNS VARCHAR(MAX)&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[ufn_DATEDIFF2String].[@Start]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[ufn_DATEDIFF2String].[@End]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Utility]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Property Name="IsMax" Value="True" />
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[varchar]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[Utility].[usp_PerformanceTuning_SetQureTrace]">
			<Property Name="BodyScript">
				<Value><![CDATA[
BEGIN
	SET NOCOUNT ON;
    DECLARE @rc INT;
    DECLARE @TraceID INT;
    DECLARE @StopTime DATETIME = GETDATE();

    BEGIN TRY
        IF @FilePath IS NULL
            SELECT  @FilePath = N'H:\Temp\Qure' + N'\Qure_'
                    + CONVERT(VARCHAR(20), GETUTCDATE(), 112) + '_'
                    + REPLACE(CONVERT(VARCHAR(20), GETUTCDATE(), 108), ':', '');

        IF ISNULL(@maxfilesize, 0) <= 0
            SET @maxfilesize = 50;

        SET @StopTime = DATEADD(MINUTE, @DurationInMinutes, @StopTime);

        EXEC @rc = sp_trace_create @TraceID OUTPUT, 0, @FilePath, @maxfilesize,
            @StopTime; 
        IF ( @rc != 0 )
            RAISERROR('could not create trace',16,1);

	

		-- Set the events
        DECLARE @on BIT;
        SET @on = 1;
		EXEC sp_trace_setevent @TraceID, 10, 1, @on;
		EXEC sp_trace_setevent @TraceID, 10, 10, @on;
		EXEC sp_trace_setevent @TraceID, 10, 6, @on;
		EXEC sp_trace_setevent @TraceID, 10, 8, @on;
		EXEC sp_trace_setevent @TraceID, 10, 11, @on;
		EXEC sp_trace_setevent @TraceID, 10, 12, @on;
		EXEC sp_trace_setevent @TraceID, 10, 13, @on;
		EXEC sp_trace_setevent @TraceID, 10, 14, @on;
		EXEC sp_trace_setevent @TraceID, 10, 15, @on;
		EXEC sp_trace_setevent @TraceID, 10, 16, @on;
		EXEC sp_trace_setevent @TraceID, 10, 17, @on;
		EXEC sp_trace_setevent @TraceID, 10, 18, @on;
		EXEC sp_trace_setevent @TraceID, 10, 26, @on;
		EXEC sp_trace_setevent @TraceID, 10, 31, @on;
		EXEC sp_trace_setevent @TraceID, 10, 35, @on;
		EXEC sp_trace_setevent @TraceID, 10, 48, @on;
		EXEC sp_trace_setevent @TraceID, 10, 60, @on;
		EXEC sp_trace_setevent @TraceID, 12, 1, @on;
		EXEC sp_trace_setevent @TraceID, 12, 11, @on;
		EXEC sp_trace_setevent @TraceID, 12, 6, @on;
		EXEC sp_trace_setevent @TraceID, 12, 8, @on;
		EXEC sp_trace_setevent @TraceID, 12, 10, @on;
		EXEC sp_trace_setevent @TraceID, 12, 12, @on;
		EXEC sp_trace_setevent @TraceID, 12, 13, @on;
		EXEC sp_trace_setevent @TraceID, 12, 14, @on;
		EXEC sp_trace_setevent @TraceID, 12, 15, @on;
		EXEC sp_trace_setevent @TraceID, 12, 16, @on;
		EXEC sp_trace_setevent @TraceID, 12, 17, @on;
		EXEC sp_trace_setevent @TraceID, 12, 18, @on;
		EXEC sp_trace_setevent @TraceID, 12, 26, @on;
		EXEC sp_trace_setevent @TraceID, 12, 31, @on;
		EXEC sp_trace_setevent @TraceID, 12, 35, @on;
		EXEC sp_trace_setevent @TraceID, 12, 48, @on;
		EXEC sp_trace_setevent @TraceID, 12, 60, @on;


	-- Set the Filters
        DECLARE @intfilter INT;
        DECLARE @bigintfilter BIGINT;
		IF @HostName IS NOT NULL
			EXEC sp_trace_setfilter @TraceID, 8, 0, 6, @HostName;-- N'SPIDER2'
	-- Set the trace status to start
        EXEC sp_trace_setstatus @TraceID, 1;

	-- display trace id for future references
	--select TraceID=@TraceID

        RETURN(0);
    END TRY
    BEGIN CATCH
        THROW;
        RETURN (-1);
    END CATCH;
END]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[datetime]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bit]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[bigint]" />
				</Entry>
				<Entry>
					<References Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@FilePath]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@maxfilesize]" />
				</Entry>
				<Entry>
					<References Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@DurationInMinutes]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry>
					<References Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@HostName]" />
				</Entry>
				<Entry />
				<Entry />
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@FilePath]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@maxfilesize]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[50]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bigint]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@DurationInMinutes]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[120]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[usp_PerformanceTuning_SetQureTrace].[@HostName]">
						<Property Name="DefaultExpressionScript">
							<Value><![CDATA[NULL]]></Value>
						</Property>
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[sys].[sysname]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Utility]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="CreateOffset" Value="511" />
				<Property Name="Length" Value="3650" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="&#xD;&#xA;&#xD;&#xA;/*&#xD;&#xA;This procedures starts a server side trace for the blocking report event.&#xD;&#xA;&#xD;&#xA;Parameters:&#xD;&#xA;@FilePath - The location of the trace file.  If you don't send any value it will use the path d:\trace.  Make&#xD;&#xA;sure that you have this path or always send the needed path.  You can also modify the code to have a different default path.&#xD;&#xA;&#xD;&#xA;@maxfilesize - As the name implies the trace file's maxsimum size&#xD;&#xA;&#xD;&#xA;@DurationInMinutes - How many minutes the trace will run until it will stop running aotumaticly&#xD;&#xA;&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;CREATE PROCEDURE [Utility].[usp_PerformanceTuning_SetQureTrace]&#xD;&#xA;    (&#xD;&#xA;      @FilePath NVARCHAR(150) = NULL ,&#xD;&#xA;      @maxfilesize BIGINT = 50 ,&#xD;&#xA;      @DurationInMinutes INT = 120,&#xD;&#xA;&#x9;  @HostName sysname = NULL&#xD;&#xA;    )&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlScalarFunction" Name="[Utility].[WordRepeatedNumTimes]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[varchar]" />
				</Entry>
				<Entry>
					<References Name="[Utility].[WordRepeatedNumTimes].[@TargetWord]" />
				</Entry>
				<Entry>
					<References Name="[Utility].[WordRepeatedNumTimes].[@SourceString]" />
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[
BEGIN
DECLARE @NumTimesRepeated int
 	,@CurrentStringPosition int
	,@LengthOfString int
	,@PatternStartsAtPosition int
	,@LengthOfTargetWord int
	,@NewSourceString varchar(8000)

	SET @LengthOfTargetWord = len(@TargetWord)
	SET @LengthOfString = len(@SourceString)
	SET @NumTimesRepeated = 0
	SET @CurrentStringPosition = 0
	SET @PatternStartsAtPosition = 0
	SET @NewSourceString = @SourceString

	WHILE len(@NewSourceString) >= @LengthOfTargetWord
	BEGIN

		SET @PatternStartsAtPosition = CHARINDEX (@TargetWord,@NewSourceString)
	
		IF @PatternStartsAtPosition <> 0
		BEGIN
			SET @NumTimesRepeated = @NumTimesRepeated + 1

			SET @CurrentStringPosition = @CurrentStringPosition + @PatternStartsAtPosition + @LengthOfTargetWord;

			SET @NewSourceString = SUBSTRING(@NewSourceString, @PatternStartsAtPosition + @LengthOfTargetWord, @LengthOfString);

		END
		ELSE
		BEGIN
			SET @NewSourceString = ''
		END
	
	END
	
	RETURN @NumTimesRepeated

END]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="CreateOffset" Value="175" />
							<Property Name="Length" Value="1280" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="--LISTING 3: T-SQL Code That Creates a Function to Count the Number of Times a String &#xD;&#xA;--Appears in Another String&#xD;&#xA;--http://sqlmag.com/t-sql/counting-instances-word-record&#xD;&#xA;CREATE FUNCTION Utility.WordRepeatedNumTimes (@SourceString varchar(8000),@TargetWord varchar(8000))&#xD;&#xA;RETURNS int&#xD;&#xA;AS" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[WordRepeatedNumTimes].[@SourceString]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="8000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[Utility].[WordRepeatedNumTimes].[@TargetWord]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="8000" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References Name="[Utility]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[int]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
	</Model>
</DataSchemaModel>